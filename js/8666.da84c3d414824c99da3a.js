(self.webpackChunkedge=self.webpackChunkedge||[]).push([[8666],{68666:(e,t,a)=>{"use strict";a.r(t),a.d(t,{ClipboardCopy:()=>A,ClipboardCopyAction:()=>k,ClipboardCopyButton:()=>b,ClipboardCopyVariant:()=>N,clipboardCopyFunc:()=>f});var i=a(8674),n=a(93345);a(11902);const o="pf-v5-c-clipboard-copy__actions-item",s="pf-v5-c-clipboard-copy__text",l="pf-m-expanded",d="pf-m-inline",p="pf-m-block",r="pf-m-code";var c=a(33774),h=a(45523),x=a(23285),m=a(65518);const y=(0,a(68419).w)({name:"CopyIcon",height:512,width:448,svgPath:"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z",yOffset:0,xOffset:0});var u=a(72583);const b=e=>{var{onClick:t,exitDelay:a=0,entryDelay:o=300,maxWidth:s="100px",position:l="top","aria-label":d="Copyable input",id:p,textId:r,children:c,variant:x="control",onTooltipHidden:m=()=>{},className:b}=e,C=(0,i.__rest)(e,["onClick","exitDelay","entryDelay","maxWidth","position","aria-label","id","textId","children","variant","onTooltipHidden","className"]);const g=n.createRef();return n.createElement(h.m,{trigger:"mouseenter focus click",triggerRef:g,exitDelay:a,entryDelay:o,maxWidth:s,position:l,"aria-live":"polite",aria:"none",content:n.createElement("div",null,c),onTooltipHidden:m},n.createElement(u.$n,Object.assign({type:"button",variant:x,onClick:t,"aria-label":d,className:b,id:p,"aria-labelledby":`${p} ${r}`},C,{ref:g}),n.createElement(y,null)))};b.displayName="ClipboardCopyButton";var C=a(89015);const g=e=>{var{onClick:t,id:a,textId:o,contentId:s,isExpanded:l=!1}=e,d=(0,i.__rest)(e,["onClick","id","textId","contentId","isExpanded"]);return n.createElement(u.$n,Object.assign({type:"button",variant:"control",onClick:t,id:a,"aria-labelledby":`${a} ${o}`,"aria-controls":s,"aria-expanded":l},d),n.createElement("div",{className:(0,c.A)("pf-v5-c-clipboard-copy__toggle-icon")},n.createElement(C.default,{"aria-hidden":"true"})))};g.displayName="ClipboardCopyToggle";class v extends n.Component{constructor(e){super(e)}render(){const e=this.props,{className:t,children:a,onChange:o,isReadOnly:s,isCode:l}=e,d=(0,i.__rest)(e,["className","children","onChange","isReadOnly","isCode"]);return n.createElement("div",Object.assign({suppressContentEditableWarning:!0,className:(0,c.A)("pf-v5-c-clipboard-copy__expandable-content",t),onInput:e=>o(e,e.target.innerText),contentEditable:!s},d),l?n.createElement("pre",{dir:"ltr"},a):a)}}v.displayName="ClipboardCopyExpanded",v.defaultProps={onChange:()=>{},className:"",isReadOnly:!1,isCode:!1};var E=a(31398);const f=(e,t)=>{try{navigator.clipboard.writeText(t.toString())}catch(e){console.warn("Clipboard API not found, this copy function will not work. This is likely because you're using an","unsupported browser or you're not using HTTPS. \n\nIf you're a developer building an application which needs","to support copying to the clipboard without the clipboard API, you'll have to create your own copy","function and pass it to the ClipboardCopy component as the onCopy prop. For more information see","https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard"),console.error(e)}};var N;!function(e){e.inline="inline",e.expansion="expansion",e.inlineCompact="inline-compact"}(N||(N={}));class A extends n.Component{constructor(e){super(e),this.timer=null,this.componentDidUpdate=(e,t)=>{if(e.children!==this.props.children){const e=this.props.children;this.setState({text:e,textWhenExpanded:e})}},this.componentWillUnmount=()=>{this.timer&&window.clearTimeout(this.timer)},this.expandContent=e=>{this.setState((e=>({expanded:!e.expanded})))},this.updateText=(e,t)=>{this.setState({text:t}),this.props.onChange(e,t)},this.updateTextWhenExpanded=(e,t)=>{this.setState({textWhenExpanded:t}),this.props.onChange(e,t)},this.render=()=>{const e=this.props,{isExpanded:t,onChange:a,isReadOnly:h,isCode:y,isBlock:u,exitDelay:C,maxWidth:f,entryDelay:N,onCopy:k,hoverTip:T,clickTip:_,textAriaLabel:W,toggleAriaLabel:$,variant:I,position:S,className:D,additionalActions:O,ouiaId:w,ouiaSafe:H}=e,R=(0,i.__rest)(e,["isExpanded","onChange","isReadOnly","isCode","isBlock","exitDelay","maxWidth","entryDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","variant","position","className","additionalActions","ouiaId","ouiaSafe"]),P="text-input-";return n.createElement("div",Object.assign({className:(0,c.A)("pf-v5-c-clipboard-copy","inline-compact"===I&&d,u&&p,this.state.expanded&&l,D)},R,(0,E.getOUIAProps)(A.displayName,w,H)),"inline-compact"===I&&n.createElement(m.N,{prefix:""},(e=>n.createElement(n.Fragment,null,!y&&n.createElement("span",{className:(0,c.A)(s),id:`${P}${e}`},this.state.text),y&&n.createElement("code",{className:(0,c.A)(s,r),id:`${P}${e}`},this.state.text),n.createElement("span",{className:(0,c.A)("pf-v5-c-clipboard-copy__actions")},n.createElement("span",{className:(0,c.A)(o)},n.createElement(b,{variant:"plain",exitDelay:C,entryDelay:N,maxWidth:f,position:S,id:`copy-button-${e}`,textId:`text-input-${e}`,"aria-label":T,onClick:e=>{k(e,this.state.text),this.setState({copied:!0})},onTooltipHidden:()=>this.setState({copied:!1})},this.state.copied?_:T)),O&&O)))),"inline-compact"!==I&&n.createElement(m.N,{prefix:""},(e=>n.createElement(n.Fragment,null,n.createElement("div",{className:(0,c.A)("pf-v5-c-clipboard-copy__group")},"expansion"===I&&n.createElement(g,{isExpanded:this.state.expanded,onClick:e=>{this.expandContent(e),this.state.expanded?this.setState({text:this.state.textWhenExpanded}):this.setState({textWhenExpanded:this.state.text})},id:`toggle-${e}`,textId:`${P}${e}`,contentId:`content-${e}`,"aria-label":$}),n.createElement(x.ks,Object.assign({readOnlyVariant:h||this.state.expanded?"default":void 0,onChange:this.updateText,value:this.state.expanded?this.state.textWhenExpanded:this.state.text,id:`text-input-${e}`,"aria-label":W},y&&{dir:"ltr"})),n.createElement(b,{exitDelay:C,entryDelay:N,maxWidth:f,position:S,id:`copy-button-${e}`,textId:`text-input-${e}`,"aria-label":T,onClick:e=>{k(e,this.state.expanded?this.state.textWhenExpanded:this.state.text),this.setState({copied:!0})},onTooltipHidden:()=>this.setState({copied:!1})},this.state.copied?_:T)),this.state.expanded&&n.createElement(v,{isReadOnly:h,isCode:y,id:`content-${e}`,onChange:this.updateTextWhenExpanded},this.state.text)))))};const t=Array.isArray(this.props.children)?this.props.children.join(""):this.props.children;this.state={text:t,expanded:this.props.isExpanded,copied:!1,textWhenExpanded:t}}}A.displayName="ClipboardCopy",A.defaultProps={hoverTip:"Copy to clipboard",clickTip:"Successfully copied to clipboard!",isReadOnly:!1,isExpanded:!1,isCode:!1,variant:"inline",position:h.Z.top,maxWidth:"150px",exitDelay:1500,entryDelay:300,onCopy:f,onChange:()=>{},textAriaLabel:"Copyable input",toggleAriaLabel:"Show content",additionalActions:null,ouiaSafe:!0};const k=e=>{var{children:t=null,className:a=""}=e,s=(0,i.__rest)(e,["children","className"]);return n.createElement("span",Object.assign({className:(0,c.A)(o,a)},s),t)};k.displayName="ClipboardCopyAction"},11902:()=>{}}]);