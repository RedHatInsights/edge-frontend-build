{"version":3,"file":"js/Groups.f06f49868e87b691b0e7.js","mappings":"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","sources":["webpack:///./node_modules/@data-driven-forms/pf4-component-mapper/esm/dual-list-context/dual-list-context.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/parse-condition/parse-condition.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/Groups/CreateGroupModal.js","webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/GroupTable.js","webpack:///./src/Routes/Groups/Groups.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/api/groups/index.js","webpack:///./src/components/Modal.js","webpack:///./src/utils/apiWithToast.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/lodash/isEmpty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { createContext } from 'react';\nvar DualListContext = /*#__PURE__*/createContext({});\nexport default DualListContext;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport lodashIsEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nvar isEmptyValue = function isEmptyValue(value) {\n  return typeof value === 'number' || value === true ? false : lodashIsEmpty(value);\n};\n\nvar fieldCondition = function fieldCondition(value, config) {\n  if (config.isNotEmpty) {\n    return !isEmptyValue(value);\n  }\n\n  if (config.isEmpty) {\n    return isEmptyValue(value);\n  }\n\n  if (config.pattern) {\n    var regExpPattern = RegExp(config.pattern, config.flags);\n    return config.notMatch ? !regExpPattern.test(value) : regExpPattern.test(value);\n  }\n\n  if (typeof config.is === 'function') {\n    return config.is(value, config);\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThan')) {\n    return value > config.greaterThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThanOrEqualTo')) {\n    return value >= config.greaterThanOrEqualTo;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThan')) {\n    return value < config.lessThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThanOrEqualTo')) {\n    return value <= config.lessThanOrEqualTo;\n  }\n\n  var isMatched = Array.isArray(config.is) ? !!config.is.includes(value) : value === config.is;\n  return config.notMatch ? !isMatched : isMatched;\n};\n\nexport var parseCondition = function parseCondition(condition, values, field) {\n  var positiveResult = _objectSpread(_objectSpread({\n    visible: true\n  }, condition.then), {}, {\n    result: true\n  });\n\n  var negativeResult = _objectSpread(_objectSpread({\n    visible: false\n  }, condition[\"else\"]), {}, {\n    result: false\n  });\n\n  if (Array.isArray(condition)) {\n    return !condition.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref) {\n      var result = _ref.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.and) {\n    return !condition.and.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref2) {\n      var result = _ref2.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.sequence) {\n    return condition.sequence.reduce(function (acc, curr) {\n      var result = parseCondition(curr, values);\n      return {\n        sets: [].concat(_toConsumableArray(acc.sets), _toConsumableArray(result.set ? [result.set] : [])),\n        visible: acc.visible || result.visible,\n        result: acc.result || result.result\n      };\n    }, _objectSpread(_objectSpread({}, negativeResult), {}, {\n      sets: []\n    }));\n  }\n\n  if (condition.or) {\n    return condition.or.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref3) {\n      var result = _ref3.result;\n      return result === true;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.not) {\n    return !parseCondition(condition.not, values).result ? positiveResult : negativeResult;\n  }\n\n  var finalWhen = typeof condition.when === 'function' ? condition.when(field) : condition.when;\n\n  if (typeof finalWhen === 'string') {\n    return fieldCondition(get(values, finalWhen), condition) ? positiveResult : negativeResult;\n  }\n\n  if (Array.isArray(finalWhen)) {\n    return finalWhen.map(function (fieldName) {\n      return fieldCondition(get(values, typeof fieldName === 'function' ? fieldName(field) : fieldName), condition);\n    }).find(function (condition) {\n      return !!condition;\n    }) ? positiveResult : negativeResult;\n  }\n\n  return negativeResult;\n};\nexport default parseCondition;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport {\n  createGroup,\n  addDevicesToGroup,\n  validateGroupName,\n} from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value = '') => {\n  // do not fire validation request for empty name\n  if (value.length === 0) {\n    return undefined;\n  }\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    // async validator has to throw error, not return it\n    throw 'Group name already exists';\n  }\n};\n\nconst validatorMapper = {\n  groupName: () => asyncGroupNameValidation,\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        // async validator has to be first in the list\n        { type: 'groupName' },\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n    },\n  ],\n};\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  deviceIds,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const handleCreateGroup = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${values.name} has been created successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to create group' },\n    };\n    return apiWithToast(dispatch, () => createGroup(values), statusMessages);\n  };\n\n  const handleAddDevicesToNewGroup = async (values) => {\n    const { ID } = await handleCreateGroup(values);\n\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to add system to group' },\n    };\n\n    apiWithToast(\n      dispatch,\n      () => addDevicesToGroup(parseInt(ID), deviceIds),\n      statusMessages\n    );\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={createGroupSchema}\n      onSubmit={deviceIds ? handleAddDevicesToNewGroup : handleCreateGroup}\n      reloadData={reloadData}\n      validatorMapper={validatorMapper}\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  deviceIds: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React, { useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Bullseye, Spinner, Tooltip } from '@patternfly/react-core';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateDeviceModal\" */ '../Devices/UpdateDeviceModal'\n  )\n);\n\nconst filters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  // {\n  //   label: 'Image',\n  //   type: 'text',\n  // },\n];\n\nconst columns = [\n  { title: 'Name', type: 'name', sort: true },\n  { title: 'Systems', type: 'name', sort: false },\n  { title: 'Image', type: 'name', sort: false },\n];\n\nconst GroupTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  handleCreateModal,\n  handleRenameModal,\n  handleDeleteModal,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n  fetchGroups,\n}) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n\n  const actionResolver = (rowData) => {\n    if (!rowData?.rowInfo) return [];\n    const { id, title, devices, devicesImageInfo } = rowData.rowInfo;\n    const hasUpdate = devicesImageInfo?.some((image) => image.UpdateAvailable);\n\n    return (\n      id && [\n        {\n          title: 'Rename',\n          onClick: () => handleRenameModal(id, title),\n        },\n        {\n          title: 'Delete',\n          onClick: () => handleDeleteModal(id, title),\n        },\n        {\n          title: 'Update',\n          onClick: () =>\n            setUpdateModal((prevState) => ({\n              ...prevState,\n              deviceData: devices.map((device) => ({\n                id: device.UUID,\n                display_name: device.Name,\n              })),\n              imageId: devices.find((device) => device?.ImageID).ImageID,\n              isOpen: true,\n            })),\n          isDisabled:\n            devices.length > 0\n              ? !(rowData?.rowInfo?.hasValidUpdate && hasUpdate)\n              : true,\n        },\n      ]\n    );\n  };\n\n  const buildRows = data?.map((rowData) => {\n    const { ID, Name, Devices } = rowData.DeviceGroup;\n    let { DevicesImageInfo } = rowData;\n    if (!DevicesImageInfo) {\n      DevicesImageInfo = [];\n    }\n    const systems = Devices ?? [];\n    const image = (\n      <div>\n        <Tooltip\n          content={\n            <div>\n              {DevicesImageInfo.map((device, index) => (\n                <p key={index}>{device.Name}</p>\n              ))}\n            </div>\n          }\n        >\n          <span>Multiple images</span>\n        </Tooltip>\n      </div>\n    );\n\n    return {\n      rowInfo: {\n        id: ID,\n        title: Name,\n        image:\n          DevicesImageInfo.length === 0\n            ? '-'\n            : DevicesImageInfo.length > 1\n            ? 'Multiple images'\n            : DevicesImageInfo[0]?.Name,\n        devicesImageInfo: rowData.DevicesImageInfo,\n        devices: Devices,\n        hasValidUpdate: rowData?.DeviceGroup?.ValidUpdate,\n      },\n      cells: [\n        {\n          title: <Link to={`${paths.fleetManagement}/${ID}`}>{Name}</Link>,\n        },\n        {\n          title: systems.length,\n        },\n        {\n          title:\n            DevicesImageInfo.length === 0\n              ? '-'\n              : DevicesImageInfo.length > 1\n              ? image\n              : DevicesImageInfo[0]?.Name,\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchGroups}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columns}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        emptyFilterState={{\n          title: 'No matching groups found',\n          body: 'To continue, edit your filter settings and try again',\n        }}\n        toolbarButtons={[\n          {\n            title: 'Create group',\n            click: handleCreateModal,\n          },\n        ]}\n        hasModalSubmitted={hasModalSubmitted}\n        setHasModalSubmitted={setHasModalSubmitted}\n      />\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateModal((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            refreshTable={async () => {\n              await fetchGroups();\n              setHasModalSubmitted(true);\n            }}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nGroupTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  closeModal: PropTypes.func,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  handleRenameModal: PropTypes.func,\n  handleDeleteModal: PropTypes.func,\n  handleCreateModal: PropTypes.func,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  fetchGroups: PropTypes.func,\n};\n\nexport default GroupTable;\n","import React, { useState } from 'react';\nimport { Flex } from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport GroupTable from './GroupTable';\nimport Empty from '../../components/Empty';\nimport { getGroups } from '../../api/groups';\nimport CreateGroupModal from './CreateGroupModal';\nimport RenameGroupModal from './RenameGroupModal';\nimport DeleteGroupModal from './DeleteGroupModal';\nimport useApi from '../../hooks/useApi';\nimport { useLocation } from 'react-router-dom';\nimport { emptyStateNoFilters } from '../../utils';\n\nconst Groups = () => {\n  const { search } = useLocation();\n  const [response, fetchGroups] = useApi({\n    api: getGroups,\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n\n  const [modalState, setModalState] = useState({ id: null, name: '' });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const handleRenameModal = (id, name) => {\n    setModalState({ id, name });\n    setIsRenameModalOpen(true);\n  };\n\n  const handleDeleteModal = (id, name) => {\n    setModalState({ id, name });\n    setIsDeleteModalOpen(true);\n  };\n\n  const reloadData = async () => {\n    await fetchGroups();\n    setHasModalSubmitted(true);\n  };\n\n  return (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Groups\" />\n      </PageHeader>\n      <section className=\"edge-groups pf-l-page__main-section pf-c-page__main-section\">\n        {!emptyStateNoFilters(isLoading, data?.count, search) ? (\n          <GroupTable\n            data={data?.data || []}\n            count={data?.count}\n            isLoading={isLoading}\n            hasError={hasError}\n            handleRenameModal={handleRenameModal}\n            handleDeleteModal={handleDeleteModal}\n            handleCreateModal={() => setIsCreateModalOpen(true)}\n            hasModalSubmitted={hasModalSubmitted}\n            setHasModalSubmitted={setHasModalSubmitted}\n            fetchGroups={fetchGroups}\n          />\n        ) : (\n          <Flex justifyContent={{ default: 'justifyContentCenter' }}>\n            <Empty\n              icon=\"plus\"\n              title=\"Create a system group\"\n              body=\"Create system groups to help manage your systems more effectively.\"\n              primaryAction={{\n                text: 'Create group',\n                click: () => setIsCreateModalOpen(true),\n              }}\n              secondaryActions={[\n                {\n                  type: 'link',\n                  title: 'Learn more about system groups',\n                  link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/working_with_systems_in_the_edge_management_application/index',\n                },\n              ]}\n            />\n          </Flex>\n        )}\n      </section>\n\n      {isCreateModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateModalOpen}\n          setIsModalOpen={setIsCreateModalOpen}\n          reloadData={reloadData}\n        />\n      )}\n      {isRenameModalOpen && (\n        <RenameGroupModal\n          isModalOpen={isRenameModalOpen}\n          setIsModalOpen={setIsRenameModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n      {isDeleteModalOpen && (\n        <DeleteGroupModal\n          isModalOpen={isDeleteModalOpen}\n          setIsModalOpen={setIsDeleteModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const createGroup = (payload) => {\n  return instance.post(`${EDGE_API}/device-groups/`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const getGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups?${q}`);\n};\n\nexport const getGroupById = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups/${id}/view?${q}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n  return instance.put(`${EDGE_API}/device-groups/${id}`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const deleteGroupById = (id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${id}`);\n};\n\nexport const addDevicesToGroup = (groupId, devices) => {\n  return instance.post(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    ID: groupId,\n    Devices: devices,\n  });\n};\n\nexport const removeDevicesFromGroup = (groupId, devices) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    data: {\n      ID: groupId,\n      Devices: devices,\n    },\n  });\n};\n\nexport const removeDeviceFromGroupById = (groupId, id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices/${id}`);\n};\n\nexport const validateGroupName = (name) => {\n  return instance.get(`${EDGE_API}/device-groups/checkName/${name}`);\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n  validatorMapper,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        validatorMapper={validatorMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  validatorMapper: PropTypes.object,\n};\n\nexport default RepoModal;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      hasInfo &&\n        dispatch({\n          ...addNotification({\n            variant: 'info',\n            ...statusMessages.onInfo,\n          }),\n        });\n      hasSuccess &&\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      return response;\n    } catch (err) {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${statusMessages.onError.description}: ${err.Title}`\n            : statusMessages.onError.description,\n        }),\n      });\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["createContext","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","isEmptyValue","value","fieldCondition","config","isNotEmpty","isEmpty","pattern","regExpPattern","RegExp","flags","notMatch","test","is","prototype","hasOwnProperty","call","greaterThan","greaterThanOrEqualTo","lessThan","lessThanOrEqualTo","isMatched","Array","isArray","includes","parseCondition","condition","values","field","positiveResult","visible","then","result","negativeResult","map","some","_ref","and","_ref2","sequence","reduce","acc","curr","sets","concat","set","or","_ref3","not","finalWhen","when","fieldName","find","__assign","assign","t","s","n","p","this","_a","className","title","pageHeaderTitleClasses","Title","headingLevel","size","children","asyncGroupNameValidation","undefined","validateGroupName","data","isValid","validatorMapper","groupName","createGroupSchema","fields","component","componentTypes","name","label","helperText","isRequired","autoFocus","validate","type","validatorTypes","threshold","nameValidator","CreateGroupModal","isModalOpen","setIsModalOpen","deviceIds","reloadData","dispatch","useDispatch","handleCreateGroup","statusMessages","onSuccess","description","onError","apiWithToast","createGroup","handleAddDevicesToNewGroup","ID","addDevicesToGroup","parseInt","isOpen","closeModal","submitLabel","schema","onSubmit","propTypes","PropTypes","WarningIcon","color","warningColor","DeleteGroupModal","modalState","id","titleIconVariant","variant","deleteGroupById","UpdateDeviceModal","React","filters","columns","sort","GroupTable","count","isLoading","hasError","handleCreateModal","handleRenameModal","handleDeleteModal","hasModalSubmitted","setHasModalSubmitted","fetchGroups","history","useHistory","pathname","useLocation","useState","deviceData","imageData","updateModal","setUpdateModal","buildRows","rowData","DeviceGroup","Name","Devices","DevicesImageInfo","systems","image","Tooltip","content","device","index","rowInfo","devicesImageInfo","devices","hasValidUpdate","ValidUpdate","cells","Link","to","paths","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","rows","actionResolver","hasUpdate","UpdateAvailable","onClick","prevState","UUID","display_name","imageId","ImageID","isDisabled","areActionsDisabled","defaultSort","direction","emptyFilterState","body","toolbarButtons","click","Suspense","fallback","Bullseye","Spinner","navigateBack","refreshTable","search","useApi","api","getGroups","tableReload","response","setModalState","isCreateModalOpen","setIsCreateModalOpen","isRenameModalOpen","setIsRenameModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","PageHeader","PageHeaderTitle","emptyStateNoFilters","Flex","justifyContent","default","Empty","icon","primaryAction","text","secondaryActions","link","RenameGroupModal","initialValues","updateGroupById","payload","instance","EDGE_API","Type","query","q","getTableParams","getGroupById","groupId","removeDevicesFromGroup","removeDeviceFromGroupById","RepoModal","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","hasSuccess","hasInfo","onInfo","fetchData","addNotification","arrayPush","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","Symbol","isArguments","spreadableSymbol","isConcatSpreadable","baseKeys","getTag","isArrayLike","isBuffer","isPrototype","isTypedArray","splice","tag","_objectWithoutProperties","excluded","sourceSymbolKeys","indexOf","propertyIsEnumerable"],"sourceRoot":""}