{"version":3,"file":"js/4210.6eeb30ee083858be303b.js","mappings":"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","sources":["webpack:///./src/store/deviceSummary.js","webpack:///./src/store/images.js","webpack:///./src/store/edgeImages.js","webpack:///./src/store/edgeImageSets.js","webpack:///./src/store/imageStatus.js","webpack:///./src/store/imageDetail.js","webpack:///./src/store/imageSetDetail.js","webpack:///./src/store/edgeImagePackages.js","webpack:///./src/store/groups.js","webpack:///./src/store/threshold.js","webpack:///./src/store/devicesInfo.js","webpack:///./src/store/canariesInfo.js","webpack:///./src/components/StatusIcon.js","webpack:///./src/components/SecureIcon.js","webpack:///./src/store/groupsDetail.js","webpack:///./src/store/groupDevicesInfo.js","webpack:///./src/store/createImage.js","webpack:///./src/store/deviceTable.js","webpack:///./src/Routes/DeviceDetail/UpdateImageModal.js","webpack:///./src/api/devices/index.js","webpack:///./src/api/index.js","webpack:///./src/constants/index.js","webpack:///./src/store/action-types.js","webpack:///./src/store/actions.js","webpack:///./src/utils/index.js"],"sourcesContent":["import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICE_SUMMARY } from './action-types';\n\nconst initialState = {};\n\nconst loadDeviceSummaryPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadDeviceSummaryFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadDeviceSummaryRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No system summary data to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICE_SUMMARY}_PENDING`]: loadDeviceSummaryPending,\n    [`${LOAD_DEVICE_SUMMARY}_FULFILLED`]: loadDeviceSummaryFulfilled,\n    [`${LOAD_DEVICE_SUMMARY}_REJECTED`]: loadDeviceSummaryRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_ACTIVE_IMAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadActiveImagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadActiveImagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadActiveImagesRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No images to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_ACTIVE_IMAGES}_PENDING`]: loadActiveImagesPending,\n    [`${LOAD_ACTIVE_IMAGES}_FULFILLED`]: loadActiveImagesFulfilled,\n    [`${LOAD_ACTIVE_IMAGES}_REJECTED`]: loadActiveImagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImagesRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGES}_PENDING`]: loadEdgeImagesPending,\n    [`${LOAD_EDGE_IMAGES}_FULFILLED`]: loadEdgeImagesFulfilled,\n    [`${LOAD_EDGE_IMAGES}_REJECTED`]: loadEdgeImagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGE_SETS } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImageSetsPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImageSetsFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImageSetsRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGE_SETS}_PENDING`]: loadEdgeImageSetsPending,\n    [`${LOAD_EDGE_IMAGE_SETS}_FULFILLED`]: loadEdgeImageSetsFulfilled,\n    [`${LOAD_EDGE_IMAGE_SETS}_REJECTED`]: loadEdgeImageSetsRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_STATUS } from './action-types';\n\nconst initialState = {};\n\nconst loadImageStatusPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageStatusFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageStatusRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No image status to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_STATUS}_PENDING`]: loadImageStatusPending,\n    [`${LOAD_IMAGE_STATUS}_FULFILLED`]: loadImageStatusFulfilled,\n    [`${LOAD_IMAGE_STATUS}_REJECTED`]: loadImageStatusRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_DETAIL } from './action-types';\n\nconst initialState = {};\n\nconst loadImageDetailPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageDetailFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageDetailRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No image detail to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_DETAIL}_PENDING`]: loadImageDetailPending,\n    [`${LOAD_IMAGE_DETAIL}_FULFILLED`]: loadImageDetailFulfilled,\n    [`${LOAD_IMAGE_DETAIL}_REJECTED`]: loadImageDetailRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_SET_DETAIL } from './action-types';\n\nconst initialState = {};\n\nconst loadImageSetDetailPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageSetDetailFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageSetDetailRejected = (state, { payload }) => ({\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_SET_DETAIL}_PENDING`]: loadImageSetDetailPending,\n    [`${LOAD_IMAGE_SET_DETAIL}_FULFILLED`]: loadImageSetDetailFulfilled,\n    [`${LOAD_IMAGE_SET_DETAIL}_REJECTED`]: loadImageSetDetailRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGE_PACKAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImagePackagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImagePackagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImagePackagesRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_PENDING`]: loadEdgeImagePackagesPending,\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_FULFILLED`]: loadEdgeImagePackagesFulfilled,\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_REJECTED`]: loadEdgeImagePackagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUPS } from './action-types';\n\nconst initialState = {};\n\nconst loadGroupsPending = (state) => ({\n  ...state,\n  groups: [],\n  isLoading: true,\n});\nconst loadGroupsFulfilled = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  groups: payload?.results || [],\n  meta: payload?.meta || {},\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUPS}_PENDING`]: loadGroupsPending,\n    [`${LOAD_GROUPS}_FULFILLED`]: loadGroupsFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_TRESHOLD } from './action-types';\n\nconst initialState = {};\n\nconst loadThresholdPending = (state) => ({\n  ...state,\n  threshold: {},\n  isLoading: true,\n});\nconst loadThresholdFulfilled = (state, { payload }) => ({\n  ...state,\n  threshold: payload?.results || {},\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_TRESHOLD}_PENDING`]: loadThresholdPending,\n    [`${LOAD_TRESHOLD}_FULFILLED`]: loadThresholdFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadDevicesInfoPending = (state) => ({\n  ...state,\n  devicesInfo: {},\n  isLoading: true,\n});\nconst loadDevicesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  devicesInfo: payload?.results || {},\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICES_INFO}_PENDING`]: loadDevicesInfoPending,\n    [`${LOAD_DEVICES_INFO}_FULFILLED`]: loadDevicesInfoFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_CANARIES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadCanariesInfoPending = (state) => ({\n  ...state,\n  canariesInfo: [],\n  isLoading: true,\n});\nconst loadCanariesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  canariesInfo: payload?.results || [],\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_CANARIES_INFO}_PENDING`]: loadCanariesInfoPending,\n    [`${LOAD_CANARIES_INFO}_FULFILLED`]: loadCanariesInfoFulfilled,\n  },\n  initialState\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { statusToIcon, statusMapper } from '../constants';\nimport { UnknownIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst StatusIcon = ({ status, ...props }) => {\n  const Icon = statusToIcon?.[status]?.icon || UnknownIcon;\n  return (\n    <Tooltip content={statusToIcon?.[status]?.title}>\n      <Icon {...props} color={statusToIcon?.[status]?.color} />\n    </Tooltip>\n  );\n};\n\nStatusIcon.propTypes = {\n  status: PropTypes.oneOf(statusMapper),\n};\n\nexport default StatusIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LockIcon, LockOpenIcon } from '@patternfly/react-icons';\n\nconst SecureIcon = ({ isSecure, ...props }) => {\n  const Icon = isSecure ? LockIcon : LockOpenIcon;\n  return <Icon {...props} />;\n};\n\nSecureIcon.propTypes = {\n  isSecure: PropTypes.bool,\n};\n\nSecureIcon.defaultProps = {\n  isSecure: false,\n};\n\nexport default SecureIcon;\n","import React from 'react';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUP_DETAIL, CLEAN_ENTITIES } from './action-types';\nimport { StatusIcon } from '../components';\n\nconst initialState = {};\n\nconst loadGroupsPending = (state) => ({\n  ...state,\n  isLoading: true,\n});\nconst loadGroupsFulfilled = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  name: payload?.name || '',\n  uuid: payload?.uuid || '',\n  devices: payload?.results || [],\n  meta: payload?.meta || {},\n});\n\nconst onEntitiesLoaded = (state) => {\n  const [name, updated] =\n    state?.columns?.filter(\n      ({ key }) => key === 'display_name' || key === 'updated'\n    ) || [];\n  return {\n    ...state,\n    columns: [\n      name,\n      { key: 'version', title: 'Version' },\n      updated,\n      {\n        key: 'status',\n        title: 'Status',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (status) => <StatusIcon status={status} />,\n      },\n    ].filter(Boolean),\n    loaded: true,\n  };\n};\n\nexport const systemsList = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [CLEAN_ENTITIES]: () => ({ loaded: false }),\n  });\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUP_DETAIL}_PENDING`]: loadGroupsPending,\n    [`${LOAD_GROUP_DETAIL}_FULFILLED`]: loadGroupsFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUP_DEVICES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadGroupDevicesInfoPending = (state) => ({\n  ...state,\n  devicesInfo: {},\n  isLoading: true,\n});\nconst loadGroupDevicesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  devicesInfo: payload,\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUP_DEVICES_INFO}_PENDING`]: loadGroupDevicesInfoPending,\n    [`${LOAD_GROUP_DEVICES_INFO}_FULFILLED`]: loadGroupDevicesInfoFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { CREATE_NEW_IMAGE } from './action-types';\n\nconst initialState = {};\n\nconst createNewImagePending = () => ({\n  isLoading: true,\n  hasError: false,\n  error: null,\n});\n\nconst createNewImageFulfilled = () => {\n  return {\n    isLoading: false,\n    hasError: false,\n    error: null,\n  };\n};\n\nconst createNewImageRejected = (_state, { payload }) => ({\n  isLoading: false,\n  hasError: true,\n  error: payload,\n});\n\nconst createNewImageReset = () => ({\n  isLoading: false,\n  hasError: false,\n  error: null,\n});\n\nexport default applyReducerHash(\n  {\n    [`${CREATE_NEW_IMAGE}_PENDING`]: createNewImagePending,\n    [`${CREATE_NEW_IMAGE}_FULFILLED`]: createNewImageFulfilled,\n    [`${CREATE_NEW_IMAGE}_REJECTED`]: createNewImageRejected,\n    [`${CREATE_NEW_IMAGE}_RESET`]: createNewImageReset,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICE_TABLE } from './action-types';\n\nconst initialState = {};\n\nconst loadDeviceTablePending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadDeviceTableFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadDeviceTableRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICE_TABLE}_PENDING`]: loadDeviceTablePending,\n    [`${LOAD_DEVICE_TABLE}_FULFILLED`]: loadDeviceTableFulfilled,\n    [`${LOAD_DEVICE_TABLE}_REJECTED`]: loadDeviceTableRejected,\n  },\n  initialState\n);\n","import React, { useEffect, useContext } from 'react';\nimport {\n  Modal,\n  Button,\n  Text,\n  TextContent,\n  TextListItem,\n  TextList,\n  TextVariants,\n  TextListVariants,\n  TextListItemVariants,\n  Backdrop,\n  Bullseye,\n  Spinner,\n} from '@patternfly/react-core';\nimport { imageTypeMapper, releaseMapper } from '../../constants';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { imageDetailReducer } from '../../store/reducers';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport {\n  createNewImage,\n  addImageToPoll,\n  loadImageDetail,\n  loadEdgeImageSets,\n} from '../../store/actions';\nimport { getEdgeImageStatus } from '../../api/images';\n\nconst UpdateImageModal = ({ updateCveModal, setUpdateCveModal, setReload }) => {\n  const dispatch = useDispatch();\n\n  const { getRegistry } = useContext(RegistryContext);\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({\n      data: imageDetailReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageDetailReducer,\n    });\n    updateCveModal?.imageId &&\n      loadImageDetail(dispatch, updateCveModal?.imageId);\n    return () => registered();\n  }, [dispatch]);\n\n  const handleUpdateModal = () => {\n    const payload = {\n      Id: data?.image?.ID,\n      description: data?.image?.Description,\n      name: data?.image?.Name,\n      version: data?.image?.Version + 1,\n      architecture: 'x86_64',\n      credentials: data?.image?.Installer.SshKey,\n      username: data?.image?.Installer.Username,\n      imageType: data?.image?.OutputTypes,\n      'selected-packages': data?.image?.Packages?.map((pack) => ({\n        name: pack.Name,\n      })),\n      release: data?.image?.Distribution,\n    };\n    handleClose();\n    setReload(true);\n    createNewImage(dispatch, payload, (resp) => {\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          title: 'Updating image',\n          description: `${resp.value.Name} image was added to the queue.`,\n        }),\n        meta: {\n          polling: {\n            id: `FETCH_IMAGE_${resp.value.ID}_BUILD_STATUS`,\n            fetcher: () => getEdgeImageStatus(resp.value.ID),\n            condition: (resp) => {\n              switch (resp.Status) {\n                case 'BUILDING':\n                  return [true, ''];\n                case 'ERROR':\n                  return [false, 'failure'];\n                default:\n                  return [false, 'success'];\n              }\n            },\n            onEvent: {\n              failure: [\n                (dispatch) =>\n                  dispatch(\n                    addNotification({\n                      variant: 'danger',\n                      title: 'Image build failed',\n                      description: `${resp.value.Name} image build is completed unsuccessfully`,\n                    })\n                  ),\n              ],\n              success: [\n                (dispatch) =>\n                  dispatch(\n                    addNotification({\n                      variant: 'success',\n                      title: 'Image is ready',\n                      description: `${resp.value.Name} image build is completed`,\n                    })\n                  ),\n                (dispatch) => loadEdgeImageSets(dispatch),\n              ],\n            },\n          },\n        },\n      });\n      loadEdgeImageSets(dispatch);\n      dispatch(\n        addImageToPoll({ name: data?.image?.Name, id: data?.image?.ID })\n      );\n    });\n  };\n\n  const handleClose = () => {\n    setUpdateCveModal((prevState) => ({ ...prevState, isOpen: false }));\n  };\n\n  return data ? (\n    <Modal\n      variant=\"medium\"\n      title={`Update image: ${data?.image?.Name}`}\n      description=\"Review the information and click Update image to start the build process\"\n      isOpen={updateCveModal.isOpen}\n      onClose={handleClose}\n      actions={[\n        <Button key=\"confirm\" variant=\"primary\" onClick={handleUpdateModal}>\n          Update Image\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={handleClose}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        <TextListItem component={TextVariants.h3}>\n          <Text component={'b'}>Details</Text>\n        </TextListItem>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>Name</TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {data?.image?.Name}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Version\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {data?.image?.Version + 1}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Description\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {data?.image?.Description}\n          </TextListItem>\n        </TextList>\n        <TextListItem component={TextVariants.h3}>\n          <Text component={'b'}>Output</Text>\n        </TextListItem>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>\n            Release\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {releaseMapper[data?.image?.Distribution]}\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dt}>\n            Output type\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {imageTypeMapper[data?.image?.ImageType]}\n          </TextListItem>\n        </TextList>\n        <TextListItem component={TextVariants.h3}>\n          <Text component={'b'}>Packages</Text>\n        </TextListItem>\n        <TextList component={TextListVariants.dl}>\n          <TextListItem component={TextListItemVariants.dt}>\n            Updated\n          </TextListItem>\n          <TextListItem\n            className=\"pf-u-pl-lg\"\n            component={TextListItemVariants.dd}\n          >\n            {updateCveModal?.cveCount}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </Modal>\n  ) : (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  );\n};\n\nUpdateImageModal.propTypes = {\n  updateCveModal: PropTypes.shape({\n    isOpen: PropTypes.bool.isRequired,\n    imageId: PropTypes.string,\n    cveCount: PropTypes.number,\n  }).isRequired,\n  setUpdateCveModal: PropTypes.func.isRequired,\n  setReload: PropTypes.bool,\n};\n\nexport default UpdateImageModal;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getDevice = (id) => {\n  return instance.get(`${EDGE_API}/devices/${id}`);\n};\n\nexport const getDeviceUpdates = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/${id}?${q}`);\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","export const IMAGE_BUILDER_API = '/api/image-builder/v1';\nexport const EDGE_API = '/api/edge/v1';\nexport const CONTENT_SOURCES_API = '/api/content-sources/v1';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getTableParams = (q) => {\n  if (q === undefined) {\n    return '';\n  }\n  const query = Object.keys(q).reduce((acc, curr) => {\n    let value = undefined;\n    if (\n      typeof q[curr] === 'object' &&\n      typeof q[curr].length === 'number' &&\n      q[curr].length > 0\n    ) {\n      value = q[curr].reduce(\n        (multiVals, val) =>\n          multiVals === '' ? `${curr}=${val}` : `${multiVals}&${curr}=${val}`,\n        ''\n      );\n    }\n    if (['string', 'number'].includes(typeof q[curr]) && q[curr] !== '') {\n      value = `${curr}=${q[curr]}`;\n    }\n    return value === undefined\n      ? acc\n      : acc === ''\n      ? `${value}`\n      : `${acc}&${value}`;\n  }, '');\n\n  return query;\n};\n","import {\n  BellIcon,\n  CheckCircleIcon,\n  CircleNotchIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  PauseCircleIcon,\n  PlusCircleIcon,\n  UnknownIcon,\n  RepositoryIcon,\n  SearchIcon,\n  ModuleIcon,\n  CubeIcon,\n  TimesCircleIcon,\n  InProgressIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\n\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport successColor from '@patternfly/react-tokens/dist/esm/global_success_color_100';\nimport infoColor from '@patternfly/react-tokens/dist/esm/global_info_color_100';\nimport activeColor from '@patternfly/react-tokens/dist/esm/global_active_color_100';\n\nexport const statusMapper = [\n  'done',\n  'error',\n  'pending',\n  'unknown',\n  'updating',\n  'warning',\n  'notification',\n];\n\nexport const sortByDirection = (data, direction = 'asc') =>\n  data.sort((a, b) =>\n    direction === 'asc'\n      ? a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      : b.name.toLowerCase().localeCompare(a.name.toLowerCase())\n  );\n\nexport const deviceSummaryMapper = [\n  'active',\n  'noReports',\n  'neverReported',\n  'orphaned',\n];\n\nexport const imageDistributionMapper = {\n  'rhel-8.1': 'RHEL 8.1',\n  'rhel-8.2': 'RHEL 8.2',\n  'rhel-8.3': 'RHEL 8.3',\n};\n\nexport const composeStatus = [\n  'CREATED',\n  'BUILDING',\n  'ERROR',\n  'SUCCESS',\n  'INTERRUPTED',\n];\n\nexport const distributionMapper = {\n  'rhel-84': 'RHEL 8.4',\n  'rhel-85': 'RHEL 8.5',\n  'rhel-86': 'RHEL 8.6',\n  'rhel-87': 'RHEL 8.7',\n  'rhel-88': 'RHEL 8.8',\n  'rhel-90': 'RHEL 9.0',\n  'rhel-91': 'RHEL 9.1',\n  'rhel-92': 'RHEL 9.2',\n};\n\nexport const releaseMapper = {\n  'rhel-92': 'Red Hat Enterprise Linux (RHEL) 9.2',\n  'rhel-91': 'Red Hat Enterprise Linux (RHEL) 9.1',\n  'rhel-90': 'Red Hat Enterprise Linux (RHEL) 9.0',\n  'rhel-88': 'Red Hat Enterprise Linux (RHEL) 8.8',\n  'rhel-87': 'Red Hat Enterprise Linux (RHEL) 8.7',\n  'rhel-86': 'Red Hat Enterprise Linux (RHEL) 8.6',\n  'rhel-85': 'Red Hat Enterprise Linux (RHEL) 8.5',\n  'rhel-84': 'Red Hat Enterprise Linux (RHEL) 8.4',\n};\n\nexport const supportedReleases = [\n  'rhel-84',\n  'rhel-85',\n  'rhel-86',\n  'rhel-87',\n  'rhel-88',\n  'rhel-90',\n  'rhel-91',\n  'rhel-92',\n];\n\nexport const temporaryReleases = ['rhel-92'];\n\nexport const DEFAULT_RELEASE = 'rhel-92';\nexport const TEMPORARY_RELEASE = 'rhel-92';\n\nexport const imageTypeMapper = {\n  'rhel-edge-commit': 'RHEL for Edge Commit (.tar)',\n  'rhel-edge-installer': 'RHEL for Edge Installer (.iso)',\n};\n\nexport const iconMapper = {\n  unknown: UnknownIcon,\n  repository: RepositoryIcon,\n  search: SearchIcon,\n  module: ModuleIcon,\n  cube: CubeIcon,\n  question: QuestionCircleIcon,\n  plus: PlusCircleIcon,\n  checkCircle: CheckCircleIcon,\n  exclamationTriangle: ExclamationTriangleIcon,\n  timesCircle: TimesCircleIcon,\n  inProgress: InProgressIcon,\n  exclamationCircle: ExclamationCircleIcon,\n};\n\nexport const colorMapper = {\n  green: successColor.value,\n  yellow: warningColor.value,\n  lightBlue: infoColor.value,\n  blue: activeColor.value,\n  red: dangerColor.value,\n};\n\nexport const statusToIcon = {\n  done: {\n    icon: CheckCircleIcon,\n    color: successColor.value,\n    title: 'Fully adopted',\n  },\n  error: {\n    icon: ExclamationCircleIcon,\n    color: dangerColor.value,\n    title: 'Error while adopting',\n  },\n  pending: { icon: PauseCircleIcon, title: 'Pending adoption' },\n  updating: { icon: CircleNotchIcon, title: 'Updating' },\n  unknown: { icon: UnknownIcon, title: 'Unknown state' },\n  warning: {\n    icon: ExclamationTriangleIcon,\n    color: warningColor.value,\n    title: 'Warning while adopting',\n  },\n  notification: {\n    icon: BellIcon,\n    color: infoColor.value,\n    title: 'Delivering',\n  },\n};\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nexport const LOAD_DEVICE_SUMMARY = 'LOAD_DEVICE_SUMMARY';\nexport const LOAD_ACTIVE_IMAGES = 'LOAD_ACTIVE_IMAGES';\nexport const LOAD_EDGE_IMAGES = 'LOAD_EDGE_IMAGES';\nexport const LOAD_EDGE_IMAGE_SETS = 'LOAD_EDGE_IMAGE_SETS';\nexport const LOAD_EDGE_IMAGE_PACKAGES = 'LOAD_EDGE_IMAGE_PACKAGES';\nexport const LOAD_GROUPS = 'LOAD_GROUPS';\nexport const LOAD_GROUP_DETAIL = 'LOAD_GROUP_DETAIL';\nexport const LOAD_TRESHOLD = 'LOAD_TRESHOLD';\nexport const LOAD_DEVICES_INFO = 'LOAD_DEVICES_INFO';\nexport const LOAD_CANARIES_INFO = 'LOAD_CANARIES_INFO';\nexport const LOAD_GROUP_DEVICES_INFO = 'LOAD_GROUP_DEVICES_INFO';\nexport const LOAD_IMAGE_STATUS = 'LOAD_IMAGE_STATUS';\nexport const LOAD_IMAGE_DETAIL = 'LOAD_IMAGE_DETAIL';\nexport const LOAD_IMAGE_SET_DETAIL = 'LOAD_IMAGE_SET_DETAIL';\nexport const CREATE_NEW_IMAGE = 'CREATE_NEW_IMAGE';\nexport const CREATE_NEW_IMAGE_RESET = `${CREATE_NEW_IMAGE}_RESET`;\nexport const POLLING_IMAGES = 'POLLING_IMAGES';\nexport const LOAD_DEVICE_TABLE = 'LOAD_DEVICE_TABLE';\nexport const UPDATE_DISPLAY_NAME = 'UPDATE_DISPLAY_NAME';\nexport const REMOVE_ENTITY = 'REMOVE_ENTITY';\n\nconst asyncActions = flatMap(\n  [\n    LOAD_EDGE_IMAGES,\n    LOAD_EDGE_IMAGE_SETS,\n    LOAD_EDGE_IMAGE_PACKAGES,\n    LOAD_ACTIVE_IMAGES,\n    LOAD_GROUPS,\n    LOAD_GROUP_DETAIL,\n    LOAD_TRESHOLD,\n    LOAD_DEVICES_INFO,\n    LOAD_CANARIES_INFO,\n    LOAD_GROUP_DEVICES_INFO,\n    LOAD_IMAGE_STATUS,\n    LOAD_IMAGE_DETAIL,\n    LOAD_IMAGE_SET_DETAIL,\n    CREATE_NEW_IMAGE,\n    LOAD_DEVICE_TABLE,\n    UPDATE_DISPLAY_NAME,\n    REMOVE_ENTITY,\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\nexport const ACTION_TYPES = keyBy(asyncActions, (k) => k);\n\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const PRE_SELECT_ENTITY = 'PRE_SELECT_ENTITY';\nexport const CLEAN_ENTITIES = 'CLEAN_ENTITIES';\n","import {\n  ACTION_TYPES,\n  LOAD_TRESHOLD,\n  LOAD_DEVICES_INFO,\n  LOAD_CANARIES_INFO,\n  LOAD_GROUP_DETAIL,\n  LOAD_GROUP_DEVICES_INFO,\n  SELECT_ENTITY,\n  PRE_SELECT_ENTITY,\n  CLEAN_ENTITIES,\n  LOAD_ACTIVE_IMAGES,\n  LOAD_EDGE_IMAGES,\n  LOAD_EDGE_IMAGE_SETS,\n  LOAD_EDGE_IMAGE_PACKAGES,\n  LOAD_DEVICE_SUMMARY,\n  LOAD_IMAGE_STATUS,\n  LOAD_IMAGE_DETAIL,\n  LOAD_IMAGE_SET_DETAIL,\n  CREATE_NEW_IMAGE,\n  POLLING_IMAGES,\n  LOAD_DEVICE_TABLE,\n} from './action-types';\n\nimport {\n  fetchImageStatus,\n  getImageById,\n  fetchEdgeImages,\n  fetchEdgeImageSets,\n  getImagePackageMetadata,\n  createImage,\n  getImageSet,\n  fetchActiveImages,\n} from '../api/images';\nimport { getInventory } from '../api/devices';\nimport { hosts } from '../api';\nimport { deleteSystemsById } from '../utils';\n\nexport const loadThreshold = () => ({\n  type: LOAD_TRESHOLD,\n  payload: () => {},\n});\n\nexport const loadDevicesInfo = () => ({\n  type: LOAD_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const loadCanariesInfo = () => ({\n  type: LOAD_CANARIES_INFO,\n  payload: () => {},\n});\n\nexport const loadGroupsDetail = () => ({\n  type: LOAD_GROUP_DETAIL,\n  payload: () => {},\n});\n\nexport const loadGroupDevicesInfo = () => ({\n  type: LOAD_GROUP_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const selectEntity = (id, selected) => ({\n  type: SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const preSelectEntity = (id, selected) => ({\n  type: PRE_SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const cleanEntities = () => ({\n  type: CLEAN_ENTITIES,\n});\n\nexport const loadImages = (dispatch, pagination) => {\n  dispatch({\n    type: LOAD_ACTIVE_IMAGES,\n    payload: fetchActiveImages(pagination),\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show images data',\n          description: 'Failed receiving images from image-builder',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadDeviceSummary = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_SUMMARY,\n    payload: () => {},\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show system summary data',\n          description: 'Failed receiving system summary data from inventory',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadImageStatus = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_STATUS,\n    payload: fetchImageStatus({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const loadImageDetail = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_DETAIL,\n    payload: getImageById({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const createNewImage = (dispatch, payload, callback) => {\n  dispatch({\n    type: CREATE_NEW_IMAGE,\n    payload: createImage(payload),\n  })\n    .then(callback)\n    .catch(() => null);\n};\n\nexport const loadEdgeImages = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGES,\n    payload: fetchEdgeImages(query),\n  }).catch(() => null);\n};\n\nexport const loadEdgeImageSets = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_SETS,\n    payload: fetchEdgeImageSets(query),\n  }).catch(() => null);\n};\n\nexport const setPolling = (toStart, interval) => {\n  const subAction = toStart ? 'START' : 'END';\n  const payload = toStart ? { interval } : {};\n  return {\n    type: `${POLLING_IMAGES}_${subAction}`,\n    ...payload,\n  };\n};\n\nexport const addImageToPoll = ({ id, name }) => {\n  return {\n    type: `${POLLING_IMAGES}_ADD`,\n    payload: {\n      name,\n      id,\n    },\n  };\n};\n\nexport const removeImagesToPoll = (ids) => {\n  return {\n    type: `${POLLING_IMAGES}_REMOVE`,\n    ids,\n  };\n};\n\nexport const loadImageSetDetail = (dispatch, urlParam, query) => {\n  dispatch({\n    type: LOAD_IMAGE_SET_DETAIL,\n    payload: getImageSet({ id: urlParam, q: query }),\n  }).catch(() => null);\n};\n\nexport const loadImagePackageMetadata = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_PACKAGES,\n    payload: getImagePackageMetadata(imageId),\n  }).catch(() => null);\n};\n\nexport const loadDeviceTable = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_TABLE,\n    payload: getInventory(),\n  }).catch(() => null);\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n  type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n  payload: hosts.apiHostPatchHostById([id], { display_name: value }),\n  meta: {\n    id,\n    value,\n    origValue,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: `Display name for entity with ID ${id} has been changed to ${value}`,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n  type: ACTION_TYPES.REMOVE_ENTITY,\n  payload: deleteSystemsById(systems),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Delete operation finished',\n        description: `${displayName} has been successfully removed.`,\n        dismissable: true,\n      },\n    },\n    systems,\n  },\n});\n","import validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\nimport { releaseMapper, supportedReleases } from '../constants';\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport pAll from 'p-all';\nimport { hosts } from '../api/index';\n\nexport const nameValidator = {\n  type: validatorTypes.PATTERN,\n  pattern: /^[A-Za-z0-9]+[A-Za-z0-9_\\-\\s]*$/,\n  message:\n    'Name must start with alphanumeric characters and can contain underscore and hyphen characters.',\n};\n\nexport const mapUrlToObj = (url, keys) => {\n  const splitUrl = url.split('/');\n  const obj = {};\n\n  for (let i = 1; i < splitUrl.length; i++) {\n    if (splitUrl[i]) {\n      obj[keys[i - 1]] = splitUrl[i];\n    }\n  }\n\n  obj.buildUrl = function () {\n    return Object.values(this).reduce(\n      (acc, curr) => (typeof curr !== 'function' ? `${acc}/${curr}` : acc),\n      ''\n    );\n  };\n\n  return obj;\n};\n\n// urlString is the string added to the url search param\n// state is a boolean that adds or removes the urlString from the url\nexport const stateToUrlSearch = (urlString, state, search) => {\n  var searchArray = [];\n  const currentSearchArray =\n    search.length > 0\n      ? search.includes('&')\n        ? search.split('?')[1].split('&')\n        : search.split('?').slice(1)\n      : [];\n  if (state) {\n    currentSearchArray.includes(urlString)\n      ? currentSearchArray\n      : currentSearchArray.push(urlString);\n    searchArray = currentSearchArray;\n  } else {\n    searchArray = currentSearchArray.includes(urlString)\n      ? currentSearchArray.filter((e) => e !== urlString)\n      : currentSearchArray;\n  }\n\n  return searchArray.join('&');\n};\n\nexport const emptyStateNoFilters = (isLoading, count, search) =>\n  isLoading !== true && !count > 0 && !search.includes('has_filters=true');\n\nexport const canUpdateSelectedDevices = ({ deviceData, imageData }) =>\n  deviceData?.length > 0 && imageData\n    ? deviceData?.some(\n        (device) => device.imageSetId !== deviceData[0].imageSetId\n      )\n    : true;\n\nexport const useFeatureFlags = (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n\n  return flagsReady ? isFlagEnabled : false;\n};\n\nexport const truncateString = (\n  string = '',\n  start,\n  end = 0,\n  separationString = '...'\n) => {\n  if (string.length <= start) {\n    return string;\n  }\n\n  const updatedString = `${string.substring(\n    0,\n    start\n  )}${separationString}${string.substring(string.length - end, string.length)}`;\n\n  return updatedString;\n};\n\nexport const transformSort = ({ direction, name }) => {\n  return {\n    sort_by: direction === 'asc' ? name : `-${name}`,\n  };\n};\n\nexport const isAccountMissing = (data) => data && !data?.Account;\n\n// getReleases returns a list of the supported releases + the forced release\nexport const getReleases = (forcedRelease, inculdedReleases) =>\n  Object.entries(releaseMapper)\n    .filter(\n      ([release]) =>\n        (inculdedReleases ? inculdedReleases : supportedReleases).includes(\n          release\n        ) || release === forcedRelease\n    )\n    .map(([release, releaseLabel]) => ({\n      value: release,\n      label: releaseLabel,\n    }));\n\nexport const createLink = ({ pathname, linkText, target }) => {\n  return (\n    <Button\n      component=\"a\"\n      target={target}\n      variant=\"link\"\n      target-href={pathname}\n      href={pathname}\n    >\n      {linkText}\n    </Button>\n  );\n};\n\nconst resolve = async (fns, limit = 2) => {\n  const results = await pAll(fns, {\n    concurrency: limit,\n  });\n  return results;\n};\n\nexport const deleteSystemsById = (items, batchSize = 50) => {\n  let arr = [];\n  for (let i = 0; i < items.length; i += batchSize) {\n    let chunk;\n    chunk = items.slice(i, i + batchSize);\n    arr.push(chunk);\n  }\n\n  const results = resolve(\n    arr.map((itemArray) => () => {\n      return hosts.apiHostDeleteHostById(itemArray);\n    })\n  );\n  return results;\n};\n"],"names":["applyReducerHash","LOAD_DEVICE_SUMMARY","isLoading","hasError","data","state","payload","LOAD_ACTIVE_IMAGES","LOAD_EDGE_IMAGES","LOAD_EDGE_IMAGE_SETS","LOAD_IMAGE_STATUS","LOAD_IMAGE_DETAIL","LOAD_IMAGE_SET_DETAIL","LOAD_EDGE_IMAGE_PACKAGES","LOAD_GROUPS","groups","results","meta","LOAD_TRESHOLD","threshold","LOAD_DEVICES_INFO","devicesInfo","LOAD_CANARIES_INFO","canariesInfo","PropTypes","statusMapper","SecureIcon","isSecure","props","Icon","LockIcon","LockOpenIcon","propTypes","defaultProps","LOAD_GROUP_DETAIL","name","uuid","devices","LOAD_GROUP_DEVICES_INFO","CREATE_NEW_IMAGE","error","_state","LOAD_DEVICE_TABLE","UpdateImageModal","updateCveModal","setUpdateCveModal","setReload","dispatch","useDispatch","getRegistry","useContext","RegistryContext","useSelector","imageDetailReducer","shallowEqual","useEffect","registered","register","imageId","loadImageDetail","handleClose","prevState","isOpen","Modal","variant","title","image","Name","description","onClose","actions","Button","key","onClick","Id","ID","Description","version","Version","architecture","credentials","Installer","SshKey","username","Username","imageType","OutputTypes","Packages","map","pack","release","Distribution","createNewImage","resp","addNotification","value","polling","id","fetcher","getEdgeImageStatus","condition","Status","onEvent","failure","success","loadEdgeImageSets","addImageToPoll","TextContent","TextListItem","T","component","TextVariants","Text","TextList","TextListVariants","TextListItemVariants","releaseMapper","imageTypeMapper","ImageType","className","cveCount","Backdrop","Bullseye","Spinner","isSVG","diameter","isRequired","getInventory","query","q","getTableParams","instance","EDGE_API","getDevice","getDeviceUpdates","updateSystem","IMAGE_BUILDER_API","CONTENT_SOURCES_API","INVENTORY_API_BASE","hosts","HostsApi","undefined","Object","keys","reduce","acc","curr","length","multiVals","val","includes","sortByDirection","direction","sort","a","b","toLowerCase","localeCompare","distributionMapper","supportedReleases","temporaryReleases","DEFAULT_RELEASE","TEMPORARY_RELEASE","iconMapper","unknown","UnknownIcon","repository","RepositoryIcon","search","SearchIcon","module","ModuleIcon","cube","CubeIcon","question","QuestionCircleIcon","plus","PlusCircleIcon","checkCircle","CheckCircleIcon","exclamationTriangle","ExclamationTriangleIcon","timesCircle","TimesCircleIcon","inProgress","InProgressIcon","exclamationCircle","ExclamationCircleIcon","colorMapper","green","successColor","yellow","warningColor","lightBlue","infoColor","blue","activeColor","red","dangerColor","statusToIcon","done","icon","color","pending","PauseCircleIcon","updating","CircleNotchIcon","warning","notification","BellIcon","POLLING_IMAGES","asyncActions","flatMap","ACTION_TYPES","keyBy","k","type","getImageById","callback","createImage","then","fetchEdgeImageSets","editDisplayName","origValue","display_name","notifications","fulfilled","dismissable","deleteEntity","systems","displayName","deleteSystemsById","nameValidator","validatorTypes","pattern","message","mapUrlToObj","url","splitUrl","split","obj","i","buildUrl","values","this","stateToUrlSearch","urlString","searchArray","currentSearchArray","slice","push","filter","e","join","emptyStateNoFilters","count","canUpdateSelectedDevices","deviceData","imageData","some","device","imageSetId","useFeatureFlags","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","truncateString","string","start","end","separationString","updatedString","substring","transformSort","sort_by","getReleases","forcedRelease","inculdedReleases","entries","label","createLink","pathname","linkText","target","href","resolve","fns","limit","pAll","concurrency","items","batchSize","arr","chunk","itemArray"],"sourceRoot":""}