{"version":3,"sources":["webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js"],"names":["name","title","fields","component","PackagesLabel","release","getState","useFormApi","values","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","componentTypes","label","initialValue","clearedValue","isUpdate","options","Object","entries","map","value","DEFAULT_RELEASE","validate","type","validatorTypes","isRequired","isDisabled","imageTypeMapper","placeholder","pattern","threshold","resizeOrientation","mapPackagesToComponent","packages","pack","key","className","summary","mapComponentToPackage","props","children","Packages","defaultArch","change","input","useFieldApi","packagesSearchName","useRef","useState","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","useEffect","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","handlePackagesSearch","getPackages","architecture","current","data","DualListSelector","isSearchable","availableOptionsActions","Button","aria-label","data-testid","onClick","availableOptions","availableOptionsTitle","chosenOptions","filter","item","includes","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","id","propTypes","PropTypes","registrationCredsValidator","state","length","checkbox","errs","password","sshKey","meta","toggleCheckbox","useCallback","checked","event","onChange","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextInput","TextArea","ImageOutputCheckbox","index","validated","touched","Fragment","TextVariants","target","href","isVisitedLink","CreateImageWizard","schema","onSubmit","onClose","customComponentMapper","initialValues","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","validatorMapper","onCancel","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","useContext","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","init","details","description","output","imageType","join","registration","credentials","Alert","variant"],"mappings":"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","file":"js/842.fcedd6001d491ef2c088.js","sourcesContent":["export default {\n  name: 'review',\n  title: 'Review',\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n  DEFAULT_RELEASE,\n} from '../../ImageManagerDetail/constants';\n\nexport default {\n  title: 'Image output',\n  name: 'imageOutput',\n  nextStep: ({ values }) => (values.isUpdate ? 'packages' : 'registration'),\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information for your image.</Text>,\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'release',\n      label: 'Release',\n      options: Object.entries(releaseMapper).map(([release, releaseLabel]) => ({\n        value: release,\n        label: releaseLabel,\n      })),\n      initialValue: DEFAULT_RELEASE,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n      isDisabled: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Image details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-\\s]*$/,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Image details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Add a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Device registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to connect your device to Fleet Management.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) =>\n  packages.map((pack, key) => (\n    <TextContent key={`${pack.name}-${key}`}>\n      <span className=\"pf-c-dual-list-selector__item-text\">{pack.name}</span>\n      <small>{pack.summary}</small>\n    </TextContent>\n  ));\n\nconst mapComponentToPackage = (component) => ({\n  name: component.props.children[0].props.children,\n  summary: component.props.children[1].props.children,\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const packagesSearchName = useRef();\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesSelected, setPackagesSelected] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n\n  useEffect(() => {\n    setPackagesSelected(\n      mapPackagesToComponent(getState()?.values?.[input.name] || [])\n    );\n  }, []);\n\n  const packageListChange = (newAvailablePackages, newChosenPackages) => {\n    const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n    setPackagesAvailable(newAvailablePackages);\n    setPackagesSelected(newChosenPackages);\n    change(input.name, chosenPkgs);\n  };\n\n  const handlePackagesSearch = async () => {\n    const { data } = await getPackages(\n      getState()?.values?.release || 'rhel-8',\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName.current\n    );\n    setPackagesAvailable(mapPackagesToComponent(data || []));\n  };\n\n  return (\n    <DualListSelector\n      className=\"pf-u-mt-sm\"\n      isSearchable\n      availableOptionsActions={[\n        <Button\n          aria-label=\"Search button for available packages\"\n          key=\"availableSearchButton\"\n          data-testid=\"search-pkgs-button\"\n          onClick={handlePackagesSearch}\n        >\n          Search\n        </Button>,\n      ]}\n      availableOptions={packagesAvailable}\n      availableOptionsTitle=\"Available packages\"\n      chosenOptions={packagesSelected.filter((item) =>\n        mapComponentToPackage(item)?.name?.includes(filterSelected)\n      )}\n      chosenOptionsTitle=\"Chosen packages\"\n      addSelected={packageListChange}\n      removeSelected={packageListChange}\n      addAll={packageListChange}\n      removeAll={(newAvailablePackages) =>\n        packageListChange(\n          newAvailablePackages,\n          packagesSelected.filter(\n            (item) =>\n              !mapComponentToPackage(item)?.name?.includes(filterSelected)\n          )\n        )\n      }\n      onAvailableOptionsSearchInputChanged={(val) => {\n        packagesSearchName.current = val;\n      }}\n      onChosenOptionsSearchInputChanged={(val) => setFilterSelected(val)}\n      filterOption={() => true}\n      id=\"basicSelectorWithSearch\"\n    />\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { useCallback } from 'react';\nimport { FormGroup, Checkbox } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\n\nconst ImageOutputCheckbox = (props) => {\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <Checkbox\n          key={index}\n          label={label}\n          id={value}\n          isChecked={input.value.includes(value)}\n          onChange={toggleCheckbox}\n        />\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          isRequired\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/solutions/3356121\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-md\" data-testid={testid} hasGutter>\n      <GridItem span={12} hasGutter>\n        <Text component={TextVariants.h1}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <>\n          <GridItem span={3} hasGutter>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9} hasGutter>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n} from '../../Routes/ImageManagerDetail/constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: '1' },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = [\n    { name: 'Release', value: releaseMapper[getState().values.release] },\n    {\n      name: 'Type',\n      value: getState()\n        .values.imageType.map((type) => `${imageTypeMapper[type]}`)\n        .join(', '),\n    },\n  ];\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const packages = () => {\n    const init = [\n      {\n        name: isUpdate ? 'Added' : 'Added packages',\n        value:\n          getState().values['selected-packages'] === undefined\n            ? '0'\n            : getState().values['selected-packages'].length,\n      },\n    ];\n    return isUpdate\n      ? [...init, { name: 'Removed', value: 0 }, { name: 'Updated', value: 0 }]\n      : init;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create {isUpdate ? 'update' : 'image'}</Text> to{' '}\n          {isUpdate ? 'update' : 'create'} your image.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output}\n          testid={'review-image-output'}\n        />\n        {isUpdate ? (\n          ''\n        ) : (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        )}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n"],"sourceRoot":""}