{"version":3,"file":"js/1505.f095be0bf76e7ed7e8b2.js","mappings":"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","sources":["webpack:///./src/api/devices/index.js","webpack:///./src/api/index.js","webpack:///./src/components/Empty.js","webpack:///./src/components/general-table/FilterDropdown.js","webpack:///./src/components/general-table/FilterInput.js","webpack:///./src/components/general-table/FilterControls.js","webpack:///./src/components/general-table/FilterChips.js","webpack:///./src/components/general-table/ToolbarKebab.js","webpack:///./src/components/general-table/ToolbarHeader.js","webpack:///./src/components/general-table/ToolbarFooter.js","webpack:///./src/hooks/useFetchBatched.js","webpack:///./src/hooks/usePromiseQueue.js","webpack:///./src/components/general-table/BulkSelect.js","webpack:///./src/components/general-table/GeneralTable.js","webpack:///./src/components/general-table/createFilterValues.js","webpack:///./src/constants/index.js","webpack:///./src/utils/index.js"],"sourcesContent":["import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getInventoryByGroup = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}&groupUUID=${id}`);\n};\nexport const getDevice = (id) => {\n  return instance.get(`${EDGE_API}/devices/${id}`);\n};\n\nexport const getDeviceUpdates = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/${id}?${q}`);\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","export const IMAGE_BUILDER_API = '/api/image-builder/v1';\nexport const EDGE_API = '/api/edge/v1';\nexport const CONTENT_SOURCES_API = '/api/content-sources/v1';\nexport const INVENTORY_API_BASE = '/api/inventory/v1';\nexport const RHSM_API = '/api/rhsm/v2';\n\nimport instance from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport { HostsApi } from '@redhat-cloud-services/host-inventory-client';\n\nexport { instance };\nexport const hosts = new HostsApi(undefined, INVENTORY_API_BASE, instance);\n\nexport const getTableParams = (q) => {\n  if (q === undefined) {\n    return '';\n  }\n  const query = Object.keys(q).reduce((acc, curr) => {\n    let value = undefined;\n    if (\n      typeof q[curr] === 'object' &&\n      typeof q[curr].length === 'number' &&\n      q[curr].length > 0\n    ) {\n      value = q[curr].reduce(\n        (multiVals, val) =>\n          multiVals === '' ? `${curr}=${val}` : `${multiVals}&${curr}=${val}`,\n        ''\n      );\n    }\n    if (['string', 'number'].includes(typeof q[curr]) && q[curr] !== '') {\n      value = `${curr}=${q[curr]}`;\n    }\n    return value === undefined\n      ? acc\n      : acc === ''\n      ? `${value}`\n      : `${acc}&${value}`;\n  }, '');\n\n  return query;\n};\n","import React from 'react';\nimport {\n  Title,\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { createLink } from '../utils';\nimport { iconMapper } from '../constants';\n\nconst Empty = ({\n  bgColor,\n  icon,\n  title,\n  body,\n  primaryAction,\n  secondaryActions,\n  target,\n}) => (\n  <EmptyState variant=\"large\" style={{ backgroundColor: bgColor || '' }}>\n    {icon && <EmptyStateIcon icon={iconMapper[icon]} />}\n    <Title headingLevel=\"h4\" size=\"lg\">\n      {title}\n    </Title>\n    <EmptyStateBody>\n      {Array.isArray(body)\n        ? body.map((item, index) => (\n            <div key={index}>\n              {item}\n              <br />\n              <br />\n            </div>\n          ))\n        : body}\n    </EmptyStateBody>\n    {primaryAction && (\n      <>\n        {primaryAction.href ? (\n          createLink({\n            pathname: `${primaryAction.href}`,\n            linkText: primaryAction.text,\n            target: target,\n          })\n        ) : (\n          <Button variant=\"primary\" onClick={primaryAction.click}>\n            {primaryAction.text}\n          </Button>\n        )}\n      </>\n    )}\n    <EmptyStateSecondaryActions>\n      <Stack>\n        {secondaryActions.map(\n          ({ type, title, link, onClick, variant, className }, index) => (\n            <StackItem key={index}>\n              <Button\n                component={type === 'link' ? 'a' : 'button'}\n                className={className}\n                href={link}\n                variant={variant || 'link'}\n                target={type === 'link' ? '_blank' : ''}\n                key={index}\n                onClick={onClick}\n              >\n                {title}\n                {link && <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />}\n              </Button>\n            </StackItem>\n          )\n        )}\n      </Stack>\n    </EmptyStateSecondaryActions>\n  </EmptyState>\n);\n\nEmpty.propTypes = {\n  bgColor: PropTypes.string,\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  primaryAction: PropTypes.object,\n  secondaryActions: PropTypes.array,\n  target: PropTypes.string,\n};\n\nEmpty.defaultProps = {\n  secondaryActions: [],\n};\n\nexport default Empty;\n","import React from 'react';\nimport { ToolbarItem, Select, SelectOption } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\n\nconst FilterDropdown = ({ filters, dropdown, setDropdown }) => {\n  const toggle = () => {\n    setDropdown((prevState) => ({\n      ...prevState,\n      isOpen: !prevState.isOpen,\n    }));\n  };\n\n  const select = (_e, selection) => {\n    setDropdown({\n      selected: selection,\n      isOpen: false,\n    });\n  };\n\n  return (\n    <>\n      {filters.length > 1 ? (\n        <ToolbarItem data-testid=\"filter-dropdown-testid\" className=\"pf-u-mr-0\">\n          <Select\n            variant=\"single\"\n            aria-label=\"Select input for filters\"\n            width=\"11rem\"\n            onToggle={toggle}\n            onSelect={select}\n            selections={dropdown.selected}\n            isOpen={dropdown.isOpen}\n            toggleIcon={<FilterIcon />}\n          >\n            {filters.map((filter, index) => (\n              <SelectOption key={index} value={filter.label} />\n            ))}\n          </Select>\n        </ToolbarItem>\n      ) : null}\n    </>\n  );\n};\n\nFilterDropdown.propTypes = {\n  filters: PropTypes.array,\n  dropdown: PropTypes.object,\n  setDropdown: PropTypes.func,\n};\n\nexport default FilterDropdown;\n","import React, { useState } from 'react';\nimport {\n  ToolbarItem,\n  InputGroup,\n  SearchInput,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport { debounce } from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst FilterInput = ({ filterValues, setFilterValues, input }) => {\n  const selectedFilter = filterValues.find((filter) => filter.label === input);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const handleFilterChange = () => (value, checkboxValue) => {\n    setFilterValues((prevState) => {\n      const selectedIndex = prevState.findIndex(\n        (filter) => filter.label === selectedFilter.label\n      );\n      const checkedType = prevState.find(\n        (filter) => filter.label === selectedFilter.label\n      );\n      const checkboxIndex =\n        selectedFilter.type === 'checkbox'\n          ? checkedType.value.findIndex((i) => i.option === checkboxValue)\n          : 0;\n      const newValueArray = Object.values({\n        ...checkedType.value,\n        [checkboxIndex]: {\n          ...checkedType.value[checkboxIndex],\n          isChecked: !checkedType?.value[checkboxIndex]?.isChecked,\n        },\n      });\n      const newTextValue = value;\n\n      return Object.values({\n        ...prevState,\n        [selectedIndex]: {\n          ...prevState[selectedIndex],\n          value:\n            selectedFilter.type === 'checkbox' ? newValueArray : newTextValue,\n        },\n      });\n    });\n  };\n\n  const handleDeleteTextInput = () => {\n    const filterLabelIndex = filterValues.findIndex(\n      (value) => value.type === 'text'\n    );\n    setFilterValues((prevState) => {\n      const changedValue = prevState[filterLabelIndex];\n      if (changedValue.type === 'text') {\n        return [\n          ...prevState.slice(0, filterLabelIndex),\n          { ...prevState[filterLabelIndex], value: '' },\n          ...prevState.slice(filterLabelIndex + 1, prevState.length),\n        ];\n      }\n      return prevState;\n    });\n  };\n\n  if (selectedFilter.type === 'text') {\n    return (\n      <ToolbarItem data-testid=\"filter-input-testid\">\n        <InputGroup>\n          <SearchInput\n            name=\"textInput1\"\n            id=\"textInput1\"\n            type=\"search\"\n            aria-label={`Select input for ${selectedFilter.label.toLowerCase()}`}\n            placeholder={`Filter by ${selectedFilter.label.toLowerCase()}`}\n            onChange={debounce(handleFilterChange(), 500)}\n            onClear={handleDeleteTextInput}\n            value={filterValues.find((filter) => filter.type === 'text').value}\n          />\n        </InputGroup>\n      </ToolbarItem>\n    );\n  }\n\n  if (selectedFilter.type === 'checkbox') {\n    return (\n      <ToolbarItem data-testid=\"filter-input-testid\">\n        <InputGroup>\n          <Select\n            variant=\"checkbox\"\n            aria-label={`Select input for ${selectedFilter.label.toLowerCase()}`}\n            width=\"11rem\"\n            placeholderText={`Filter by ${selectedFilter.label.toLowerCase()}`}\n            isCheckboxSelectionBadgeHidden\n            onToggle={() => setIsOpen((prevState) => !prevState)}\n            onSelect={handleFilterChange()}\n            selections={selectedFilter.value\n              .filter((value) => value.isChecked == true)\n              .map((arr) => arr.option)}\n            isOpen={isOpen}\n          >\n            {selectedFilter.value.map((filter, index) => (\n              <SelectOption\n                key={index}\n                value={filter.option}\n                isChecked={filter.isChecked}\n              />\n            ))}\n          </Select>\n        </InputGroup>\n      </ToolbarItem>\n    );\n  }\n};\n\nFilterInput.propTypes = {\n  filterValues: PropTypes.array,\n  setFilterValues: PropTypes.func,\n  input: PropTypes.string,\n};\n\nexport default FilterInput;\n","import React, { useState } from 'react';\nimport FilterDropdown from './FilterDropdown';\nimport FilterInput from './FilterInput';\nimport PropTypes from 'prop-types';\n\nconst FilterControls = ({\n  filters,\n  filterValues,\n  setFilterValues,\n  children,\n}) => {\n  const [dropdown, setDropdown] = useState({\n    isOpen: false,\n    selected: filters[0].label,\n  });\n\n  return (\n    <>\n      {children}\n      <FilterDropdown\n        dropdown={dropdown}\n        setDropdown={setDropdown}\n        filters={filters}\n      />\n      <FilterInput\n        filterValues={filterValues}\n        setFilterValues={setFilterValues}\n        input={dropdown.selected}\n      />\n    </>\n  );\n};\n\nFilterControls.propTypes = {\n  filters: PropTypes.array,\n  filterValues: PropTypes.array,\n  setFilterValues: PropTypes.func,\n  children: PropTypes.element,\n};\n\nexport default FilterControls;\n","import React, { useEffect } from 'react';\nimport { ChipGroup, Chip, Button } from '@patternfly/react-core';\nimport { groupBy } from 'lodash';\nimport PropTypes from 'prop-types';\n\nconst FilterChips = ({\n  filterValues,\n  setFilterValues,\n  chipsArray,\n  setChipsArray,\n  setPage,\n}) => {\n  const buildChipsArray = () => {\n    filterValues.forEach((filter) => {\n      if (filter.type === 'checkbox') {\n        filter.value.forEach((filterOption) => {\n          if (\n            filterOption.isChecked === true &&\n            !chipsArray.find((chip) => chip.label === filterOption.option)\n          ) {\n            setChipsArray((prevState) => [\n              ...prevState,\n              {\n                label: filterOption.option,\n                value: filterOption.value || filterOption.option,\n                apiName: filterOption.optionApiName,\n                key: filter.label,\n              },\n            ]);\n          } else if (\n            filterOption.isChecked === false &&\n            chipsArray.find((chip) => chip.label === filterOption.option)\n          ) {\n            setChipsArray((prevState) => {\n              const index = prevState.findIndex(\n                (state) => state.label === filterOption.option\n              );\n              return [\n                ...prevState.slice(0, index),\n                ...prevState.slice(index + 1, prevState.length),\n              ];\n            });\n          }\n        });\n      }\n      if (filter.type === 'text' && filter.value.length > 0) {\n        const addTextFilter = { label: filter.value, key: filter.label };\n        if (chipsArray.find((chip) => chip.key === filter.label)) {\n          setChipsArray((prevState) =>\n            prevState.map((f) => {\n              return f.key === filter.label ? addTextFilter : f;\n            })\n          );\n        } else {\n          setChipsArray((prevState) => [...prevState, addTextFilter]);\n        }\n      } else if (\n        filter.type === 'text' &&\n        chipsArray.find((chip) => chip.key === filter.label)\n      ) {\n        setChipsArray((prevState) => {\n          const index = prevState.findIndex(\n            (state) => state.key === filter.label\n          );\n          return [\n            ...prevState.slice(0, index),\n            ...prevState.slice(index + 1, prevState.length),\n          ];\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    buildChipsArray();\n    setPage(1);\n  }, [filterValues]);\n\n  const handleResetFilters = () => {\n    setFilterValues((prevState) => {\n      const removedValues = prevState.map((filter) => {\n        if (filter.type === 'text') {\n          return { ...filter, value: '' };\n        }\n        if (filter.type === 'checkbox') {\n          const setFalse = filter.value.map((checkbox) => {\n            checkbox.isChecked = false;\n            return { ...checkbox, isChecked: false };\n          });\n          return { ...filter, value: setFalse };\n        }\n      });\n      return removedValues;\n    });\n    setChipsArray([]);\n  };\n\n  const handleDeleteFilter = (filter) => {\n    const filterLabelIndex = filterValues.findIndex(\n      (value) => value.label === filter.key\n    );\n    setFilterValues((prevState) => {\n      const changedValue = prevState[filterLabelIndex];\n      if (changedValue.type === 'text') {\n        return [\n          ...prevState.slice(0, filterLabelIndex),\n          { ...prevState[filterLabelIndex], value: '' },\n          ...prevState.slice(filterLabelIndex + 1, prevState.length),\n        ];\n      }\n      if (changedValue.type === 'checkbox') {\n        const changeFalse = changedValue.value.map((option) =>\n          option.option === filter.label\n            ? { ...option, isChecked: false }\n            : option\n        );\n        setChipsArray((prevState) => {\n          const removeIndex = prevState.findIndex((state) => state === filter);\n          return [\n            ...prevState.slice(0, removeIndex),\n            ...prevState.slice(removeIndex + 1, prevState.length),\n          ];\n        });\n        return [\n          ...prevState.slice(0, filterLabelIndex),\n          { ...prevState[filterLabelIndex], value: changeFalse },\n          ...prevState.slice(filterLabelIndex + 1, prevState.length),\n        ];\n      }\n      return prevState;\n    });\n  };\n\n  return (\n    <>\n      {chipsArray.length > 0\n        ? Object.entries(groupBy(chipsArray, 'key')).map(([key, value]) => (\n            <ChipGroup\n              data-testid=\"filter-chip\"\n              className=\"pf-u-mr-xs\"\n              categoryName={key}\n              key={key}\n            >\n              {value.map((filter) => (\n                <Chip onClick={() => handleDeleteFilter(filter)} key={key}>\n                  {filter.label}\n                </Chip>\n              ))}\n            </ChipGroup>\n          ))\n        : null}\n      {chipsArray.length > 0 ? (\n        <Button variant=\"link\" onClick={handleResetFilters}>\n          Reset filters\n        </Button>\n      ) : null}\n    </>\n  );\n};\n\nFilterChips.propTypes = {\n  filterValues: PropTypes.array,\n  setFilterValues: PropTypes.func,\n  chipsArray: PropTypes.array,\n  setChipsArray: PropTypes.func,\n  setPage: PropTypes.func,\n};\n\nexport default FilterChips;\n","import {\n  Dropdown,\n  DropdownItem,\n  ToolbarItem,\n  KebabToggle,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\n\nconst ToolbarKebab = ({ kebabItems }) => {\n  const [kebabIsOpen, setKebabIsOpen] = useState(false);\n\n  const dropdownItems = kebabItems.map(\n    ({ title, isDisabled, onClick }, index) => (\n      <DropdownItem\n        key={index}\n        onClick={onClick ? onClick : () => {}}\n        isDisabled={isDisabled}\n      >\n        {title}\n      </DropdownItem>\n    )\n  );\n\n  return (\n    <ToolbarItem>\n      <Dropdown\n        toggle={\n          <KebabToggle\n            aria-label=\"Actions for selected table items\"\n            onToggle={() => setKebabIsOpen((prev) => !prev)}\n          />\n        }\n        isOpen={kebabIsOpen}\n        isPlain\n        dropdownItems={dropdownItems}\n      />\n    </ToolbarItem>\n  );\n};\n\nToolbarKebab.propTypes = {\n  kebabItems: PropTypes.array,\n};\n\nexport default ToolbarKebab;\n","import React from 'react';\nimport {\n  Toolbar,\n  Pagination,\n  ToolbarItem,\n  ToolbarContent,\n  Button,\n  ToggleGroup,\n  ToggleGroupItem,\n  Skeleton,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport FilterControls from './FilterControls';\nimport FilterChip from './FilterChips';\nimport ToolbarKebab from './ToolbarKebab';\n\nconst ToolbarButtons = ({ buttons }) => {\n  return buttons.map(({ title, click, isDisabled, id }, index) => (\n    <ToolbarItem key={index}>\n      <Button onClick={click} variant=\"primary\" isDisabled={isDisabled} id={id}>\n        {title}\n      </Button>\n    </ToolbarItem>\n  ));\n};\n\nconst ToolbarHeader = ({\n  toolbarButtons,\n  filters,\n  setFilterValues,\n  filterValues,\n  chipsArray,\n  setChipsArray,\n  isLoading,\n  count,\n  perPage,\n  setPerPage,\n  page,\n  setPage,\n  toggleButton,\n  toggleAction,\n  toggleState,\n  children,\n  kebabItems,\n}) => {\n  return (\n    <Toolbar\n      style={{ padding: '0' }}\n      id=\"toolbar-header\"\n      data-testid=\"toolbar-header-testid\"\n    >\n      <ToolbarContent>\n        <FilterControls\n          filters={filters}\n          filterValues={filterValues}\n          setFilterValues={setFilterValues}\n        >\n          {children}\n        </FilterControls>\n        {toolbarButtons && <ToolbarButtons buttons={toolbarButtons} />}\n        {toggleButton && (\n          <ToggleGroup>\n            {toggleButton.map((btn) => (\n              <ToggleGroupItem\n                key={btn.key}\n                text={btn.title}\n                isSelected={toggleState === btn.key}\n                onChange={() => toggleAction(btn.key)}\n              />\n            ))}\n          </ToggleGroup>\n        )}\n        {kebabItems && <ToolbarKebab kebabItems={kebabItems} />}\n        <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n          {isLoading ? (\n            <Skeleton width=\"200px\" />\n          ) : count > 0 ? (\n            <Pagination\n              data-testid=\"pagination-header-test-id\"\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={(_e, pageNumber) => setPage(pageNumber)}\n              widgetId=\"pagination-options-menu-top\"\n              onPerPageSelect={(_e, perPage) => setPerPage(perPage)}\n              isCompact\n            />\n          ) : null}\n        </ToolbarItem>\n      </ToolbarContent>\n      <ToolbarContent>\n        <ToolbarItem variant=\"chip-group\" spacer={{ default: 'spacerNone' }}>\n          <FilterChip\n            filterValues={filterValues}\n            setFilterValues={setFilterValues}\n            chipsArray={chipsArray}\n            setChipsArray={setChipsArray}\n            setPage={setPage}\n          />\n        </ToolbarItem>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nToolbarHeader.propTypes = {\n  filters: PropTypes.array,\n  toolbarButtons: PropTypes.array,\n  setFilterValues: PropTypes.func,\n  filterValues: PropTypes.array,\n  input: PropTypes.string,\n  count: PropTypes.number,\n  perPage: PropTypes.number,\n  setPerPage: PropTypes.func,\n  page: PropTypes.number,\n  setPage: PropTypes.func,\n  chipsArray: PropTypes.array,\n  setChipsArray: PropTypes.func,\n  isLoading: PropTypes.bool,\n  toggleButton: PropTypes.array,\n  toggleAction: PropTypes.func,\n  toggleState: PropTypes.number,\n  children: PropTypes.element,\n  kebabItems: PropTypes.array,\n};\nexport default ToolbarHeader;\n","import React from 'react';\nimport {\n  Toolbar,\n  Pagination,\n  ToolbarItem,\n  ToolbarContent,\n  Skeleton,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ToolbarFooter = ({\n  isLoading,\n  count,\n  perPage,\n  setPerPage,\n  page,\n  setPage,\n  isFixed,\n}) => {\n  let styles = { padding: '20px' };\n  if (isFixed) {\n    styles = { ...styles, paddingBottom: '30px', paddingTop: '20px' };\n  }\n  return (\n    <Toolbar style={styles} id=\"toolbar-footer\">\n      <ToolbarContent>\n        <ToolbarItem variant=\"pagination\" align={{ default: 'alignRight' }}>\n          {isLoading ? (\n            <Skeleton width=\"400px\" />\n          ) : count > 0 ? (\n            <Pagination\n              data-testid=\"pagination-footer-test-id\"\n              itemCount={count}\n              perPage={perPage}\n              page={page}\n              onSetPage={(_e, pageNumber) => setPage(pageNumber)}\n              widgetId=\"pagination-options-menu-top\"\n              onPerPageSelect={(_e, perPage) => setPerPage(perPage)}\n            />\n          ) : null}\n        </ToolbarItem>\n      </ToolbarContent>\n    </Toolbar>\n  );\n};\n\nToolbarFooter.propTypes = {\n  isLoading: PropTypes.bool,\n  count: PropTypes.number,\n  perPage: PropTypes.number,\n  setPerPage: PropTypes.func,\n  page: PropTypes.number,\n  setPage: PropTypes.func,\n  isFixed: PropTypes.bool,\n};\n\nexport default ToolbarFooter;\n","import usePromiseQueue from './usePromiseQueue';\n\nconst useFetchBatched = () => {\n  const { isResolving: isLoading, resolve } = usePromiseQueue();\n\n  return {\n    isLoading,\n    fetchBatched: (fetchFunction, total, filter, batchSize = 50) => {\n      const pages = Math.ceil(total / batchSize) || 1;\n      const results = resolve(\n        [...new Array(pages)].map(\n          // eslint-disable-next-line camelcase\n\n          (_, pageIdx) => () =>\n            fetchFunction({\n              query: {\n                ...filter,\n                offset: pageIdx * batchSize,\n                limit: batchSize,\n              },\n            })\n        )\n      );\n\n      return results;\n    },\n  };\n};\n\nexport default useFetchBatched;\n","import { useCallback, useState } from 'react';\nimport pAll from 'p-all';\n\nconst DEFAULT_CONCURRENT_PROMISES = 2;\n\nconst usePromiseQueue = (limit = DEFAULT_CONCURRENT_PROMISES) => {\n  const [results, setResults] = useState({\n    isResolving: false,\n    promiseResults: undefined,\n  });\n\n  const resolve = useCallback(\n    async (fns) => {\n      await setResults((state) => ({\n        ...state,\n        isResolving: true,\n      }));\n      const results = await pAll(fns, {\n        concurrency: limit,\n      });\n      await setResults({\n        isResolving: false,\n        promiseResults: results,\n      });\n\n      return results;\n    },\n    [limit]\n  );\n\n  return {\n    isResolving: results.isResolving,\n    results: results.promiseResults,\n    resolve,\n  };\n};\n\nexport default usePromiseQueue;\n","import React, { useCallback, useState } from 'react';\nimport {\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownToggleCheckbox,\n  ToolbarItem,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFetchBatched from '../../hooks/useFetchBatched';\nimport { getInventory } from '../../api/devices';\nimport { flatten, map } from 'lodash';\n\nconst BulkSelect = ({\n  checkedRows,\n  handleBulkSelect,\n  handlePageSelect,\n  handleNoneSelect,\n  perPage,\n  total,\n  filters,\n  filterParams,\n  apiFilterSort,\n}) => {\n  const isAllSelected = checkedRows.length === total;\n  const isPartiallySelected = checkedRows.length > 0 ? true : false;\n  const [selectAllToggle, setSelectAllToggle] = useState(false);\n  const { fetchBatched } = useFetchBatched();\n\n  const fetchAllSystemIds = useCallback((filters, total) => {\n    const query = apiFilterSort\n      ? {\n          ...filterParams(filters.filters),\n        }\n      : null;\n    return fetchBatched(getInventory, total, query);\n  }, []);\n\n  const selectAllIds = async () => {\n    if (location.pathname.includes('inventory')) {\n      const data = await fetchAllSystemIds({ filters }, total);\n      const results = flatten(map(data, 'data'));\n      const rows = flatten(map(results, 'devices'));\n      const rowInfo = [];\n      rows.forEach((row) => {\n        rowInfo.push({\n          deviceID: row.DeviceID,\n          id: row.DeviceUUID,\n          display_name: row.DeviceName,\n          imageSetId: row.ImageSetID,\n          imageName: row.ImageName,\n          deviceGroups: [],\n        });\n      });\n\n      handleBulkSelect(rowInfo);\n    } else {\n      handlePageSelect();\n    }\n  };\n\n  return (\n    <>\n      <ToolbarItem variant=\"bulk-select\">\n        <Dropdown\n          toggle={\n            <DropdownToggle\n              id=\"stacked-example-toggle\"\n              splitButtonItems={[\n                <DropdownToggleCheckbox\n                  id=\"example-checkbox-2\"\n                  key=\"split-checkbox\"\n                  aria-label=\"Select all\"\n                  isChecked={isAllSelected ? true : isPartiallySelected}\n                  onChange={\n                    isAllSelected || isPartiallySelected\n                      ? handleNoneSelect\n                      : handlePageSelect\n                  }\n                >\n                  {checkedRows.length > 0 && `${checkedRows.length} selected`}\n                </DropdownToggleCheckbox>,\n              ]}\n              onToggle={() => setSelectAllToggle((prevState) => !prevState)}\n            />\n          }\n          isOpen={selectAllToggle}\n          dropdownItems={[\n            <DropdownItem\n              key=\"none\"\n              onClick={handleNoneSelect}\n              isDisabled={checkedRows.length === 0}\n            >\n              Select none (0 items)\n            </DropdownItem>,\n\n            <DropdownItem\n              key=\"page\"\n              onClick={handlePageSelect}\n              isDisabled={isAllSelected}\n            >\n              Select page ({perPage} {total.length === 1 ? 'item' : 'items'})\n            </DropdownItem>,\n            <DropdownItem\n              key=\"all\"\n              onClick={async () => {\n                await selectAllIds();\n              }}\n            >\n              Select all ({total} {total.length === 1 ? 'item' : 'items'})\n            </DropdownItem>,\n          ]}\n        />\n      </ToolbarItem>\n    </>\n  );\n};\nBulkSelect.propTypes = {\n  checkedRows: PropTypes.array,\n  handleBulkSelect: PropTypes.func,\n  handleNoneSelect: PropTypes.func,\n  handlePageSelect: PropTypes.func,\n  displayedRowsLength: PropTypes.number,\n  perPage: PropTypes.number,\n  total: PropTypes.number,\n  filters: PropTypes.array,\n  filterParams: PropTypes.func,\n  apiFilterSort: PropTypes.bool,\n};\n\nexport default BulkSelect;\n","import React, { useState, useEffect } from 'react';\nimport ToolbarHeader from './ToolbarHeader';\nimport ToolbarFooter from './ToolbarFooter';\nimport createFilterValues from '../../components/general-table/createFilterValues';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n} from '@patternfly/react-table';\nimport { Skeleton } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport CustomEmptyState from '../Empty';\nimport { useDispatch } from 'react-redux';\nimport { transformSort } from '../../utils';\nimport BulkSelect from './BulkSelect';\nimport { useHistory, useLocation, useNavigate } from 'react-router-dom';\nimport { stateToUrlSearch } from '../../utils';\nconst filterParams = (chipsArray) => {\n  const filterParamsObj =\n    chipsArray.length > 0\n      ? chipsArray.reduce((acc, filter) => {\n          if (acc[filter.key.toLowerCase()]) {\n            const returnAcc =\n              typeof acc[filter.key.toLowerCase()] === 'string'\n                ? [acc[filter.key.toLowerCase()]]\n                : [...acc[filter.key.toLowerCase()]];\n            return {\n              ...acc,\n              [filter.key.toLowerCase()]: [\n                ...returnAcc,\n                filter.apiName ? filter.apiName : filter.value,\n              ],\n            };\n          } else {\n            return {\n              ...acc,\n              [filter.key.toLowerCase()]: filter.apiName\n                ? filter.apiName\n                : filter.value || filter.label,\n            };\n          }\n        }, {})\n      : {};\n  return filterParamsObj;\n};\n\nconst GeneralTable = ({\n  historyProp,\n  locationProp,\n  navigateProp,\n  apiFilterSort,\n  urlParam,\n  filters,\n  filtersName,\n  loadTableData,\n  tableData,\n  columnNames,\n  rows,\n  toolbarButtons,\n  actionResolver,\n  areActionsDisabled,\n  defaultSort,\n  emptyFilterState,\n  toggleButton,\n  toggleAction,\n  toggleState,\n  hasCheckbox = false,\n  skeletonRowQuantity,\n  selectedItems,\n  initSelectedItems,\n  kebabItems,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n  isUseApi,\n  hasRadio = false,\n  setRadioSelection,\n  isFooterFixed = false,\n}) => {\n  const defaultCheckedRows = initSelectedItems ? initSelectedItems : [];\n  const initialFilterValues = createFilterValues(filters);\n  const [filterValues, setFilterValues] = useState(initialFilterValues);\n\n  useEffect(() => {\n    if (filtersName) {\n      const sessionFilterValue = window.sessionStorage.getItem(filtersName);\n      if (sessionFilterValue) {\n        const initialFilter = JSON.parse(sessionFilterValue);\n        setFilterValues(initialFilter);\n      }\n    }\n  }, [filtersName]);\n\n  const [chipsArray, setChipsArray] = useState([]);\n\n  useEffect(() => {\n    if (filtersName) {\n      if (chipsArray.length === 0) {\n        window.sessionStorage.removeItem(filtersName);\n      } else {\n        const val = JSON.stringify(filterValues);\n        window.sessionStorage.setItem(filtersName, val);\n      }\n    }\n  }, [filtersName, filterValues, chipsArray]);\n\n  const [sortBy, setSortBy] = useState(defaultSort);\n  const [perPage, setPerPage] = useState(50);\n  const [page, setPage] = useState(1);\n  const [checkedRows, setCheckedRows] = useState(defaultCheckedRows);\n  const dispatch = useDispatch();\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n  const { pathname, search } = locationProp ? locationProp() : useLocation();\n\n  useEffect(() => {\n    // Add or remove has_filters param depending on whether filters are present\n    if (\n      !search.includes('create_image=true') &&\n      !search.includes('update_image=true')\n    ) {\n      const a = {\n        pathname,\n        search: stateToUrlSearch(\n          'has_filters=true',\n          chipsArray.length > 0,\n          search\n        ),\n      };\n      if (navigateProp) {\n        navigate({ ...a, replace: true });\n      } else {\n        history.replace(a);\n      }\n    }\n    const query = apiFilterSort\n      ? {\n          ...filterParams(chipsArray),\n          limit: perPage,\n          offset: (page - 1) * perPage,\n          ...transformSort({\n            direction: sortBy.direction,\n            name: columns[sortBy.index].type,\n          }),\n        }\n      : null;\n\n    if (query?.status === 'updateAvailable') {\n      delete query.status;\n      query.update_available = 'true';\n    }\n\n    if (query && query['image status'] === 'updateAvailable') {\n      delete query['image status'];\n      query.update_available = 'true';\n    }\n\n    if (isUseApi) {\n      loadTableData(query);\n      return;\n    }\n\n    apiFilterSort && urlParam\n      ? loadTableData(dispatch, urlParam, query)\n      : apiFilterSort\n      ? loadTableData(dispatch, query)\n      : null;\n  }, [chipsArray, perPage, page, sortBy, hasModalSubmitted]);\n\n  useEffect(() => {\n    setCheckedRows(defaultCheckedRows);\n  }, [hasModalSubmitted]);\n\n  useEffect(() => {\n    selectedItems && selectedItems(checkedRows);\n    hasModalSubmitted && setHasModalSubmitted(false);\n  }, [checkedRows]);\n\n  const { count, isLoading, hasError } = tableData;\n\n  //Used for repos until the api can sort and filter\n  const filteredByName = () => {\n    const activeFilters = filterValues.filter(\n      (filter) =>\n        (filter?.type === 'text' && filter?.value !== '') ||\n        (filter?.type === 'checkbox' &&\n          filter?.value.find((checked) => checked.isChecked))\n    );\n    const filteredArray = rows.filter((row) => {\n      if (activeFilters.length > 0) {\n        return activeFilters?.every((filter) => {\n          if (filter.type === 'text') {\n            return row.noApiSortFilter[\n              columnNames.findIndex((row) => row.title === filter.label)\n            ]\n              .toLowerCase()\n              .includes(filter.value.toLowerCase());\n          } else if (filter.type === 'checkbox') {\n            return filter.value.some(\n              (value) =>\n                value.isChecked &&\n                row.noApiSortFilter[\n                  columnNames.findIndex((row) => row.title === filter.label) - 1\n                ].toLowerCase() === value.value.toLowerCase()\n            );\n          }\n        });\n      } else {\n        return row;\n      }\n    });\n    return filteredArray;\n  };\n\n  const filteredByNameRows = !apiFilterSort && filteredByName();\n\n  //non-api sort function\n  const sortedByDirection = (rows) =>\n    rows.sort((a, b) => {\n      const index = hasCheckbox ? sortBy.index - 1 : sortBy.index;\n      return typeof a?.noApiSortFilter[index] === 'number'\n        ? sortBy.direction === 'asc'\n          ? a?.noApiSortFilter[index] - b?.noApiSortFilter[index]\n          : b?.noApiSortFilter[index] - a?.noApiSortFilter[index]\n        : sortBy.direction === 'asc'\n        ? a?.noApiSortFilter[index].localeCompare(\n            b?.noApiSortFilter[index],\n            undefined,\n            { sensitivity: 'base' }\n          )\n        : b?.noApiSortFilter[index].localeCompare(\n            a?.noApiSortFilter[index],\n            undefined,\n            { sensitivity: 'base' }\n          );\n    });\n\n  const nonApiCount = !apiFilterSort\n    ? sortedByDirection(filteredByNameRows)?.length\n    : 0;\n\n  const handleSort = (_event, index, direction) => {\n    index = hasCheckbox ? index - 1 : index;\n    setSortBy({ index, direction });\n  };\n\n  const toShowSort =\n    isLoading || hasError || (count?.length > 0 && filters.length > 0);\n\n  const columns = columnNames.map((columnName) => ({\n    title: columnName.title,\n    type: columnName.type,\n    transforms: toShowSort ? [] : columnName.sort ? [sortable] : [],\n    columnTransforms: columnName.columnTransforms\n      ? columnName.columnTransforms\n      : [],\n  }));\n\n  const filteredRows = apiFilterSort\n    ? rows\n    : rows.length > 0\n    ? sortedByDirection(filteredByNameRows).slice(\n        (page - 1) * perPage,\n        (page - 1) * perPage + perPage\n      )\n    : rows;\n\n  const checkboxRows = () =>\n    filteredRows.map((row) =>\n      checkedRows.some((checkedRow) => checkedRow.id === row.rowInfo.id)\n        ? {\n            ...row,\n            selected: true,\n          }\n        : {\n            ...row,\n            selected: false,\n          }\n    );\n\n  const handleSelect = (_event, isSelecting, rowIndex) => {\n    setCheckedRows((prevState) => {\n      return isSelecting\n        ? [...prevState, { ...filteredRows[rowIndex].rowInfo }]\n        : prevState.filter(\n            (row) => row.id !== filteredRows[rowIndex].rowInfo.id\n          );\n    });\n  };\n\n  const handlePageSelect = () => {\n    setCheckedRows((prevState) => {\n      const checkedIds = prevState.map((row) => row.id);\n      const rowIsNotIncluded = (id) => !checkedIds.includes(id);\n\n      const newRows = [];\n      filteredRows.forEach((filtered) => {\n        if (rowIsNotIncluded(filtered.rowInfo.id)) {\n          newRows.push({\n            ...filtered.rowInfo,\n          });\n        }\n      });\n      return [...prevState, ...newRows];\n    });\n  };\n\n  const handleBulkSelect = (rows) => {\n    setCheckedRows(rows);\n  };\n\n  const handleNoneSelect = () => {\n    setCheckedRows([]);\n  };\n\n  const loadingRows = (perPage) =>\n    [...Array(skeletonRowQuantity ?? perPage)].map(() => ({\n      cells: columnNames.map(() => ({ title: <Skeleton width=\"100%\" /> })),\n    }));\n\n  const emptyFilterView = () => {\n    hasCheckbox = false;\n    return [\n      {\n        heightAuto: true,\n        cells: [\n          {\n            props: {\n              colSpan: 8,\n            },\n            title: (\n              <CustomEmptyState\n                data-testid=\"general-table-empty-state-no-match\"\n                bgColor=\"white\"\n                icon={emptyFilterState?.icon ?? 'search'}\n                title={emptyFilterState?.title ?? 'No match found'}\n                body={emptyFilterState?.body ?? ''}\n                secondaryActions={\n                  toggleAction\n                    ? []\n                    : [\n                        {\n                          title: 'Clear all filters',\n                          onClick: () => setFilterValues(initialFilterValues),\n                        },\n                      ]\n                }\n              />\n            ),\n          },\n        ],\n      },\n    ];\n  };\n\n  const tableRows = isLoading\n    ? loadingRows(perPage)\n    : !filteredRows?.length > 0\n    ? emptyFilterView()\n    : hasCheckbox\n    ? checkboxRows()\n    : filteredRows;\n\n  const onSelect = () => {\n    if (isLoading) {\n      return null;\n    }\n\n    if (hasCheckbox) {\n      // change to handleCheckboxSelect\n      return handleSelect;\n    }\n\n    if (hasRadio) {\n      return (_event, _isSelecting, rowIndex) => {\n        const versionData = tableRows[rowIndex];\n        setRadioSelection(versionData);\n      };\n    }\n  };\n\n  return (\n    <>\n      <ToolbarHeader\n        count={apiFilterSort ? count : nonApiCount}\n        toolbarButtons={toolbarButtons}\n        filters={filters}\n        filterValues={filterValues}\n        setFilterValues={setFilterValues}\n        chipsArray={chipsArray}\n        setChipsArray={setChipsArray}\n        isLoading={isLoading}\n        perPage={perPage}\n        setPerPage={setPerPage}\n        page={page}\n        setPage={setPage}\n        toggleButton={toggleButton}\n        toggleAction={toggleAction}\n        toggleState={toggleState}\n        kebabItems={kebabItems}\n      >\n        {!isLoading && hasCheckbox ? (\n          <BulkSelect\n            checkedRows={checkedRows}\n            handleBulkSelect={handleBulkSelect}\n            handlePageSelect={handlePageSelect}\n            handleNoneSelect={handleNoneSelect}\n            displayedRowsLength={filteredRows.length}\n            perPage={perPage}\n            total={apiFilterSort ? count : nonApiCount}\n            filters={chipsArray}\n            filterParams={filterParams}\n            apiFilterSort={apiFilterSort}\n          />\n        ) : null}\n      </ToolbarHeader>\n      <Table\n        data-testid=\"general-table-testid\"\n        variant=\"compact\"\n        aria-label=\"General Table Component\"\n        sortBy={hasCheckbox ? { ...sortBy, index: sortBy.index + 1 } : sortBy}\n        onSort={handleSort}\n        actionResolver={actionResolver ? actionResolver : null}\n        areActionsDisabled={areActionsDisabled}\n        cells={columns}\n        rows={tableRows}\n        onSelect={onSelect()}\n        canSelectAll={false}\n        selectVariant={hasRadio ? 'radio' : hasCheckbox ? 'checkbox' : ''}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n      <ToolbarFooter\n        isLoading={isLoading}\n        count={apiFilterSort ? count : nonApiCount}\n        setFilterValues={setFilterValues}\n        perPage={perPage}\n        setPerPage={setPerPage}\n        page={page}\n        setPage={setPage}\n        isFooterFixed={isFooterFixed}\n      />\n    </>\n  );\n};\n\nGeneralTable.propTypes = {\n  historyProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  apiFilterSort: PropTypes.bool,\n  filters: PropTypes.array,\n  filtersName: PropTypes.string,\n  urlParam: PropTypes.string,\n  loadTableData: PropTypes.func,\n  tableData: PropTypes.object,\n  columnNames: PropTypes.array,\n  rows: PropTypes.array,\n  actionResolver: PropTypes.func,\n  areActionsDisabled: PropTypes.func,\n  defaultSort: PropTypes.object,\n  toolbarButtons: PropTypes.array,\n  toggleButton: PropTypes.array,\n  toggleAction: PropTypes.func,\n  toggleState: PropTypes.number,\n  hasCheckbox: PropTypes.bool,\n  skeletonRowQuantity: PropTypes.number,\n  emptyFilterState: PropTypes.object,\n  selectedItems: PropTypes.func,\n  kebabItems: PropTypes.array,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  initSelectedItems: PropTypes.array,\n  isUseApi: PropTypes.bool,\n  hasToolbar: PropTypes.bool,\n  hasRadio: PropTypes.bool,\n  setRadioSelection: PropTypes.func,\n  isFooterFixed: PropTypes.bool,\n};\n\nGeneralTable.defaultProps = {\n  hasModalSubmitted: false,\n  setHasModalSubmitted: () => {},\n};\n\nexport default GeneralTable;\n","const createFilterValues = (filters) =>\n  filters.map((filter) => {\n    const config = {\n      type: filter.type,\n      label: filter.label,\n    };\n    if (filter.type === 'text') config.value = filter.value || '';\n    if (filter.type === 'checkbox')\n      config.value = filter.options.map((option, index) => ({\n        ...option,\n        id: 'option' + index,\n        isChecked: option.isChecked || false,\n      }));\n    return config;\n  });\n\nexport default createFilterValues;\n","import {\n  BellIcon,\n  CheckCircleIcon,\n  CircleNotchIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  PauseCircleIcon,\n  PlusCircleIcon,\n  UnknownIcon,\n  RepositoryIcon,\n  SearchIcon,\n  ModuleIcon,\n  CubeIcon,\n  TimesCircleIcon,\n  InProgressIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\n\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport successColor from '@patternfly/react-tokens/dist/esm/global_success_color_100';\nimport infoColor from '@patternfly/react-tokens/dist/esm/global_info_color_100';\nimport activeColor from '@patternfly/react-tokens/dist/esm/global_active_color_100';\n\nexport const statusMapper = [\n  'done',\n  'error',\n  'pending',\n  'unknown',\n  'updating',\n  'warning',\n  'notification',\n];\n\nexport const sortByDirection = (data, direction = 'asc') =>\n  data.sort((a, b) =>\n    direction === 'asc'\n      ? a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      : b.name.toLowerCase().localeCompare(a.name.toLowerCase())\n  );\n\nexport const deviceSummaryMapper = [\n  'active',\n  'noReports',\n  'neverReported',\n  'orphaned',\n];\n\nexport const imageDistributionMapper = {\n  'rhel-8.1': 'RHEL 8.1',\n  'rhel-8.2': 'RHEL 8.2',\n  'rhel-8.3': 'RHEL 8.3',\n};\n\nexport const composeStatus = [\n  'CREATED',\n  'BUILDING',\n  'ERROR',\n  'SUCCESS',\n  'INTERRUPTED',\n];\n\nexport const distributionMapper = {\n  'rhel-84': 'RHEL 8.4',\n  'rhel-85': 'RHEL 8.5',\n  'rhel-86': 'RHEL 8.6',\n  'rhel-87': 'RHEL 8.7',\n  'rhel-88': 'RHEL 8.8',\n  'rhel-89': 'RHEL 8.9',\n  'rhel-90': 'RHEL 9.0',\n  'rhel-91': 'RHEL 9.1',\n  'rhel-92': 'RHEL 9.2',\n  'rhel-93': 'RHEL 9.3',\n  'rhel-94': 'RHEL 9.4',\n};\n\nexport const releaseMapper = {\n  'rhel-94': 'Red Hat Enterprise Linux (RHEL) 9.4',\n  'rhel-93': 'Red Hat Enterprise Linux (RHEL) 9.3',\n  'rhel-92': 'Red Hat Enterprise Linux (RHEL) 9.2',\n  'rhel-91': 'Red Hat Enterprise Linux (RHEL) 9.1',\n  'rhel-90': 'Red Hat Enterprise Linux (RHEL) 9.0',\n  'rhel-89': 'Red Hat Enterprise Linux (RHEL) 8.9',\n  'rhel-88': 'Red Hat Enterprise Linux (RHEL) 8.8',\n  'rhel-87': 'Red Hat Enterprise Linux (RHEL) 8.7',\n  'rhel-86': 'Red Hat Enterprise Linux (RHEL) 8.6',\n  'rhel-85': 'Red Hat Enterprise Linux (RHEL) 8.5',\n  'rhel-84': 'Red Hat Enterprise Linux (RHEL) 8.4',\n};\n\nexport const supportedReleases = [\n  'rhel-84',\n  'rhel-85',\n  'rhel-86',\n  'rhel-87',\n  'rhel-88',\n  'rhel-89',\n  'rhel-90',\n  'rhel-91',\n  'rhel-92',\n  'rhel-93',\n  'rhel-94',\n];\n\nexport const temporaryReleases = ['rhel-93'];\n\nexport const DEFAULT_RELEASE = 'rhel-93';\nexport const TEMPORARY_RELEASE = 'rhel-93';\n\nexport const imageTypeMapper = {\n  'rhel-edge-commit': 'RHEL for Edge Commit (.tar)',\n  'rhel-edge-installer': 'RHEL for Edge Installer (.iso)',\n};\n\nexport const iconMapper = {\n  unknown: UnknownIcon,\n  repository: RepositoryIcon,\n  search: SearchIcon,\n  module: ModuleIcon,\n  cube: CubeIcon,\n  question: QuestionCircleIcon,\n  plus: PlusCircleIcon,\n  checkCircle: CheckCircleIcon,\n  exclamationTriangle: ExclamationTriangleIcon,\n  timesCircle: TimesCircleIcon,\n  inProgress: InProgressIcon,\n  exclamationCircle: ExclamationCircleIcon,\n};\n\nexport const colorMapper = {\n  green: successColor.value,\n  yellow: warningColor.value,\n  lightBlue: infoColor.value,\n  blue: activeColor.value,\n  red: dangerColor.value,\n};\n\nexport const statusToIcon = {\n  done: {\n    icon: CheckCircleIcon,\n    color: successColor.value,\n    title: 'Fully adopted',\n  },\n  error: {\n    icon: ExclamationCircleIcon,\n    color: dangerColor.value,\n    title: 'Error while adopting',\n  },\n  pending: { icon: PauseCircleIcon, title: 'Pending adoption' },\n  updating: { icon: CircleNotchIcon, title: 'Updating' },\n  unknown: { icon: UnknownIcon, title: 'Unknown state' },\n  warning: {\n    icon: ExclamationTriangleIcon,\n    color: warningColor.value,\n    title: 'Warning while adopting',\n  },\n  notification: {\n    icon: BellIcon,\n    color: infoColor.value,\n    title: 'Delivering',\n  },\n};\n","import validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\nimport { releaseMapper, supportedReleases } from '../constants';\nimport React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport pAll from 'p-all';\nimport { hosts } from '../api/index';\n\nexport const nameValidator = {\n  type: validatorTypes.PATTERN,\n  pattern: /^[A-Za-z0-9]+[A-Za-z0-9_\\-\\s]*$/,\n  message:\n    'Name must start with alphanumeric characters and can contain underscore and hyphen characters.',\n};\n\nexport const mapUrlToObj = (url, keys) => {\n  const splitUrl = url.split('/');\n  const obj = {};\n\n  for (let i = 1; i < splitUrl.length; i++) {\n    if (splitUrl[i]) {\n      obj[keys[i - 1]] = splitUrl[i];\n    }\n  }\n\n  obj.buildUrl = function () {\n    return Object.values(this).reduce(\n      (acc, curr) => (typeof curr !== 'function' ? `${acc}/${curr}` : acc),\n      ''\n    );\n  };\n\n  return obj;\n};\n\n// urlString is the string added to the url search param\n// state is a boolean that adds or removes the urlString from the url\nexport const stateToUrlSearch = (urlString, state, search) => {\n  var searchArray = [];\n  const currentSearchArray =\n    search.length > 0\n      ? search.includes('&')\n        ? search.split('?')[1].split('&')\n        : search.split('?').slice(1)\n      : [];\n  if (state) {\n    currentSearchArray.includes(urlString)\n      ? currentSearchArray\n      : currentSearchArray.push(urlString);\n    searchArray = currentSearchArray;\n  } else {\n    searchArray = currentSearchArray.includes(urlString)\n      ? currentSearchArray.filter((e) => e !== urlString)\n      : currentSearchArray;\n  }\n\n  return searchArray.join('&');\n};\n\nexport const emptyStateNoFilters = (isLoading, count, search) =>\n  isLoading !== true && !count > 0 && !search.includes('has_filters=true');\n\nexport const canUpdateSelectedDevices = ({ deviceData, imageData }) =>\n  deviceData?.length > 0 && imageData\n    ? deviceData?.some(\n        (device) => device.imageSetId !== deviceData[0].imageSetId\n      )\n    : true;\n\nexport const useFeatureFlags = (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n\n  return flagsReady ? isFlagEnabled : false;\n};\n\nexport const truncateString = (\n  string = '',\n  start,\n  end = 0,\n  separationString = '...'\n) => {\n  if (string.length <= start) {\n    return string;\n  }\n\n  const updatedString = `${string.substring(\n    0,\n    start\n  )}${separationString}${string.substring(string.length - end, string.length)}`;\n\n  return updatedString;\n};\n\nexport const transformSort = ({ direction, name }) => {\n  return {\n    sort_by: direction === 'asc' ? name : `-${name}`,\n  };\n};\n\nexport const isAccountMissing = (data) => data && !data?.Account;\n\n// getReleases returns a list of the supported releases + the forced release\nexport const getReleases = (forcedRelease, inculdedReleases) =>\n  Object.entries(releaseMapper)\n    .filter(\n      ([release]) =>\n        (inculdedReleases ? inculdedReleases : supportedReleases).includes(\n          release\n        ) || release === forcedRelease\n    )\n    .map(([release, releaseLabel]) => ({\n      value: release,\n      label: releaseLabel,\n    }));\n\nexport const createLink = ({ pathname, linkText, target }) => {\n  return (\n    <Button\n      component=\"a\"\n      target={target}\n      variant=\"link\"\n      target-href={pathname}\n      href={pathname}\n      isInline=\"false\"\n    >\n      {linkText}\n    </Button>\n  );\n};\n\nconst resolve = async (fns, limit = 2) => {\n  const results = await pAll(fns, {\n    concurrency: limit,\n  });\n  return results;\n};\n\nexport const deleteSystemsById = (items, batchSize = 50) => {\n  let arr = [];\n  for (let i = 0; i < items.length; i += batchSize) {\n    let chunk;\n    chunk = items.slice(i, i + batchSize);\n    arr.push(chunk);\n  }\n\n  const results = resolve(\n    arr.map((itemArray) => () => {\n      return hosts.apiHostDeleteHostById(itemArray);\n    })\n  );\n  return results;\n};\n"],"names":["getInventory","query","q","getTableParams","instance","EDGE_API","getInventoryByGroup","id","getDevice","getDeviceUpdates","updateSystem","payload","IMAGE_BUILDER_API","CONTENT_SOURCES_API","INVENTORY_API_BASE","RHSM_API","hosts","HostsApi","undefined","Object","keys","reduce","acc","curr","value","length","multiVals","val","includes","Empty","bgColor","icon","title","body","primaryAction","secondaryActions","target","variant","style","backgroundColor","iconMapper","headingLevel","size","Array","isArray","map","item","index","key","href","createLink","pathname","linkText","text","onClick","click","type","link","className","component","propTypes","PropTypes","defaultProps","FilterDropdown","filters","dropdown","setDropdown","ToolbarItem","Select","width","onToggle","prevState","isOpen","onSelect","_e","selection","selected","selections","toggleIcon","filter","SelectOption","label","FilterInput","filterValues","setFilterValues","input","selectedFilter","find","useState","setIsOpen","handleFilterChange","checkboxValue","selectedIndex","findIndex","checkedType","checkboxIndex","i","option","newValueArray","values","isChecked","newTextValue","InputGroup","SearchInput","name","toLowerCase","placeholder","onChange","onClear","filterLabelIndex","slice","placeholderText","isCheckboxSelectionBadgeHidden","arr","FilterControls","children","FilterChips","chipsArray","setChipsArray","setPage","useEffect","forEach","filterOption","chip","state","apiName","optionApiName","addTextFilter","f","entries","ChipGroup","categoryName","Chip","changedValue","changeFalse","removeIndex","handleDeleteFilter","Button","setFalse","checkbox","ToolbarKebab","kebabItems","kebabIsOpen","setKebabIsOpen","dropdownItems","isDisabled","DropdownItem","Dropdown","toggle","KebabToggle","prev","isPlain","ToolbarButtons","buttons","ToolbarHeader","toolbarButtons","isLoading","count","perPage","setPerPage","page","toggleButton","toggleAction","toggleState","Toolbar","padding","ToolbarContent","ToggleGroup","btn","ToggleGroupItem","isSelected","align","default","Skeleton","Pagination","itemCount","onSetPage","pageNumber","widgetId","onPerPageSelect","isCompact","spacer","ToolbarFooter","styles","isFixed","paddingBottom","paddingTop","limit","isResolving","promiseResults","results","setResults","resolve","useCallback","fns","pAll","concurrency","usePromiseQueue","fetchBatched","fetchFunction","total","batchSize","pages","Math","ceil","_","pageIdx","offset","BulkSelect","checkedRows","handleBulkSelect","handlePageSelect","handleNoneSelect","filterParams","apiFilterSort","isAllSelected","isPartiallySelected","selectAllToggle","setSelectAllToggle","useFetchBatched","fetchAllSystemIds","selectAllIds","location","data","rows","rowInfo","row","push","deviceID","DeviceID","DeviceUUID","display_name","DeviceName","imageSetId","ImageSetID","imageName","ImageName","deviceGroups","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","displayedRowsLength","returnAcc","GeneralTable","historyProp","locationProp","navigateProp","urlParam","filtersName","loadTableData","tableData","columnNames","actionResolver","areActionsDisabled","defaultSort","emptyFilterState","hasCheckbox","skeletonRowQuantity","selectedItems","initSelectedItems","hasModalSubmitted","setHasModalSubmitted","isUseApi","hasRadio","setRadioSelection","isFooterFixed","defaultCheckedRows","initialFilterValues","config","options","createFilterValues","sessionFilterValue","window","sessionStorage","getItem","initialFilter","JSON","parse","removeItem","stringify","setItem","sortBy","setSortBy","setCheckedRows","dispatch","useDispatch","history","useHistory","navigate","useNavigate","useLocation","search","a","stateToUrlSearch","replace","transformSort","direction","columns","status","update_available","activeFilters","hasError","filteredByNameRows","checked","every","noApiSortFilter","some","sortedByDirection","sort","b","localeCompare","sensitivity","nonApiCount","toShowSort","columnName","transforms","sortable","columnTransforms","filteredRows","tableRows","cells","loadingRows","heightAuto","props","colSpan","checkedRow","checkedIds","newRows","filtered","Table","onSort","_event","isSelecting","rowIndex","_isSelecting","versionData","canSelectAll","selectVariant","TableHeader","TableBody","hasToolbar","statusMapper","sortByDirection","distributionMapper","releaseMapper","supportedReleases","temporaryReleases","DEFAULT_RELEASE","TEMPORARY_RELEASE","imageTypeMapper","unknown","UnknownIcon","repository","RepositoryIcon","SearchIcon","module","ModuleIcon","cube","CubeIcon","question","QuestionCircleIcon","plus","PlusCircleIcon","checkCircle","CheckCircleIcon","exclamationTriangle","ExclamationTriangleIcon","timesCircle","TimesCircleIcon","inProgress","InProgressIcon","exclamationCircle","ExclamationCircleIcon","colorMapper","green","successColor","yellow","warningColor","lightBlue","infoColor","blue","activeColor","red","dangerColor","statusToIcon","done","color","error","pending","PauseCircleIcon","updating","CircleNotchIcon","warning","notification","BellIcon","nameValidator","validatorTypes","pattern","message","mapUrlToObj","url","splitUrl","split","obj","buildUrl","this","urlString","searchArray","currentSearchArray","e","join","emptyStateNoFilters","canUpdateSelectedDevices","deviceData","imageData","device","useFeatureFlags","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","truncateString","string","start","end","separationString","updatedString","substring","sort_by","getReleases","forcedRelease","inculdedReleases","release","isInline","deleteSystemsById","items","chunk","itemArray"],"sourceRoot":""}