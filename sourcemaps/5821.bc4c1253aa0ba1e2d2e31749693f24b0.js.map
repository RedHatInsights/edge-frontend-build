{"version":3,"file":"js/5821.1652889841840.bd6eb15b895fa3f7547a.js","mappings":"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A,EAAD,CAAMR,UAAW6O,EAAAA,EAAAA,OACf,kBAACrO,EAAA,EAAD,CACEsO,OAAO,SACPC,KAAK,yTACLC,eAAa,EACbhP,UAAW6O,EAAAA,EAAAA,GAJb,4BAOE,kBAAC,MAAD,CAAqBrP,UAAU,oBCrCpC,IAEM0P,GAAoB,CAC/B,OACA,MACA,SACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,QACA,QACA,OACA,WACA,OACA,OACA,OACA,OACA,WACA,QACA,SACA,MACA,MACA,WACA,UACA,UACA,SACA,QACA,UACA,OACA,QACA,MACA,QACA,WACA,QACA,OACA,UACA,UACA,MACA,eACA,OACA,UACA,WACA,OACA,MACA,MACA,MACA,QACA,MACA,UACA,MACA,MACA,WACA,WACA,YACA,WACA,SACA,MACA,QACA,SACA,SACA,OACA,OACA,YACA,MACA,cACA,MACA,UACA,kBACA,SACA,QACA,SACA,QACA,OACA,UACA,YACA,YACA,OACA,QACA,WACA,UACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,WACA,UACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,SACA,UACA,WACA,YACA,SACA,OACA,YACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,QACA,OACA,WACA,YACA,cACA,UACA,UACA,UACA,QACA,SACA,OACA,WACA,UACA,SACA,aACA,OACA,gBACA,QACA,QACA,OACA,UACA,aACA,MACA,QACA,UACA,UACA,SACA,UACA,UACA,gBACA,UACA,UACA,gBACA,UACA,OACA,UACA,YACA,WACA,kBACA,kBACA,kBACA,QACA,SACA,SACA,ICtKWC,GAA4B,kBAAM,SAACzM,GAAD,OAC7CwM,GAAkBtM,SAASF,GACvB,kDACArC,I,YCqDN,SArD8B,SAAC,GAAiB,QAAZkG,GAAY,aAC9C,GAA6BpG,EAAAA,EAAAA,WAArBa,EAAR,EAAQA,OAAQ7B,EAAhB,EAAgBA,SACRqH,GAAUC,EAAAA,EAAAA,GAAYF,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","sources":["webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/field-provider/field-provider.js","webpack:///./src/components/form/CustomSubmitButtons.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/Routes/ImageManager/steps/repositories.js","webpack:///./src/Routes/ImageManager/steps/customPackage.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pficon-sort-common-asc-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pficon-sort-common-desc-icon.js","webpack:///./node_modules/@data-driven-forms/pf4-component-mapper/esm/dual-list-sort-button/dual-list-sort-button.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/form/constants.js","webpack:///./src/components/form/validators.js","webpack:///./src/components/form/CustomPackageTextArea.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js","webpack:///./src/components/form/WizardRepositoryTable.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"render\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '../use-field-api';\n\nvar FieldProvider = function FieldProvider(_ref) {\n  var Component = _ref.Component,\n      render = _ref.render,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var fieldProviderProps = useFieldApi(props);\n\n  if (Component) {\n    return /*#__PURE__*/React.createElement(Component, fieldProviderProps);\n  }\n\n  if (render) {\n    return render(_objectSpread({}, fieldProviderProps));\n  }\n\n  throw new Error('Field provider is missing either Component or render prop.');\n};\n\nFieldProvider.propTypes = {\n  Component: PropTypes.oneOfType([PropTypes.node, PropTypes.element, PropTypes.func]),\n  render: PropTypes.func\n};\nexport default FieldProvider;","import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../../../components/form/CustomSubmitButtons';\n\nexport default {\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Select, SelectOption, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  DEFAULT_RELEASE,\n  getReleases,\n} from '../../ImageManagerDetail/constants';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst ReleaseLabel = () => {\n  const { change, getState } = useFormApi();\n  const release = getState()?.values?.release || DEFAULT_RELEASE;\n  const releases = getState()?.values?.release_options || getReleases(release);\n  const [options, setOptions] = useState(releases);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(release);\n\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const onSelect = (_event, selection, isPlaceholder) => {\n    if (isPlaceholder) clearSelection();\n    else {\n      setSelected(selection);\n      setIsOpen(false);\n    }\n    change('release', selection);\n  };\n\n  const clearSelection = () => {\n    setSelected(release);\n    setIsOpen(false);\n    setOptions(releases);\n  };\n\n  return (\n    <Select\n      variant=\"single\"\n      width=\"100%\"\n      onToggle={onToggle}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      style={{ paddingLeft: 0, marginLeft: 0 }}\n    >\n      {options.map((item) => (\n        <SelectOption key={item.value} value={item.value}>\n          {item.label}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : values?.includesCustomRepos\n      ? 'repositories'\n      : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information about your image.</Text>,\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'release',\n      label: <ReleaseLabel />,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Flex, FlexItem, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { checkImageName } from '../../../api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { nameValidator } from '../../../constants';\n\nconst helperText =\n  'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).';\n\nconst asyncImageNameValidation = (value) =>\n  checkImageName(value)\n    .then((result) => {\n      if (result.ImageExists) {\n        throw new Error('Name already exists');\n      }\n    })\n    .catch(({ message }) => {\n      throw message;\n    });\n\nconst CharacterCount = () => {\n  const { getState } = useFormApi();\n  const description = getState().values?.description;\n  return <h1>{description?.length || 0}/250</h1>;\n};\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      helperText: helperText,\n      validate: [\n        asyncImageNameValidation,\n        { type: validatorTypes.REQUIRED },\n        nameValidator,\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'description',\n      label: (\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Text component={'b'}>Description</Text>\n          </FlexItem>\n          <FlexItem>\n            <CharacterCount />\n          </FlexItem>\n        </Flex>\n      ),\n      placeholder: 'Add description',\n\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        height: '25vh',\n      },\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Device registration',\n  name: 'registration',\n  nextStep: ({ values }) =>\n    values?.includesCustomRepos ? 'repositories' : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to log into your device.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      helperText: (\n        <HelperText>\n          <HelperTextItem className=\"pf-u-mt-xs\" variant=\"indeterminate\">\n            Can only contain letters, numbers, hyphens ( - ), and underscores( _\n            ).\n          </HelperTextItem>\n        </HelperText>\n      ),\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n          message:\n            'Can only contain letters, numbers, hyphens ( - ), and underscores( _ ).',\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        { type: 'reservedUsernameValidator' },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport WizardRepositoryTable from '../../../components/form/WizardRepositoryTable';\n\nexport default {\n  title: 'Custom repositories',\n  name: 'repositories',\n  nextStep: ({ values }) =>\n    values?.['third-party-repositories']?.length > 0\n      ? 'customPackages'\n      : 'packages',\n\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Choose from linked custom repositories from which to search and add\n          packages to this image.\n        </Text>\n      ),\n    },\n    {\n      component: 'custom-repo-table',\n      name: 'third-party-repositories',\n      label: <WizardRepositoryTable />,\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  Button,\n  Popover,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst CustomPackageLabel = () => {\n  const { getState } = useFormApi();\n  const addedRepos = getState()?.values?.['third-party-repositories'];\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n\n  return (\n    <TextContent>\n      <Text>\n        Add packages from{' '}\n        <Popover\n          style={{ visibility: 'visible' }}\n          position=\"bottom\"\n          headerContent=\"Custom Repositories\"\n          bodyContent={\n            <Stack>\n              {addedRepos.map((repo) => (\n                <StackItem key={repo}>\n                  <Text>{repo.name}</Text>\n                </StackItem>\n              ))}\n            </Stack>\n          }\n        >\n          <Button variant=\"link\" isInline>\n            {addedRepos.length} custom repositories\n          </Button>{' '}\n          to your\n        </Popover>\n        <b> {releaseName}</b> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Custom packages',\n  name: 'customPackages',\n  nextStep: 'packages',\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n\n      label: <CustomPackageLabel />,\n    },\n    {\n      component: 'custom-package-text-area',\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'custom-packages',\n      initialValue: [],\n      clearedValue: [],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packageDetails',\n      label: (\n        <Text>\n          Specify individual packages by exact name and casing, with no\n          whitespace, one entry to a line, and can include hyphens ( - ).\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning',\n      label: (\n        <Text className=\"pf-u-warning-color-200\">\n          <ExclamationTriangleIcon class=\"pf-u-warning-color-100\" />\n          &nbsp; Packages names that do not have exact name and casing will not\n          be included in the image.\n        </Text>\n      ),\n    },\n  ],\n};\n","import { createIcon } from '../createIcon';\n\nexport const PficonSortCommonAscIconConfig = {\n  name: 'PficonSortCommonAscIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M256,768 L256,16 C256,7.2 248.9,0 240,0 L143.6,0 C134.8,0 128,7.2 128,16 L128,768 L17.1,767.8 C6.8,767.8 0,774.5 0,785.2 C0,791.1 1.2,792.2 3.7,795.3 L179.9,1019.3 C183,1022.3 187.4,1024 192,1024 C196.6,1024 200.6,1022.2 203.7,1019.3 L380.3,795.5 C389.1,784.3 381.1,768 366.9,768 L256,768 Z M528,768 C517.9,768 512,760.8 512,751.8 L512,656.2 C512,647.3 520.2,640 530.3,640 L1005.7,640 C1015.8,640 1024,647.2 1024,656.2 L1024,751.8 C1024,760.7 1015.8,768 1005.7,768 L528,768 Z M530.3,512 C520.1,512 512,503.8 512,493.7 L512,402.8 C512,392.7 520.2,384.5 530.3,384.5 L879.6,384.5 C889.7,384.5 897.9,392.7 897.9,402.8 L897.9,493.7 C897.9,503.8 889.7,512 879.6,512 L530.3,512 L530.3,512 Z M533,256 C521.3,256 512,247.9 512,238 L512,146 C512,136.1 521.4,128 533,128 L747,128 C758.6,128 768,136.1 768,146 L768,238 C768,247.9 758.6,256 747,256 L533,256 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PficonSortCommonAscIcon = createIcon(PficonSortCommonAscIconConfig);\n\nexport default PficonSortCommonAscIcon;","import { createIcon } from '../createIcon';\n\nexport const PficonSortCommonDescIconConfig = {\n  name: 'PficonSortCommonDescIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M256,768 L256,16 C256,7.2 248.9,0 240,0 L143.6,0 C134.8,0 128,7.2 128,16 L128,768 L17.1,767.8 C6.8,767.8 0,774.5 0,785.2 C0,791.1 1.2,792.2 3.7,795.3 L179.9,1019.3 C183,1022.3 187.4,1024 192,1024 C196.6,1024 200.6,1022.2 203.7,1019.3 L380.3,795.5 C389.1,784.3 381.1,768 366.9,768 L256,768 Z M528,128 L1005.7,128 C1015.8,128 1024,135.3 1024,144.2 L1024,239.8 C1024,248.8 1015.8,256 1005.7,256 L530.3,256 C520.2,256 512,248.7 512,239.8 L512,144.2 C512,135.2 517.9,128 528,128 L528,128 Z M530.3,384 L879.6,384 C889.7,384 897.9,392.2 897.9,402.3 L897.9,493.2 C897.9,503.3 889.7,511.5 879.6,511.5 L530.3,511.5 C520.2,511.5 512,503.3 512,493.2 L512,402.3 C512,392.2 520.1,384 530.3,384 L530.3,384 Z M533,640 L747,640 C758.6,640 768,648.1 768,658 L768,750 C768,759.9 758.6,768 747,768 L533,768 C521.4,768 512,759.9 512,750 L512,658 C512,648.1 521.3,640 533,640 L533,640 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PficonSortCommonDescIcon = createIcon(PficonSortCommonDescIconConfig);\n\nexport default PficonSortCommonDescIcon;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"position\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { ButtonVariant } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport PficonSortCommonAscIcon from \"@patternfly/react-icons/dist/esm/icons/pficon-sort-common-asc-icon\";\nimport PficonSortCommonDescIcon from \"@patternfly/react-icons/dist/esm/icons/pficon-sort-common-desc-icon\";\nimport DualListContext from '../dual-list-context';\n\nvar DualListSortButton = function DualListSortButton(_ref) {\n  var position = _ref.position,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(DualListContext),\n      sortConfig = _useContext.sortConfig,\n      setSortConfig = _useContext.setSortConfig;\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    variant: ButtonVariant.plain,\n    onClick: sortConfig[position] === 'asc' ? function () {\n      return setSortConfig(_objectSpread(_objectSpread({}, sortConfig), {}, _defineProperty({}, position, 'desc')));\n    } : function () {\n      return setSortConfig(_objectSpread(_objectSpread({}, sortConfig), {}, _defineProperty({}, position, 'asc')));\n    },\n    \"aria-label\": \"Sort\"\n  }, rest), sortConfig[position] === 'asc' ? /*#__PURE__*/React.createElement(PficonSortCommonAscIcon, null) : /*#__PURE__*/React.createElement(PficonSortCommonDescIcon, null));\n};\n\nDualListSortButton.propTypes = {\n  position: PropTypes.oneOf(['left', 'right'])\n};\nexport default DualListSortButton;","import React, { useState, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\nimport {\n  TextContent,\n  Text,\n  Button,\n  DualListSelector,\n  DualListSelectorPane,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorControlsWrapper,\n  DualListSelectorControl,\n  HelperText,\n  HelperTextItem,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Divider,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { sortByDirection as sortedOptions } from '../../constants';\n\nconst EmptyText = ({ text }) => (\n  <Text className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    {text}\n  </Text>\n);\n\nEmptyText.propTypes = {\n  text: PropTypes.string,\n};\n\nconst NoResultsText = ({ heading, body }) => (\n  <TextContent className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    <Text component=\"h3\">{heading}</Text>\n    <Text component=\"small\">{body}</Text>\n  </TextContent>\n);\n\nNoResultsText.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n};\n\nconst mapPackagesToOptions = (pkgs) =>\n  pkgs.map((pkg) => ({\n    selected: false,\n    isVisible: true,\n    ...pkg,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [availableOptions, setAvailableOptions] = React.useState([]);\n  const [chosenOptions, setChosenOptions] = React.useState([]);\n  const [availableInputValue, setAvailableInputValue] = React.useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n  const [hasMoreResults, setHasMoreResults] = useState(false);\n  const [scrollTo, setScrollTo] = useState(null);\n  const [hasNoSearchResults, setHasNoSearchResults] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [exactMatch, setExactMatch] = useState(false);\n\n  useEffect(() => {\n    const loadedPackages = getState()?.values?.[input.name] || [];\n    setChosenOptions(sortedOptions(mapPackagesToOptions(loadedPackages)));\n\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"available search input\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackageSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  useEffect(() => {\n    scrollToAddedPackages();\n  }, [scrollTo]);\n\n  const handlePackageSearch = async () => {\n    if (availableInputValue === '') {\n      return;\n    }\n\n    const { data, meta } = await getPackages(\n      getState()?.values?.release || 'rhel-85',\n      getState()?.values?.architecture || defaultArch,\n      availableInputValue\n    );\n\n    if (!data) {\n      setHasNoSearchResults(true);\n      setHasMoreResults(false);\n      setAvailableOptions([]);\n      return;\n    }\n\n    if (meta.count > 100) {\n      setHasNoSearchResults(false);\n      setHasMoreResults(true);\n\n      let exactMatchIndex = null;\n      data.forEach(({ name }, index) => {\n        if (name === availableInputValue) {\n          exactMatchIndex = index;\n          return;\n        }\n      });\n\n      const isNotChosen = !chosenOptions.find(\n        (option) => option.name === data[exactMatchIndex].name\n      );\n\n      if (exactMatchIndex !== null && isNotChosen) {\n        setExactMatch(true);\n        setAvailableOptions(mapPackagesToOptions([data[exactMatchIndex]]));\n        return;\n      }\n\n      setExactMatch(false);\n      setAvailableOptions([]);\n      return;\n    } else {\n      setHasMoreResults(false);\n\n      setExactMatch(false);\n    }\n\n    const removeChosenPackages = data.filter(\n      (newPkg) =>\n        !chosenOptions.find((chosenPkg) => chosenPkg.name === newPkg.name)\n    );\n    setAvailableOptions(\n      sortedOptions(mapPackagesToOptions(removeChosenPackages))\n    );\n\n    setHasNoSearchResults(false);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  const scrollToAddedPackages = () => {\n    if (!scrollTo) {\n      return;\n    }\n\n    const destination = document.querySelector(\n      `.pf-m-${scrollTo.pane} .pf-c-dual-list-selector__menu`\n    );\n    scrollTo.pkgs.forEach((pkg) =>\n      document\n        .getElementById(`package-${pkg.name}`)\n        .closest('.pf-c-dual-list-selector__list-item-row')\n        .classList.add('pf-u-background-color-disabled-color-300')\n    );\n    setTimeout(() => {\n      scrollTo.pkgs.forEach((pkg) =>\n        document\n          .getElementById(`package-${pkg.name}`)\n          .closest('.pf-c-dual-list-selector__list-item-row')\n          .classList.remove('pf-u-background-color-disabled-color-300')\n      );\n    }, 400);\n    destination.scrollTop = scrollTo.scrollHeight;\n\n    setScrollTo(null);\n  };\n\n  const moveSelected = (fromAvailable) => {\n    const sourceOptions = fromAvailable ? availableOptions : chosenOptions;\n    let destinationOptions = fromAvailable ? chosenOptions : availableOptions;\n\n    const selectedOptions = [];\n    for (let i = 0; i < sourceOptions.length; i++) {\n      const option = sourceOptions[i];\n      if (option.selected && option.isVisible) {\n        selectedOptions.push(option);\n        sourceOptions.splice(i, 1);\n        option.selected = false;\n        i--;\n      }\n    }\n\n    destinationOptions = sortedOptions([\n      ...destinationOptions,\n      ...selectedOptions,\n    ]);\n\n    const packageHeight = 61;\n    const scrollHeight =\n      destinationOptions.findIndex(\n        (pkg) => pkg.name === selectedOptions[0].name\n      ) * packageHeight;\n\n    if (fromAvailable) {\n      setAvailableOptions(sortedOptions([...sourceOptions]));\n      setChosenOptions(destinationOptions);\n      change(input.name, destinationOptions);\n    } else {\n      setChosenOptions(sortedOptions([...sourceOptions]));\n      setAvailableOptions(destinationOptions);\n      change(input.name, [...sourceOptions]);\n    }\n    setScrollTo({\n      pkgs: selectedOptions,\n      pane: fromAvailable ? 'chosen' : 'available',\n      scrollHeight,\n    });\n    setExactMatch(false);\n  };\n\n  const moveAll = (fromAvailable) => {\n    if (fromAvailable) {\n      setChosenOptions(\n        sortedOptions([\n          ...availableOptions.filter((x) => x.isVisible),\n          ...chosenOptions,\n        ])\n      );\n      setAvailableOptions(\n        sortedOptions([...availableOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, [...availableOptions, ...chosenOptions]);\n    } else {\n      setAvailableOptions(\n        sortedOptions([\n          ...chosenOptions.filter((x) => x.isVisible),\n          ...availableOptions,\n        ])\n      );\n      setChosenOptions(\n        sortedOptions([...chosenOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, []);\n    }\n    setExactMatch(false);\n  };\n\n  const onOptionSelect = (_event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...chosenOptions];\n      newChosen[index].selected = !chosenOptions[index].selected;\n      setChosenOptions(sortedOptions(newChosen));\n    } else {\n      const newAvailable = [...availableOptions];\n      newAvailable[index].selected = !availableOptions[index].selected;\n      setAvailableOptions(sortedOptions(newAvailable));\n    }\n  };\n\n  const buildSearchInput = (isAvailable) => {\n    const onChange = (value) => {\n      setAvailableInputValue(value);\n      if (!isAvailable) {\n        const toFilter = [...chosenOptions];\n        toFilter.forEach((option) => {\n          option.isVisible =\n            value === '' ||\n            option.name.toLowerCase().includes(value.toLowerCase());\n        });\n      }\n    };\n\n    return (\n      <>\n        <InputGroup>\n          <TextInput\n            id={`${isAvailable ? 'available' : 'chosen'}-textinput`}\n            type=\"search\"\n            onChange={onChange}\n            placeholder=\"Search for packages\"\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            validated={\n              hasMoreResults && isAvailable && !searchFocused ? 'warning' : ''\n            }\n            aria-label={\n              isAvailable ? 'available search input' : 'chosen search input'\n            }\n            data-testid={\n              isAvailable ? 'available-search-input' : 'chosen-search-input'\n            }\n          />\n          {isAvailable ? (\n            <Button\n              onClick={handlePackageSearch}\n              isDisabled={!isAvailable}\n              variant=\"control\"\n              aria-label=\"search button for search input\"\n              data-testid=\"package-search\"\n            >\n              <SearchIcon />\n            </Button>\n          ) : (\n            <InputGroupText>\n              <SearchIcon className=\"pf-u-ml-xs pf-u-mr-xs\" />\n            </InputGroupText>\n          )}\n        </InputGroup>\n        {hasMoreResults && isAvailable && (\n          <HelperText>\n            <HelperTextItem variant=\"warning\">\n              Over 100 results found. Refine your search.\n            </HelperTextItem>\n          </HelperText>\n        )}\n      </>\n    );\n  };\n\n  const displayPackagesFrom = (options, isChosen) => {\n    return options.map((option, index) => {\n      return option.isVisible ? (\n        <DualListSelectorListItem\n          key={index}\n          isSelected={option.selected}\n          id={`composable-option-${index}`}\n          onOptionSelect={(e) => onOptionSelect(e, index, isChosen)}\n        >\n          <TextContent>\n            <span\n              id={`package-${option.name}`}\n              className=\"pf-c-dual-list-selector__item-text\"\n            >\n              {option.name}\n            </span>\n            <small>{option.summary}</small>\n          </TextContent>\n        </DualListSelectorListItem>\n      ) : null;\n    });\n  };\n\n  const selectedStatus = (options) => {\n    const totalItemNum = options.filter((x) => x.isVisible).length;\n    const selectedItemNum = options.filter(\n      (x) => x.selected && x.isVisible\n    ).length;\n    return selectedItemNum > 0\n      ? `${selectedItemNum} of ${totalItemNum} items selected`\n      : `${totalItemNum} ${totalItemNum > 1 ? 'items' : 'item'}`;\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        status={selectedStatus(availableOptions)}\n        searchInput={buildSearchInput(true)}\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"available-packages-list\"\n        >\n          {availableOptions.length > 0 && !exactMatch ? (\n            displayPackagesFrom(availableOptions, false)\n          ) : hasNoSearchResults ? (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          ) : hasMoreResults ? (\n            <>\n              {exactMatch && (\n                <HelperText>\n                  <HelperTextItem\n                    className=\"pf-u-ml-md pf-u-mt-md\"\n                    variant=\"indeterminate\"\n                  >\n                    Exact match\n                  </HelperTextItem>\n                </HelperText>\n              )}\n              {exactMatch && displayPackagesFrom(availableOptions, false)}\n              {exactMatch && (\n                <Divider\n                  className=\"pf-u-mt-md\"\n                  inset={{ default: 'insetMd' }}\n                />\n              )}\n              <NoResultsText\n                heading=\"Too many results to display\"\n                body=\"Please make the search more specific and try again\"\n              />\n            </>\n          ) : (\n            <EmptyText text=\"Search above to add additional packages to your image.\" />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!availableOptions.some((option) => option.selected)}\n          onClick={() => moveSelected(true)}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availableOptions.length === 0}\n          onClick={() => moveAll(true)}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={chosenOptions.length === 0}\n          onClick={() => moveAll(false)}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelected(false)}\n          isDisabled={!chosenOptions.some((option) => option.selected)}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        status={selectedStatus(chosenOptions)}\n        searchInput={buildSearchInput(false)}\n        isChosen\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"chosen-packages-list\"\n        >\n          {chosenOptions.length === 0 ? (\n            <EmptyText text=\"No packages added.\" />\n          ) : chosenOptions.filter((option) => option.isVisible).length > 0 ? (\n            displayPackagesFrom(chosenOptions, true)\n          ) : (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { Fragment, useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\" hasIcon>\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing devices. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <>\n          <Checkbox\n            key={index}\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </TextContent>\n          {value === 'rhel-edge-installer' && (\n            <Fragment>\n              <Text component={TextVariants.small}>\n                <Text\n                  target=\"_blank\"\n                  href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#edge-how-to-compose-and-deploy-a-rhel-for-edge-image_introducing-rhel-for-edge-images\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            </Fragment>\n          )}\n        </>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/assembly_using-secure-communications-between-two-systems-with-openssh_configuring-basic-system-settings#generating-ssh-key-pairs_assembly_using-secure-communications-between-two-systems-with-openssh\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","import React from 'react';\n\nexport const InventoryContext = React.createContext({});\n\nexport const reservedUsernames = [\n  'root',\n  'bin',\n  'daemon',\n  'sys',\n  'adm',\n  'tty',\n  'disk',\n  'lp',\n  'mem',\n  'kmem',\n  'wheel',\n  'cdrom',\n  'sync',\n  'shutdown',\n  'halt',\n  'mail',\n  'news',\n  'uucp',\n  'operator',\n  'games',\n  'gopher',\n  'ftp',\n  'man',\n  'oprofile',\n  'pkiuser',\n  'dialout',\n  'floppy',\n  'games',\n  'slocate',\n  'utmp',\n  'squid',\n  'pvm',\n  'named',\n  'postgres',\n  'mysql',\n  'nscd',\n  'rpcuser',\n  'console',\n  'rpc',\n  'amandabackup',\n  'tape',\n  'netdump',\n  'utempter',\n  'vdsm',\n  'kvm',\n  'rpm',\n  'ntp',\n  'video',\n  'dip',\n  'mailman',\n  'gdm',\n  'xfs',\n  'pppusers',\n  'popusers',\n  'slipusers',\n  'mailnull',\n  'apache',\n  'wnn',\n  'smmsp',\n  'puppet',\n  'tomcat',\n  'lock',\n  'ldap',\n  'frontpage',\n  'nut',\n  'beagleindex',\n  'tss',\n  'piranha',\n  'prelude-manager',\n  'snortd',\n  'audio',\n  'condor',\n  'nslcd',\n  'wine',\n  'pegasus',\n  'webalizer',\n  'haldaemon',\n  'vcsa',\n  'avahi',\n  'realtime',\n  'tcpdump',\n  'privoxy',\n  'sshd',\n  'radvd',\n  'cyrus',\n  'saslauth',\n  'arpwatch',\n  'fax',\n  'nocpulse',\n  'desktop',\n  'dbus',\n  'jonas',\n  'clamav',\n  'screen',\n  'quaggavt',\n  'sabayon',\n  'polkituser',\n  'wbpriv',\n  'postfix',\n  'postdrop',\n  'majordomo',\n  'quagga',\n  'exim',\n  'distcache',\n  'radiusd',\n  'hsqldb',\n  'dovecot',\n  'ident',\n  'users',\n  'qemu',\n  'ovirt',\n  'rhevm',\n  'jetty',\n  'saned',\n  'vhostmd',\n  'usbmuxd',\n  'bacula',\n  'cimsrvr',\n  'mock',\n  'ricci',\n  'luci',\n  'activemq',\n  'cassandra',\n  'stap-server',\n  'stapusr',\n  'stapsys',\n  'stapdev',\n  'swift',\n  'glance',\n  'nova',\n  'keystone',\n  'quantum',\n  'cinder',\n  'ceilometer',\n  'ceph',\n  'avahi-autoipd',\n  'pulse',\n  'rtkit',\n  'abrt',\n  'retrace',\n  'ovirtagent',\n  'ats',\n  'dhcpd',\n  'myproxy',\n  'sanlock',\n  'aeolus',\n  'wallaby',\n  'katello',\n  'elasticsearch',\n  'mongodb',\n  'wildfly',\n  'jbosson-agent',\n  'jbosson',\n  'heat',\n  'haproxy',\n  'hacluster',\n  'haclient',\n  'systemd-journal',\n  'systemd-network',\n  'systemd-resolve',\n  'gnats',\n  'listar',\n  'nobody',\n  '',\n];\n","import { reservedUsernames } from './constants';\n\nexport const reservedUsernameValidator = () => (value) =>\n  reservedUsernames.includes(value)\n    ? 'This is a username reserved for the system'\n    : undefined;\n","import React, { useEffect, useState } from 'react';\nimport { FormGroup, TextArea } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst CustomPackageTextArea = ({ ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const wizardState = getState()?.values?.[input.name];\n  const [value, setValue] = useState(\n    wizardState?.map((repo) => repo.name).join('\\n')\n  );\n\n  useEffect(() => {\n    const customRepoArray = value\n      .split(/[/,/\\n\\r\\s\\t]+/g)\n      .reduce((acc, repo) => {\n        const onlyText = repo.replace(/[/ /\\n\\r\\s\\t]+/g, '');\n        if (onlyText !== '' && onlyText !== '\\n') {\n          return (acc = [...acc, { name: `${onlyText}` }]);\n        }\n        return acc;\n      }, []);\n    change(input.name, customRepoArray);\n  }, [value]);\n\n  useEffect(() => {\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"custom-package-wizard-step\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <FormGroup label=\"Packages\" type=\"string\">\n      <TextArea\n        aria-label=\"custom-package-wizard-step\"\n        placeholder=\"Enter or paste packages from linked repositories, one entry per line.&#13;ExamplePackage&#13;example-package&#13;examplapackage\"\n        value={value}\n        onChange={(newValue) => setValue(newValue)}\n        style={{\n          paddingRight: '32px',\n          height: '25vh',\n        }}\n      ></TextArea>\n    </FormGroup>\n  );\n};\n\nexport default CustomPackageTextArea;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport WizardRepositoryTable from './form/WizardRepositoryTable';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport { reservedUsernameValidator } from './form/validators';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport CustomPackageTextArea from './form/CustomPackageTextArea';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'custom-repo-table': {\n          component: WizardRepositoryTable,\n        },\n        'custom-package-text-area': {\n          component: CustomPackageTextArea,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n        reservedUsernameValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12}>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <Grid key={name}>\n          <GridItem span={3}>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9}>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n} from '../../Routes/ImageManagerDetail/constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: getState().initialValues.version + 1 },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = () => {\n    let outputs = [\n      { name: 'Release', value: releaseMapper[getState().values.release] },\n      {\n        name: 'Output Type',\n        value: imageTypeMapper['rhel-edge-commit'],\n      },\n    ];\n    if (getState().values.imageType.includes('rhel-edge-installer')) {\n      outputs.push({ name: '', value: imageTypeMapper['rhel-edge-installer'] });\n    }\n    return outputs;\n  };\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const RHELPackageBefore = getState().initialValues['selected-packages'] || [];\n  const RHELPackageAfter = getState().values['selected-packages'] || [];\n  const customPackageBefore = getState().initialValues['custom-packages'] || [];\n  const customPackageAfter = getState().values['custom-packages'] || [];\n\n  const calcPkgDiff = (arr1, arr2) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      getState().values?.includesCustomRepos && {\n        name: isUpdate ? 'Custom Updated' : 'Custom Added',\n        value: calcPkgDiff(customPackageAfter, customPackageBefore),\n      },\n      {\n        name: isUpdate ? 'RHEL Updated' : 'RHEL Added',\n        value: calcPkgDiff(RHELPackageAfter, RHELPackageBefore),\n      },\n    ];\n    return pkgs;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create image</Text> to start the build process.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output()}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect, useState } from 'react';\nimport GeneralTable from '../general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../Empty';\nimport { routes as paths } from '../../../package.json';\nimport { getCustomRepositories } from '../../api/index';\nimport useApi from '../../hooks/useApi';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst WizardRepositoryTable = ({ ...props }) => {\n  const [selectedRepos, setSelectedRepos] = useState([]);\n  const [response] = useApi({ api: getCustomRepositories });\n  const { data, isLoading, hasError } = response;\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const wizardState = getState()?.values?.[input.name];\n\n  useEffect(() => {\n    change(input.name, selectedRepos);\n  }, [selectedRepos]);\n\n  const getRepoIds = (checked) => {\n    const checkedRepos = checked?.map((repo) => ({\n      id: repo?.id,\n      name: repo?.name,\n      URL: repo?.URL,\n    }));\n    setSelectedRepos(checkedRepos);\n  };\n\n  const buildRows = ({ data }) => {\n    return data.map(({ ID, Name, URL }) => ({\n      rowInfo: { id: ID, name: Name, URL: URL },\n      noApiSortFilter: [Name],\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                {Name}\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {URL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    }));\n  };\n\n  return (\n    <>\n      {isLoading !== true && !data?.count > 0 ? (\n        <EmptyState\n          icon=\"repository\"\n          title=\"No custom repositories available\"\n          body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n          primaryAction={{\n            text: 'Custom repositories',\n            href: paths['repositories'],\n          }}\n        />\n      ) : (\n        <GeneralTable\n          apiFilterSort={false}\n          filters={filters}\n          tableData={{\n            count: data?.length,\n            data,\n            isLoading,\n            hasError,\n          }}\n          columnNames={[{ title: 'Name', type: 'name', sort: true }]}\n          rows={isLoading ? [] : buildRows(data)}\n          defaultSort={{ index: 1, direction: 'desc' }}\n          hasCheckbox={true}\n          selectedItems={getRepoIds}\n          initSelectedItems={wizardState}\n        />\n      )}\n    </>\n  );\n};\nWizardRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  openModal: PropTypes.func,\n};\n\nexport default WizardRepositoryTable;\n"],"names":["CustomButtons","buttonLabels","cancel","submit","back","useState","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","Button","variant","type","isDisabled","valid","getState","validating","onClick","onSubmit","values","className","onCancel","propTypes","PropTypes","name","title","buttons","fields","component","PackagesLabel","release","useFormApi","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","substepOf","componentTypes","label","initialValue","clearedValue","ReleaseLabel","change","DEFAULT_RELEASE","releases","release_options","getReleases","options","setOptions","isOpen","setIsOpen","selected","setSelected","Select","width","onToggle","onSelect","_event","selection","isPlaceholder","selections","style","paddingLeft","marginLeft","map","item","SelectOption","key","value","imageType","includes","includesCustomRepos","validate","validatorTypes","isRequired","Object","entries","imageTypeMapper","CharacterCount","description","length","placeholder","helperText","checkImageName","then","result","ImageExists","Error","message","nameValidator","threshold","paddingRight","height","Flex","justifyContent","default","FlexItem","resizeOrientation","HelperText","HelperTextItem","pattern","WizardRepositoryTable","CustomPackageLabel","addedRepos","Popover","visibility","position","headerContent","bodyContent","Stack","repo","StackItem","isInline","class","createIcon","svgPath","yOffset","xOffset","EmptyText","text","NoResultsText","heading","body","mapPackagesToOptions","pkgs","pkg","isVisible","Packages","defaultArch","props","input","useFieldApi","React","availableOptions","setAvailableOptions","chosenOptions","setChosenOptions","availableInputValue","setAvailableInputValue","enterPressed","setEnterPressed","hasMoreResults","setHasMoreResults","scrollTo","setScrollTo","hasNoSearchResults","setHasNoSearchResults","searchFocused","setSearchFocused","exactMatch","setExactMatch","useEffect","loadedPackages","sortedOptions","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","handlePackageSearch","scrollToAddedPackages","getPackages","architecture","data","meta","count","exactMatchIndex","forEach","index","isNotChosen","find","option","removeChosenPackages","filter","newPkg","chosenPkg","e","stopPropagation","destination","pane","getElementById","closest","classList","add","setTimeout","remove","scrollTop","scrollHeight","moveSelected","fromAvailable","sourceOptions","destinationOptions","selectedOptions","i","push","splice","findIndex","moveAll","x","buildSearchInput","isAvailable","InputGroup","TextInput","id","onChange","toLowerCase","onFocus","onBlur","validated","InputGroupText","displayPackagesFrom","isChosen","DualListSelectorListItem","isSelected","onOptionSelect","newChosen","newAvailable","summary","selectedStatus","totalItemNum","selectedItemNum","DualListSelector","DualListSelectorPane","status","searchInput","DualListSelectorList","Divider","inset","DualListSelectorControlsWrapper","DualListSelectorControl","some","tooltipContent","registrationCredsValidator","state","checkbox","errs","password","sshKey","toggleCheckbox","useCallback","checked","event","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextArea","WarningInstallerHelperText","hasIcon","outputHelperText","ImageOutputCheckbox","initialValues","isUpdate","Fragment","TextVariants","target","href","isVisitedLink","touched","reservedUsernames","reservedUsernameValidator","wizardState","join","setValue","customRepoArray","split","reduce","acc","onlyText","replace","newValue","CreateImageWizard","schema","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","CustomPackageTextArea","validatorMapper","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","outputs","details","version","registration","credentials","RHELPackageBefore","RHELPackageAfter","customPackageBefore","customPackageAfter","calcPkgDiff","arr1","arr2","Alert","filters","selectedRepos","setSelectedRepos","useApi","api","getCustomRepositories","response","icon","primaryAction","paths","apiFilterSort","tableData","columnNames","sort","rows","ID","Name","URL","rowInfo","noApiSortFilter","cells","rel","defaultSort","direction","hasCheckbox","selectedItems","checkedRepos","initSelectedItems","openModal"],"sourceRoot":""}