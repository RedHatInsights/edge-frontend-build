{"version":3,"file":"js/735.560e92575fe9fed35b27.js","mappings":"2SAMMA,EAAgB,SAAC,GAA+C,QAA7CC,aAAgBC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,KAAa,GACpCC,EAAAA,EAAAA,WAAS,GAD2B,WAC7DC,EAD6D,KACnDC,EADmD,QAEhCC,EAAAA,EAAAA,YAAWC,EAAAA,SAAvCC,EAF4D,EAE5DA,WAAYC,EAFgD,EAEhDA,YACpB,OACE,kBAAC,KAAD,MACG,kBACC,kBAAC,aAAD,KACE,kBAACC,EAAA,GAAD,CACEC,QAAQ,UACRC,KAAK,SACLC,YACGJ,EAAYK,OACbL,EAAYM,WAAWC,YACvBZ,EAEFa,QAAS,WACPR,EAAYS,SAAS,CACnBC,OAAQV,EAAYM,WAAWI,OAC/Bd,YAAAA,MAIHJ,GAEH,kBAACS,EAAA,GAAD,CACEE,KAAK,SACLD,QAAQ,YACRM,QAAST,EACTK,WAAYT,GAEXF,GAEH,yBAAKkB,UAAU,8BACb,kBAACV,EAAA,GAAD,CACEE,KAAK,SACLD,QAAQ,OACRM,QAASR,EAAYY,SACrBR,WAAYT,GAEXJ,SASfF,EAAcwB,UAAY,CACxBvB,aAAcwB,IAAAA,MAAgB,CAC5BvB,OAAQuB,IAAAA,KACRtB,OAAQsB,IAAAA,KACRrB,KAAMqB,IAAAA,OAERnB,SAAUmB,IAAAA,MAGZ,MC7DA,GACEC,KAAM,SACNC,MAAO,SACPC,QD0DF,ECzDEC,OAAQ,CACN,CACEH,KAAM,SACNI,UAAW,Y,2DCHXC,EAAgB,WAAM,QAEpBC,EAAO,WAAGf,GADKgB,EAAAA,EAAAA,WAAbhB,mBACK,iBAAG,EAAYI,cAAf,aAAG,EAAoBW,QAC9BE,OAA0BC,IAAZH,EAAwBI,EAAAA,GAAcJ,GAAW,GACrE,OACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,6BACuB,kBAACA,EAAA,EAAD,CAAMR,UAAU,KAAKI,GAD5C,aAON,SACEP,MAAO,sBACPD,KAAM,WACNa,SAAU,SACVV,OAAQ,CACN,CACEC,UAAWU,EAAAA,EAAAA,WACXd,KAAM,8BACNe,MAAO,kBAACV,EAAD,OAET,CACED,UAAW,mBACXJ,KAAM,oBACNe,MAAO,oBACPC,aAAc,GACdC,aAAc,M,eCxBpB,SACEhB,MAAO,UACPD,KAAM,cACNa,SAAU,kBAAGlB,EAAH,EAAGA,OAAH,OACRA,MAAAA,GAAA,UAAAA,EAAQuB,iBAAR,eAAmBC,SAAS,0BAA2BxB,EAAOuB,UAC1D,eACA,YACNf,OAAQ,CACN,CACEC,UAAWU,EAAAA,EAAAA,WACXd,KAAM,cACNe,MAAO,kBAACH,EAAA,EAAD,wDAET,CACER,UAAWU,EAAAA,EAAAA,OACXd,KAAM,UACNe,MAAO,UACPK,QAASC,OAAOC,QAAQZ,EAAAA,IAAea,KAAI,iCAA8B,CACvEC,MADyC,KAEzCT,MAFyC,SAI3CC,aAAcS,EAAAA,GACdC,SAAU,CAAC,CAAEtC,KAAMuC,EAAAA,EAAAA,WACnBC,YAAY,EACZvC,YAAY,GAEd,CACEe,UAAW,wBACXJ,KAAM,YACNoB,QAASC,OAAOC,QAAQO,EAAAA,IAAiBN,KACvC,iCAAkC,CAChCC,MADF,KAEET,MAFF,SAKFC,aAAc,CAAC,sBAAuB,oBACtCC,aAAc,GACdS,SAAU,CAAC,CAAEtC,KAAMuC,EAAAA,EAAAA,cC1CzB,IAAMG,EACJ,oEAEF,SACE7B,MAAO,UACPD,KAAM,kBACNa,SAAU,cACVV,OAAQ,CACN,CACEC,UAAWU,EAAAA,EAAAA,WACXd,KAAM,cACNe,MACE,kBAACH,EAAA,EAAD,2EAKJ,CACER,UAAWU,EAAAA,EAAAA,WACXd,KAAM,OACNe,MAAO,aACPgB,YAAa,aACbD,WAAYA,EACZJ,SAAU,CACR,CAAEtC,KAAMuC,EAAAA,EAAAA,UACR,CACEvC,KAAMuC,EAAAA,EAAAA,QACNK,QAAS,iCACTC,QAASH,GAEX,CAAE1C,KAAMuC,EAAAA,EAAAA,WAA2BO,UAAW,KAEhDN,YAAY,GAEd,CACExB,UAAWU,EAAAA,EAAAA,SACXd,KAAM,cACNe,MAAO,cACPgB,YAAa,kBAEbI,kBAAmB,WACnBT,SAAU,CAAC,CAAEtC,KAAMuC,EAAAA,EAAAA,WAA2BO,UAAW,SCzC/D,GACEjC,MAAO,UACPD,KAAM,kBACNa,SAAU,cACVV,OAAQ,CACN,CACEC,UAAWU,EAAAA,EAAAA,WACXd,KAAM,cACNe,MACE,kBAACH,EAAA,EAAD,kEAGJ,CACER,UAAWU,EAAAA,EAAAA,WACXd,KAAM,cACNe,MAAO,cACPgB,YAAa,kBACbL,SAAU,CAAC,CAAEtC,KAAMuC,EAAAA,EAAAA,WAA2BO,UAAW,S,0BCjB/D,SACEjC,MAAO,sBACPD,KAAM,eACNa,SAAU,WACVV,OAAQ,CACN,CACEC,UAAWU,EAAAA,EAAAA,WACXd,KAAM,cACNe,MAAO,kBAACH,EAAA,EAAD,2CAET,CACER,UAAWU,EAAAA,EAAAA,WACXC,MAAO,WACPgB,YAAa,iBACbD,WACE,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBzC,UAAU,aAAaT,QAAQ,iBAA/C,2EAMJa,KAAM,WACN0B,SAAU,CACR,CAAEtC,KAAMuC,EAAAA,EAAAA,UACR,CACEvC,KAAMuC,EAAAA,EAAAA,QACNK,QAAS,+BACTC,QACE,0EAEJ,CAAE7C,KAAMuC,EAAAA,EAAAA,WAA2BO,UAAW,IAC9C,CAAE9C,KAAM,8BAEVwC,YAAY,GAEd,CACExB,UAAW,kBACXJ,KAAM,cACN0B,SAAU,CACR,CAAEtC,KAAMuC,EAAAA,EAAAA,UACR,CACEvC,KAAMuC,EAAAA,EAAAA,QACNK,QAAS,+DAGbJ,YAAY,M,4TC5CZU,EAAyB,SAACC,GAAD,OAC7BA,EAAShB,KAAI,SAACiB,EAAMC,GAAP,OACX,kBAAC9B,EAAA,EAAD,CAAa8B,IAAG,UAAKD,EAAKxC,KAAV,YAAkByC,IAChC,0BAAM7C,UAAU,sCAAsC4C,EAAKxC,MAC3D,+BAAQwC,EAAKE,cAIbC,EAAwB,SAACvC,GAAD,MAAgB,CAC5CJ,KAAMI,EAAUwC,MAAMC,SAAS,GAAGD,MAAMC,SACxCH,QAAStC,EAAUwC,MAAMC,SAAS,GAAGD,MAAMC,WAGvCC,EAAW,SAAC,GAA8B,IAA5BC,EAA4B,EAA5BA,YAAgBH,EAAY,0BACjBrC,EAAAA,EAAAA,WAArByC,EADsC,EACtCA,OAAQzD,EAD8B,EAC9BA,SACR0D,GAAUC,EAAAA,EAAAA,GAAYN,GAAtBK,MACFE,GAAqBC,EAAAA,EAAAA,UAHmB,GAIIzE,EAAAA,EAAAA,UAAS,IAJb,WAIvC0E,EAJuC,KAIpBC,EAJoB,QAKE3E,EAAAA,EAAAA,UAAS,IALX,WAKvC4E,EALuC,KAKrBC,EALqB,QAMF7E,EAAAA,EAAAA,UAAS,IANP,WAMvC8E,EANuC,KAMvBC,EANuB,QAON/E,EAAAA,EAAAA,WAAS,GAPH,WAOvCgF,EAPuC,KAOzBC,EAPyB,MAS9CC,EAAAA,EAAAA,YAAU,WAAM,QACdL,EACElB,GAA+B,QAAR,EAAA/C,WAAA,mBAAYI,cAAZ,eAAqBsD,EAAMjD,QAAS,KAE7D,IAAM8D,EAAuBC,SAASC,cACpC,yCAGF,OADAF,MAAAA,GAAAA,EAAsBG,iBAAiB,UAAWC,GAC3C,kBACLJ,EAAqBK,oBAAoB,UAAWD,MACrD,KAEHL,EAAAA,EAAAA,YAAU,WACJF,IACFS,IACAR,GAAgB,MAEjB,CAACD,IAEJ,IAAMU,EAAoB,SAACC,EAAsBC,GAC/C,IAAMC,EAAaD,EAAkBhD,IAAIoB,GACzCW,EAAqBgB,GACrBd,EAAoBe,GACpBvB,EAAOC,EAAMjD,KAAMwE,IAGfJ,EAAoB,+BAAG,iHACJK,EAAAA,EAAAA,KACb,QAAR,EAAAlF,WAAA,mBAAYI,cAAZ,eAAoBW,UAAW,UACvB,QAAR,EAAAf,WAAA,mBAAYI,cAAZ,eAAoB+E,eAAgB3B,EACpCI,EAAmBwB,SAJM,gBACnBC,EADmB,EACnBA,KAKFC,EAAeD,EAAKE,QACxB,SAACtC,GAAD,OACGe,EAAiBwB,MAChB,SAACC,GAAD,OACEA,EAAUpC,MAAMC,SAAS,GAAGD,MAAMC,WAAaL,EAAKxC,WAG5DsD,EAAqBhB,EAAuBuC,GAAgB,KAbjC,2CAAH,qDAgBpBX,EAAsB,SAACe,GACb,UAAVA,EAAExC,MACJwC,EAAEC,kBACFtB,GAAgB,KAIpB,OACE,kBAACuB,EAAA,EAAD,CACEvF,UAAU,aACVwF,cAAY,EACZC,wBAAyB,CACvB,kBAACnG,EAAA,GAAD,CACE,aAAW,uCACXuD,IAAI,wBACJ,cAAY,qBACZhD,QAAS2E,GAJX,WASFkB,iBAAkBjC,EAClBkC,sBAAsB,qBACtBC,cAAejC,EAAiBuB,QAAO,SAACW,GAAD,yBACrC9C,EAAsB8C,UADe,iBACrC,EAA6BzF,YADQ,aACrC,EAAmCmB,SAASsC,MAE9CiC,mBAAmB,kBACnBC,YAAatB,EACbuB,eAAgBvB,EAChBwB,OAAQxB,EACRyB,UAAW,SAACxB,GAAD,OACTD,EACEC,EACAf,EAAiBuB,QACf,SAACW,GAAD,gBACE,UAAC9C,EAAsB8C,UAAvB,iBAAC,EAA6BzF,YAA9B,aAAC,EAAmCmB,SAASsC,SAIrDsC,qCAAsC,SAACC,GACrC7C,EAAmBwB,QAAUqB,GAE/BC,kCAAmC,SAACD,GAAD,OAAStC,EAAkBsC,IAC9DE,aAAc,kBAAM,GACpBC,GAAG,6BAKTrD,EAAShD,UAAY,CACnBiD,YAAahD,IAAAA,QAGf,U,moBCnHO,IAAMqG,EAA6B,kBAAM,SAAC5E,EAAO6E,GACtD,GAAqB,IAAjB7E,EAAM8E,OACR,MAAO,CAAEC,SAAU,yCAErB,IAAIC,EAAO,GAaX,OAXEhF,EAAML,SAAS,kBACQV,IAAtB4F,EAAK,UAAoD,KAAtBA,EAAK,WAEzCG,EAAO,EAAH,KAAQA,GAAR,IAAcC,SAAU,eAG5BjF,EAAML,SAAS,gBACMV,IAApB4F,EAAK,QAAgD,KAApBA,EAAK,SAEvCG,EAAO,EAAH,KAAQA,GAAR,IAAcE,OAAQ,cAErBF,IAiET,QA9D0B,SAAC5D,GAAU,OACXM,EAAAA,EAAAA,GAAYN,GAA5BK,EAD2B,EAC3BA,MAAO0D,EADoB,EACpBA,KACTC,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,EAASC,GACR9D,EAAM+D,SACJF,EAAO,cACC7D,EAAMzB,OADP,CACcuF,EAAME,cAAcd,KACrClD,EAAMzB,MAAMsD,QAAO,SAACW,GAAD,OAAUA,IAASsB,EAAME,cAAcd,SAGlE,CAAClD,EAAM+D,WAGME,GAAkBhE,EAAAA,EAAAA,GAAY,CAAElD,KAAM,aAA7CiD,MACOkE,GAAgBjE,EAAAA,EAAAA,GAAY,CAAElD,KAAM,WAA3CiD,MAER,OACE,kBAACmE,EAAA,EAAD,CACErG,MAAM,8CACNsG,yBAAuB,EACvBC,iBAAe,EACf1F,YAAU,EACV2F,SAAO,GAEP,kBAACC,EAAA,EAAD,CACEzG,MAAM,WACNoF,GAAG,WACHsB,UAAWxE,EAAMzB,MAAML,SAAS,YAChC6F,SAAUJ,IAEX3D,EAAMzB,MAAML,SAAS,YACpB,kBAACiG,EAAA,EAAD,CACEM,kBACEf,EAAKgB,YAAoClH,IAA3BkG,EAAKiB,MAAL,SACVjB,EAAKiB,MAAL,cACAnH,GAGN,kBAACoH,EAAA,GAAD,KAAWzI,KAAK,YAAe8H,KAE/B,KACJ,kBAACM,EAAA,EAAD,CACEzG,MAAM,MACNoF,GAAG,SACHsB,UAAWxE,EAAMzB,MAAML,SAAS,UAChC6F,SAAUJ,IAEX3D,EAAMzB,MAAML,SAAS,UACpB,kBAACiG,EAAA,EAAD,CACEM,kBACEf,EAAKgB,YAAkClH,IAAzBkG,EAAKiB,MAAL,OACVjB,EAAKiB,MAAL,YACAnH,GAGN,kBAACqH,EAAA,GAAaX,IAEd,O,gDCvEJY,EAA6B,kBACjC,kBAAC3F,EAAA,EAAD,CAAYxC,UAAU,aAAaoI,SAAO,GACxC,kBAAC3F,EAAA,EAAD,CAAgBzC,UAAU,aAAaT,QAAQ,UAAU6I,SAAO,GAAhE,2HAE+C,6BAF/C,gGASEC,EAAmB,CACvB,mBACE,6DACF,sBACE,oFAGEC,EAAsB,SAACtF,GAAU,IAC7BrD,GAAagB,EAAAA,EAAAA,WAAbhB,SACA0D,GAAUC,EAAAA,EAAAA,GAAYN,GAAtBK,MACF2D,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,EAASC,GACR9D,EAAM+D,SACJF,EAAO,cACC7D,EAAMzB,OADP,CACcuF,EAAME,cAAcd,KACrClD,EAAMzB,MAAMsD,QAAO,SAACW,GAAD,OAAUA,IAASsB,EAAME,cAAcd,SAGlE,CAAClD,EAAM+D,WAGT,OACE,kBAACI,EAAA,EAAD,CACErG,MAAM,cACNsG,yBAAuB,EACvBC,iBAAe,EACf1F,YAAU,EACV2F,SAAO,GAEN3E,EAAMxB,QAAQG,KAAI,WAAmB4G,GAAnB,QAAG3G,EAAH,EAAGA,MAAOT,EAAV,EAAUA,MAAV,OACjB,oCACE,kBAACyG,EAAA,EAAD,CACE/E,IAAK0F,EACLpH,MAAOA,EACPoF,GAAI3E,EACJiG,UAAWxE,EAAMzB,MAAML,SAASK,GAChCwF,SAAUJ,EACVvH,WAAsB,qBAAVmC,IAEd,kBAACb,EAAA,EAAD,MACW,QAAR,EAAApB,WAAA,mBAAY6I,qBAAZ,eAA2BC,WAClB,wBAAV7G,EACE,kBAACuG,EAAD,MAEA,kBAAC3F,EAAA,EAAD,CAAYxC,UAAU,yBACpB,kBAACyC,EAAA,EAAD,CAAgBlD,QAAQ,iBACrB8I,EAAiBzG,MAKf,wBAAVA,GACC,kBAAC,EAAA8G,SAAD,KACE,kBAAC1H,EAAA,EAAD,CAAMR,UAAWmI,EAAAA,EAAAA,OACf,kBAAC3H,EAAA,EAAD,CACE4H,OAAO,SACPC,KAAK,0OACLrI,UAAWmI,EAAAA,EAAAA,EACXG,eAAa,GAJf,gCAOE,kBAAC,KAAD,CAAqB9I,UAAU,wBAWjDsI,EAAoBpI,UAAY,CAC9BmD,MAAOlD,IAAAA,MACPqB,QAASrB,IAAAA,QACPA,IAAAA,MAAgB,CACdyB,MAAOzB,IAAAA,OACPgB,MAAOhB,IAAAA,WAKb,U,8NC7DA,QArCsB,SAAC6C,GAAU,OACMM,EAAAA,EAAAA,G,iWAAY,EAC/ClD,KAAM,eACH4C,IAFUuE,EADgB,EACvBlE,MAAoB0D,EADG,EACHA,KAI5B,OACE,kBAACS,EAAA,EAAD,KACE,kBAACA,EAAA,EAAD,CACErG,MAAM,UACN2G,kBAAmBf,EAAKiB,MACxBe,UAAWhC,EAAKiB,OAASjB,EAAKiC,QAAU,QAAU,UAClDhH,YAAU,GAEV,kBAACkG,EAAA,GAAD,KACElI,UAAU,cACVuG,GAAG,cACHpE,YAAY,6BACRoF,KAGR,kBAAC,EAAAmB,SAAD,KACE,kBAAC1H,EAAA,EAAD,CAAMR,UAAWmI,EAAAA,EAAAA,OACf,kBAAC3H,EAAA,EAAD,CACE4H,OAAO,SACPC,KAAK,uSACLC,eAAa,EACbtI,UAAWmI,EAAAA,EAAAA,GAJb,4BAOE,kBAAC,KAAD,CAAqB3I,UAAU,oBCrCXiJ,IAAAA,cAAoB,IAA7C,IAEMC,GAAoB,CAC/B,OACA,MACA,SACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,QACA,QACA,OACA,WACA,OACA,OACA,OACA,OACA,WACA,QACA,SACA,MACA,MACA,WACA,UACA,UACA,SACA,QACA,UACA,OACA,QACA,MACA,QACA,WACA,QACA,OACA,UACA,UACA,MACA,eACA,OACA,UACA,WACA,OACA,MACA,MACA,MACA,QACA,MACA,UACA,MACA,MACA,WACA,WACA,YACA,WACA,SACA,MACA,QACA,SACA,SACA,OACA,OACA,YACA,MACA,cACA,MACA,UACA,kBACA,SACA,QACA,SACA,QACA,OACA,UACA,YACA,YACA,OACA,QACA,WACA,UACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,WACA,UACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,SACA,UACA,WACA,YACA,SACA,OACA,YACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,QACA,OACA,WACA,YACA,cACA,UACA,UACA,UACA,QACA,SACA,OACA,WACA,UACA,SACA,aACA,OACA,gBACA,QACA,QACA,OACA,UACA,aACA,MACA,QACA,UACA,UACA,SACA,UACA,UACA,gBACA,UACA,UACA,gBACA,UACA,OACA,UACA,YACA,WACA,kBACA,kBACA,kBACA,QACA,SACA,SACA,ICtKWC,GAA4B,kBAAM,SAACvH,GAAD,OAC7CsH,GAAkB3H,SAASK,GACvB,kDACAf,I,ilBCgBC,IAUDuI,GAAoB,SAAC,GAOrB,IANJC,EAMI,EANJA,OACAvJ,EAKI,EALJA,SACAwJ,EAII,EAJJA,QACAC,EAGI,EAHJA,sBACAf,EAEI,EAFJA,cACArF,EACI,EADJA,YAEA,OAAOkG,EACL,kBAAC,IAAD,CACEA,OAAQA,EACRrJ,UAAU,gBACVwJ,aAAc,CAAEzJ,QAAQ,GACxB0J,aAAc,SAACzG,GAAD,OACZ,kBAAC,KAAD,OAAqBA,EAArB,CAA4B0G,kBAAkB,MAEhD5J,SAAU,SAA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","sources":["webpack:///./src/components/form/CustomSubmitButtons.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/form/constants.js","webpack:///./src/components/form/validators.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../../../components/form/CustomSubmitButtons';\n\nexport default {\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n  DEFAULT_RELEASE,\n} from '../../ImageManagerDetail/constants';\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information about your image.</Text>,\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'release',\n      label: 'Release',\n      options: Object.entries(releaseMapper).map(([release, releaseLabel]) => ({\n        value: release,\n        label: releaseLabel,\n      })),\n      initialValue: DEFAULT_RELEASE,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n      isDisabled: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nconst helperText =\n  'Can only contain letters, numbers,hyphens(-), and underscores(_).';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      helperText: helperText,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-\\s]*$/,\n          message: helperText,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Device registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to log into your device.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      helperText: (\n        <HelperText>\n          <HelperTextItem className=\"pf-u-mt-xs\" variant=\"indeterminate\">\n            Can only contain letters, numbers, hyphen ( - ), and underscores( _\n            ).\n          </HelperTextItem>\n        </HelperText>\n      ),\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n          message:\n            'Can only contain letters, numbers, hyphen ( - ), and underscores( _ ).',\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        { type: 'reservedUsernameValidator' },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) =>\n  packages.map((pack, key) => (\n    <TextContent key={`${pack.name}-${key}`}>\n      <span className=\"pf-c-dual-list-selector__item-text\">{pack.name}</span>\n      <small>{pack.summary}</small>\n    </TextContent>\n  ));\n\nconst mapComponentToPackage = (component) => ({\n  name: component.props.children[0].props.children,\n  summary: component.props.children[1].props.children,\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const packagesSearchName = useRef();\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesSelected, setPackagesSelected] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n\n  useEffect(() => {\n    setPackagesSelected(\n      mapPackagesToComponent(getState()?.values?.[input.name] || [])\n    );\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"Available search input\"]'\n    );\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackagesSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  const packageListChange = (newAvailablePackages, newChosenPackages) => {\n    const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n    setPackagesAvailable(newAvailablePackages);\n    setPackagesSelected(newChosenPackages);\n    change(input.name, chosenPkgs);\n  };\n\n  const handlePackagesSearch = async () => {\n    const { data } = await getPackages(\n      getState()?.values?.release || 'rhel-8',\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName.current\n    );\n    const removeChosen = data.filter(\n      (pack) =>\n        !packagesSelected.some(\n          (chosenPkg) =>\n            chosenPkg.props.children[0].props.children === pack.name\n        )\n    );\n    setPackagesAvailable(mapPackagesToComponent(removeChosen || []));\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  return (\n    <DualListSelector\n      className=\"pf-u-mt-sm\"\n      isSearchable\n      availableOptionsActions={[\n        <Button\n          aria-label=\"Search button for available packages\"\n          key=\"availableSearchButton\"\n          data-testid=\"search-pkgs-button\"\n          onClick={handlePackagesSearch}\n        >\n          Search\n        </Button>,\n      ]}\n      availableOptions={packagesAvailable}\n      availableOptionsTitle=\"Available packages\"\n      chosenOptions={packagesSelected.filter((item) =>\n        mapComponentToPackage(item)?.name?.includes(filterSelected)\n      )}\n      chosenOptionsTitle=\"Chosen packages\"\n      addSelected={packageListChange}\n      removeSelected={packageListChange}\n      addAll={packageListChange}\n      removeAll={(newAvailablePackages) =>\n        packageListChange(\n          newAvailablePackages,\n          packagesSelected.filter(\n            (item) =>\n              !mapComponentToPackage(item)?.name?.includes(filterSelected)\n          )\n        )\n      }\n      onAvailableOptionsSearchInputChanged={(val) => {\n        packagesSearchName.current = val;\n      }}\n      onChosenOptionsSearchInputChanged={(val) => setFilterSelected(val)}\n      filterOption={() => true}\n      id=\"basicSelectorWithSearch\"\n    />\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { Fragment, useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\" hasIcon>\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing devices. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <>\n          <Checkbox\n            key={index}\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </TextContent>\n          {value === 'rhel-edge-installer' && (\n            <Fragment>\n              <Text component={TextVariants.small}>\n                <Text\n                  target=\"_blank\"\n                  href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#edge-how-to-compose-and-deploy-a-rhel-for-edge-image_introducing-rhel-for-edge-images\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            </Fragment>\n          )}\n        </>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-secure-communications-between-two-systems-with-openssh_configuring-basic-system-settings#generating-ssh-key-pairs_using-secure-communications-between-two-systems-with-openssh\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","import React from 'react';\n\nexport const InventoryContext = React.createContext({});\n\nexport const reservedUsernames = [\n  'root',\n  'bin',\n  'daemon',\n  'sys',\n  'adm',\n  'tty',\n  'disk',\n  'lp',\n  'mem',\n  'kmem',\n  'wheel',\n  'cdrom',\n  'sync',\n  'shutdown',\n  'halt',\n  'mail',\n  'news',\n  'uucp',\n  'operator',\n  'games',\n  'gopher',\n  'ftp',\n  'man',\n  'oprofile',\n  'pkiuser',\n  'dialout',\n  'floppy',\n  'games',\n  'slocate',\n  'utmp',\n  'squid',\n  'pvm',\n  'named',\n  'postgres',\n  'mysql',\n  'nscd',\n  'rpcuser',\n  'console',\n  'rpc',\n  'amandabackup',\n  'tape',\n  'netdump',\n  'utempter',\n  'vdsm',\n  'kvm',\n  'rpm',\n  'ntp',\n  'video',\n  'dip',\n  'mailman',\n  'gdm',\n  'xfs',\n  'pppusers',\n  'popusers',\n  'slipusers',\n  'mailnull',\n  'apache',\n  'wnn',\n  'smmsp',\n  'puppet',\n  'tomcat',\n  'lock',\n  'ldap',\n  'frontpage',\n  'nut',\n  'beagleindex',\n  'tss',\n  'piranha',\n  'prelude-manager',\n  'snortd',\n  'audio',\n  'condor',\n  'nslcd',\n  'wine',\n  'pegasus',\n  'webalizer',\n  'haldaemon',\n  'vcsa',\n  'avahi',\n  'realtime',\n  'tcpdump',\n  'privoxy',\n  'sshd',\n  'radvd',\n  'cyrus',\n  'saslauth',\n  'arpwatch',\n  'fax',\n  'nocpulse',\n  'desktop',\n  'dbus',\n  'jonas',\n  'clamav',\n  'screen',\n  'quaggavt',\n  'sabayon',\n  'polkituser',\n  'wbpriv',\n  'postfix',\n  'postdrop',\n  'majordomo',\n  'quagga',\n  'exim',\n  'distcache',\n  'radiusd',\n  'hsqldb',\n  'dovecot',\n  'ident',\n  'users',\n  'qemu',\n  'ovirt',\n  'rhevm',\n  'jetty',\n  'saned',\n  'vhostmd',\n  'usbmuxd',\n  'bacula',\n  'cimsrvr',\n  'mock',\n  'ricci',\n  'luci',\n  'activemq',\n  'cassandra',\n  'stap-server',\n  'stapusr',\n  'stapsys',\n  'stapdev',\n  'swift',\n  'glance',\n  'nova',\n  'keystone',\n  'quantum',\n  'cinder',\n  'ceilometer',\n  'ceph',\n  'avahi-autoipd',\n  'pulse',\n  'rtkit',\n  'abrt',\n  'retrace',\n  'ovirtagent',\n  'ats',\n  'dhcpd',\n  'myproxy',\n  'sanlock',\n  'aeolus',\n  'wallaby',\n  'katello',\n  'elasticsearch',\n  'mongodb',\n  'wildfly',\n  'jbosson-agent',\n  'jbosson',\n  'heat',\n  'haproxy',\n  'hacluster',\n  'haclient',\n  'systemd-journal',\n  'systemd-network',\n  'systemd-resolve',\n  'gnats',\n  'listar',\n  'nobody',\n  '',\n];\n","import { reservedUsernames } from './constants';\n\nexport const reservedUsernameValidator = () => (value) =>\n  reservedUsernames.includes(value)\n    ? 'This is a username reserved for the system'\n    : undefined;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport { reservedUsernameValidator } from './form/validators';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n        reservedUsernameValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12} hasGutter>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <>\n          <GridItem span={3} hasGutter>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9} hasGutter>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n} from '../../Routes/ImageManagerDetail/constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: getState().initialValues.version + 1 },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = () => {\n    let outputs = [\n      { name: 'Release', value: releaseMapper[getState().values.release] },\n      {\n        name: 'Output Type',\n        value: imageTypeMapper['rhel-edge-commit'],\n      },\n    ];\n    if (getState().values.imageType.includes('rhel-edge-installer')) {\n      outputs.push({ name: '', value: imageTypeMapper['rhel-edge-installer'] });\n    }\n    return outputs;\n  };\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const before = getState().initialValues['selected-packages'];\n  const after = getState().values['selected-packages'];\n  const calcPkgDiff = (arr1, arr2) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      {\n        name: 'Added',\n        value: calcPkgDiff(after, before),\n      },\n    ];\n    return isUpdate\n      ? [\n          ...pkgs,\n          { name: 'Removed', value: calcPkgDiff(before, after) },\n          { name: 'Updated', value: 0 },\n        ]\n      : pkgs;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create image</Text> to start the build process.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output()}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n"],"names":["CustomButtons","buttonLabels","cancel","submit","back","useState","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","Button","variant","type","isDisabled","valid","getState","validating","onClick","onSubmit","values","className","onCancel","propTypes","PropTypes","name","title","buttons","fields","component","PackagesLabel","release","useFormApi","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","componentTypes","label","initialValue","clearedValue","imageType","includes","options","Object","entries","map","value","DEFAULT_RELEASE","validate","validatorTypes","isRequired","imageTypeMapper","helperText","placeholder","pattern","message","threshold","resizeOrientation","HelperText","HelperTextItem","mapPackagesToComponent","packages","pack","key","summary","mapComponentToPackage","props","children","Packages","defaultArch","change","input","useFieldApi","packagesSearchName","useRef","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","enterPressed","setEnterPressed","useEffect","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","handlePackagesSearch","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","getPackages","architecture","current","data","removeChosen","filter","some","chosenPkg","e","stopPropagation","DualListSelector","isSearchable","availableOptionsActions","availableOptions","availableOptionsTitle","chosenOptions","item","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","id","registrationCredsValidator","state","length","checkbox","errs","password","sshKey","meta","toggleCheckbox","useCallback","checked","event","onChange","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextInput","TextArea","WarningInstallerHelperText","hasIcon","outputHelperText","ImageOutputCheckbox","index","initialValues","isUpdate","Fragment","TextVariants","target","href","isVisitedLink","validated","touched","React","reservedUsernames","reservedUsernameValidator","CreateImageWizard","schema","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","validatorMapper","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","pkgs","outputs","details","version","description","registration","credentials","before","after","calcPkgDiff","arr1","arr2","reduce","acc","pkg","Alert","push"],"sourceRoot":""}