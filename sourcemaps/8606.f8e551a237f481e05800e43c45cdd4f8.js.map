{"version":3,"file":"js/8606.f5d0614f3df8c26f0fd2.js","mappings":"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","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/Routes.js","webpack:///./src/components/AuthModal.js","webpack:///./src/constants/routeMapper.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js"],"sourcesContent":["import React, { useEffect, Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RegistryContext } from './store';\nimport { Routes } from './Routes';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { NotificationPortal } from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport AuthModal from './components/AuthModal';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst App = (props) => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isLogged, setIsLogged] = useState(false);\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(null);\n  useEffect(() => {\n    insights.chrome.identifyApp('fleet-management');\n\n    insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    const registered = getRegistry().register({\n      notifications: notificationsReducer,\n    });\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setIsLogged(true);\n    })();\n\n    (async () => {\n      const data = await insights.chrome.auth.getUser();\n      setIsAuth(data.entitlements.smart_management.is_entitled);\n    })();\n\n    return () => {\n      registered();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {isAuth && isLogged ? (\n        <Routes childProps={props} />\n      ) : isAuth === null ? (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      ) : (\n        <AuthModal />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst AppEntry = ({ hasLogger }) => {\n  // Initialize reducer registry only at initial render.\n  const registry = useMemo(() => (hasLogger ? init(logger) : init()), []);\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(window.location.pathname, 1)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nAppEntry.propTypes = {\n  hasLogger: PropTypes.bool,\n};\n\nexport default AppEntry;\n","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport React, { Suspense } from 'react';\nimport { routes as paths } from './constants/routeMapper';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst DeviceDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"DeviceDetail\" */ './Routes/DeviceDetail/DeviceDetail'\n  )\n);\n\n// const Canaries = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"Canaries\" */ './Routes/Canaries/Canaries'\n//   )\n// );\n\nconst Groups = React.lazy(() =>\n  import(/* webpackChunkName: \"Groups\" */ './Routes/Groups/Groups')\n);\n\nconst GroupsDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetail\" */ './Routes/GroupsDetail/GroupsDetail'\n  )\n);\n\nconst Inventory = React.lazy(() =>\n  import(/* webpackChunkName: \"Inventory\" */ './Routes/Devices/Inventory')\n);\n\nconst UpdateSystem = React.lazy(() =>\n  import(/* webpackChunkName: \"UpdateSystem\" */ './Routes/Devices/UpdateSystem')\n);\n\nconst Images = React.lazy(() =>\n  import(/* webpackChunkName: \"Images\" */ './Routes/ImageManager/Images')\n);\n\nconst ImageDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"ImageDetail\" */ './Routes/ImageManagerDetail/ImageDetail'\n  )\n);\n\nconst Repositories = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"Repositories\" */ './Routes/Repositories/Repositories'\n  )\n);\n\nconst LearningResources = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"LearningResources\" */ './Routes/LearningResources/LearningResources'\n  )\n);\n\nexport const Routes = () => {\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <Switch>\n        <Route exact path={paths.groups} component={Groups} />\n        <Route exact path={paths.groupsDetail} component={GroupsDetail} />\n\n        {/* <Route path={paths.deviceDetail} component={DeviceDetail} /> */}\n        {/* <Route path={paths.canaries} component={Canaries} /> */}\n        <Route exact path={paths.fleetManagement} component={Groups} />\n        <Route\n          exact\n          path={paths.fleetManagementDetail}\n          component={GroupsDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetail}\n          component={DeviceDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route exact path={paths.inventory} component={Inventory} />\n        <Route\n          exact\n          path={paths.inventoryDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route path={paths.inventoryDetail} component={DeviceDetail} />\n        <Route path={paths.manageImagesDetailVersion} component={ImageDetail} />\n        <Route path={paths.manageImagesDetail} component={ImageDetail} />\n        <Route path={paths.manageImages} component={Images} />\n\n        <Route exact path={paths.repositories} component={Repositories} />\n\n        <Route\n          exact\n          path={paths.learningResources}\n          component={LearningResources}\n        />\n        <Route>\n          <Redirect to={paths.fleetManagement} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalBoxFooter, Button } from '@patternfly/react-core';\nimport edgeIcon from '../../static/images/Icon-Red_Hat-Edge-A-Red-RGB.png';\n\nconst AuthModal = () => {\n  return (\n    <Modal\n      style={{ padding: '15px' }}\n      isOpen={true}\n      variant=\"small\"\n      onClose={() => (window.location.href = 'https://console.redhat.com/')}\n      aria-label=\"auth-modal\"\n      header={\n        <h2 className=\"pf-u-pr-xl pf-u-pl-xl pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-bold\">\n          Edge management requires a valid Smart Management subscription\n        </h2>\n      }\n      footer={\n        <ModalBoxFooter\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            flexDirection: 'column',\n            paddingTop: 0,\n          }}\n        >\n          <Button\n            key=\"get-started\"\n            component=\"a\"\n            className=\"pf-u-mb-md\"\n            variant=\"primary\"\n            target=\"_blank\"\n            href=\"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux/try-it\"\n          >\n            Get started\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"interactive-demo\"\n            className=\"pf-u-mb-md\"\n            variant=\"secondary\"\n            target=\"_blank\"\n            href=\"https://red.ht/edgemanagementlab\"\n          >\n            Try the interactive demo\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"not-now\"\n            variant=\"link\"\n            href=\"https://console.redhat.com/\"\n          >\n            Not now\n          </Button>\n        </ModalBoxFooter>\n      }\n      title=\"Edge management requires a valid subscription\"\n      width=\"640px\"\n    >\n      <img\n        style={{ margin: '0 auto', display: 'block' }}\n        src={edgeIcon}\n        width=\"200px\"\n        alt=\"edge icon\"\n      />\n      <p className=\"pf-u-pr-xl pf-u-pl-xl pf-u-text-align-center\">\n        Securely manage and scale deployments at the edge with zero-touch\n        provisioning, system health visibility, and quick security remediations\n        and more with a Red Hat Smart Management subscription\n      </p>\n    </Modal>\n  );\n};\n\nexport default AuthModal;\n","export const routes = {\n  groups: '/groups',\n  groupsDetail: '/groups/:uuid',\n  deviceDetail: '/groups/:uuid/:inventoryId',\n  canaries: '/canaries',\n  fleetManagement: '/fleet-management',\n  fleetManagementDetail: '/fleet-management/:groupId',\n  fleetManagementSystemDetail: '/fleet-management/:groupId/systems/:deviceId',\n  fleetManagementSystemDetailUpdate:\n    '/fleet-management/:groupId/systems/:deviceId/update',\n  inventory: '/inventory',\n  inventoryDetail: '/inventory/:deviceId',\n  inventoryDetailUpdate: '/inventory/:deviceId/update',\n  manageImages: '/manage-images',\n  manageImagesDetail: '/manage-images/:imageId',\n  manageImagesDetailVersion: '/manage-images/:imageId/versions/:imageVersionId',\n  repositories: '/repositories',\n  learningResources: '/learning-resources',\n};\n","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n"],"names":["props","getRegistry","useContext","RegistryContext","useState","isLogged","setIsLogged","history","useHistory","isAuth","setIsAuth","useEffect","insights","chrome","identifyApp","on","event","push","navId","registered","register","notifications","notificationsReducer","auth","getUser","data","entitlements","smart_management","is_entitled","Fragment","childProps","size","AppEntry","hasLogger","registry","useMemo","init","logger","value","store","getStore","basename","getBaseName","window","location","pathname","propTypes","PropTypes","DeviceDetail","React","Groups","GroupsDetail","Inventory","UpdateSystem","Images","ImageDetail","Repositories","LearningResources","Routes","Suspense","fallback","Switch","Route","exact","path","paths","component","Redirect","to","style","padding","isOpen","variant","onClose","href","header","className","footer","display","justifyContent","width","flexDirection","paddingTop","key","target","title","margin","src","edgeIcon","alt","routes","groups","groupsDetail","deviceDetail","canaries","fleetManagement","fleetManagementDetail","fleetManagementSystemDetail","fleetManagementSystemDetailUpdate","inventory","inventoryDetail","inventoryDetailUpdate","manageImages","manageImagesDetail","manageImagesDetailVersion","repositories","learningResources","hasPollingData","polling","id","fetcher","condition","ofPollingType","type","endsWith","pollHash","dispatch","next","action","payload","meta","onEvent","setTimeout","then","resp","toContinue","stateName","forEach","createContext","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}