{"version":3,"file":"js/3152.1664483841115.0e20f810109d2c61aa42.js","mappings":"oSASMA,EAAW,SAAC,GAAkB,IAAhBC,EAAgB,EAAhBA,UAEZC,GAAWC,EAAAA,EAAAA,UAAQ,kBAAOF,GAAYG,EAAAA,EAAAA,GAAKC,MAAUD,EAAAA,EAAAA,IAAlC,GAA2C,IACpE,OACE,kBAAC,aAAD,CACEE,MAAO,CACLC,YAAa,kBAAML,CAAN,IAGf,kBAAC,KAAD,CAAUM,MAAON,EAASO,YACxB,kBAAC,gBAAD,CAAQC,UAAUC,EAAAA,EAAAA,IAAYC,OAAOC,SAASC,SAAU,IACtD,kBAAC,IAAD,QAKT,EAEDd,EAASe,UAAY,CACnBd,UAAWe,IAAAA,MAGb,S","sources":["webpack:///./src/AppEntry.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst AppEntry = ({ hasLogger }) => {\n  // Initialize reducer registry only at initial render.\n  const registry = useMemo(() => (hasLogger ? init(logger) : init()), []);\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(window.location.pathname, 1)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nAppEntry.propTypes = {\n  hasLogger: PropTypes.bool,\n};\n\nexport default AppEntry;\n"],"names":["AppEntry","hasLogger","registry","useMemo","init","logger","value","getRegistry","store","getStore","basename","getBaseName","window","location","pathname","propTypes","PropTypes"],"sourceRoot":""}