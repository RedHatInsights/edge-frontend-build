{"version":3,"file":"js/47.1666182884121.d592dfc80945d1167881.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/Repositories/modals/AddModal.js","webpack:///./src/Routes/Repositories/modals/EditModal.js","webpack:///./src/Routes/Repositories/modals/RemoveModal.js","webpack:///./src/Routes/Repositories/RepositoryTable.js","webpack:///./src/Routes/Repositories/RepositoryHeader.js","webpack:///./src/Routes/Repositories/Repositories.js","webpack:///./src/api/repositories/index.js","webpack:///./src/components/Modal.js","webpack:///./src/utils/apiWithToast.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport {\n  createCustomRepository,\n  validateRepoName,\n} from '../../../api/repositories';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { nameValidator } from '../../../utils';\nimport apiWithToast from '../../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncRepoNameValidation = async (value) => {\n  const resp = await validateRepoName(value);\n  if (resp.data.isValid) {\n    return 'Repository name already exists';\n  }\n};\n\nconst AddModal = ({ isOpen, closeModal, reloadData }) => {\n  const dispatch = useDispatch();\n\n  const handleAddRepository = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${values.name} has been created successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to create a repo' },\n    };\n    apiWithToast(\n      dispatch,\n      () => createCustomRepository(values),\n      statusMessages\n    );\n  };\n\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label:\n          'Link to a custom repository to add packages to RHEL for Edge images.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          nameValidator,\n          asyncRepoNameValidation,\n        ],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: 'Enter the baseURL for the custom repository.',\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Add repository\"\n      isOpen={isOpen}\n      closeModal={() => closeModal({ type: 'add' })}\n      submitLabel=\"Add\"\n      schema={addSchema}\n      onSubmit={handleAddRepository}\n      reloadData={reloadData}\n    />\n  );\n};\n\nAddModal.propTypes = {\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default AddModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { HelperText, HelperTextItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { editCustomRepository } from '../../../api/repositories';\nimport apiWithToast from '../../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst EditModal = ({ closeModal, isOpen, id, name, baseURL, reloadData }) => {\n  const dispatch = useDispatch();\n\n  const handleEditRepository = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${values.name} has been edited successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to edit a repository' },\n    };\n    apiWithToast(dispatch, () => editCustomRepository(values), statusMessages);\n  };\n  const editSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label: 'Update information about this custom repository.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: (\n          <HelperText>\n            <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n              If you change the repo URL, you may not have access to the\n              packages that were used to build images that reference this\n              repository.\n            </HelperTextItem>\n          </HelperText>\n        ),\n\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Edit repository\"\n      isOpen={isOpen}\n      closeModal={() => closeModal({ type: 'edit' })}\n      submitLabel=\"Update\"\n      schema={editSchema}\n      initialValues={{ id, name, baseURL }}\n      onSubmit={handleEditRepository}\n      reloadData={reloadData}\n    />\n  );\n};\n\nEditModal.propTypes = {\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default EditModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport PropTypes from 'prop-types';\nimport { removeCustomRepository } from '../../../api/repositories';\nimport apiWithToast from '../../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst LabelWithText = ({ label, text }) => {\n  return (\n    <TextContent>\n      <Text component={'b'}>{label}</Text>\n      <Text>{text}</Text>\n    </TextContent>\n  );\n};\n\nLabelWithText.propTypes = {\n  label: PropTypes.string,\n  text: PropTypes.string,\n};\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst RemoveModal = ({ closeModal, id, isOpen, name, baseURL, reloadData }) => {\n  const dispatch = useDispatch();\n\n  const handleRemoveRepository = ({ id }) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to remove a repository' },\n    };\n    apiWithToast(dispatch, () => removeCustomRepository(id), statusMessages);\n  };\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'description',\n        label:\n          'Removing a repository could affect your ability to update images.',\n      },\n      {\n        component: 'plain-text',\n        name: 'name',\n        label: <LabelWithText label=\"Name\" text={name} />,\n      },\n      {\n        component: 'plain-text',\n        name: 'baseURL',\n        label: <LabelWithText label=\"BaseURL\" text={baseURL} />,\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Remove repository\"\n      titleIconVariant={WarningIcon}\n      isOpen={isOpen}\n      closeModal={() => closeModal({ type: 'remove' })}\n      submitLabel=\"Remove\"\n      schema={addSchema}\n      initialValues={{ id }}\n      variant=\"danger\"\n      onSubmit={handleRemoveRepository}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRemoveModal.propTypes = {\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default RemoveModal;\n","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { truncateString } from '../../utils';\n\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst RepositoryTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  fetchRepos,\n  closeModal,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n}) => {\n  const actionResolver = (rowData) => {\n    if (!rowData.rowInfo) {\n      return [];\n    }\n    const { id, repoName, repoBaseURL } = rowData.rowInfo;\n    return [\n      {\n        title: 'Edit',\n        onClick: () =>\n          closeModal({\n            type: 'edit',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n      {\n        title: 'Remove',\n        onClick: () =>\n          closeModal({\n            type: 'remove',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n    ];\n  };\n\n  const buildRows = data.map(({ ID, Name, URL }) => {\n    return {\n      rowInfo: {\n        id: ID,\n        repoName: Name,\n        repoBaseURL: URL,\n      },\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                <Tooltip content={<div>{Name}</div>}>\n                  <span>{truncateString(Name, 20)}</span>\n                </Tooltip>\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {URL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchRepos}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={[{ title: 'Name', type: 'name', sort: true }]}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        toolbarButtons={[\n          {\n            title: 'Add repository',\n            click: () => closeModal({ type: 'add' }),\n          },\n        ]}\n        hasModalSubmitted={hasModalSubmitted}\n        setHasModalSubmitted={setHasModalSubmitted}\n      />\n    </>\n  );\n};\nRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  fetchRepos: PropTypes.func,\n  closeModal: PropTypes.func,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n};\n\nexport default RepositoryTable;\n","import React from 'react';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nconst RepositoryHeader = () => {\n  return (\n    <PageHeader>\n      <>\n        <PageHeaderTitle title=\"Custom repositories\" />\n        <p className=\"pf-u-mt-sm\">\n          Add custom repositories to build RHEL for Edge images with additional\n          packages.\n        </p>\n      </>\n    </PageHeader>\n  );\n};\n\nexport default RepositoryHeader;\n","import React, { useState } from 'react';\nimport AddModal from './modals/AddModal';\nimport EditModal from './modals/EditModal';\nimport RemoveModal from './modals/RemoveModal';\nimport RepositoryTable from './RepositoryTable';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport RepositoryHeader from './RepositoryHeader';\nimport useApi from '../../hooks/useApi';\nimport { getCustomRepositories } from '../../api/repositories';\nimport { useHistory } from 'react-router-dom';\nimport { emptyStateNoFliters } from '../../utils';\nimport EmptyState from '../../components/Empty';\n\nconst Repository = () => {\n  const history = useHistory();\n  const [response, fetchRepos] = useApi({\n    api: ({ query }) =>\n      getCustomRepositories({\n        imageID: '',\n        query,\n      }),\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n  const [modalDetails, setModalDetails] = useState({\n    isOpen: {\n      add: false,\n      edit: false,\n      remove: false,\n    },\n    id: null,\n    name: '',\n    baseURL: '',\n  });\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const closeModal = ({ type, id = null, name = '', baseURL = '' }) => {\n    setModalDetails((prevState) => ({\n      ...prevState,\n      id,\n      name,\n      baseURL,\n      isOpen: {\n        ...prevState.isOpen,\n        [type]: !prevState.isOpen[type],\n      },\n    }));\n  };\n\n  const reloadData = async () => {\n    await fetchRepos();\n    setHasModalSubmitted(true);\n  };\n\n  return (\n    <>\n      <RepositoryHeader />\n      <Main>\n        <>\n          {!emptyStateNoFliters(isLoading, data?.count, history) ? (\n            <RepositoryTable\n              data={data?.data || []}\n              count={data?.count}\n              closeModal={closeModal}\n              isLoading={isLoading}\n              hasError={hasError}\n              fetchRepos={fetchRepos}\n              hasModalSubmitted={hasModalSubmitted}\n              setHasModalSubmitted={setHasModalSubmitted}\n            />\n          ) : (\n            <EmptyState\n              icon=\"repository\"\n              title=\"Add a custom repository\"\n              body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n              primaryAction={{\n                text: 'Add repository',\n                click: () => closeModal({ type: 'add' }),\n              }}\n            />\n          )}\n        </>\n        <AddModal\n          isOpen={modalDetails.isOpen.add}\n          closeModal={closeModal}\n          reloadData={reloadData}\n        />\n        <EditModal\n          isOpen={modalDetails.isOpen.edit}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          closeModal={closeModal}\n          reloadData={reloadData}\n        />\n        <RemoveModal\n          isOpen={modalDetails.isOpen.remove}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          closeModal={closeModal}\n          reloadData={reloadData}\n        />\n      </Main>\n    </>\n  );\n};\n\nexport default Repository;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getCustomRepositories = ({ imageID = '', query }) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/thirdpartyrepo?${imageID ? `imageID=${imageID}&` : ''}${q}`\n  );\n};\n\nexport const createCustomRepository = (payload) => {\n  return instance.post(`${EDGE_API}/thirdpartyrepo`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const editCustomRepository = (payload) => {\n  return instance.put(`${EDGE_API}/thirdpartyrepo/${payload.id}`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const removeCustomRepository = (id) =>\n  instance.delete(`${EDGE_API}/thirdpartyrepo/${id}`);\n\nexport const validateRepoName = (name) => {\n  return instance.get(`${EDGE_API}/thirdpartyrepo/checkName/${name}`);\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n};\n\nexport default RepoModal;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages) => {\n  const hasSuccess = statusMessages?.onSuccess;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n      return response;\n    } catch (err) {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${statusMessages.onError.description}: ${err.Title}`\n            : statusMessages.onError.description,\n        }),\n      });\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","asyncRepoNameValidation","value","validateRepoName","data","isValid","AddModal","isOpen","closeModal","reloadData","dispatch","useDispatch","addSchema","fields","component","label","placeholder","helperText","isRequired","validate","type","validatorTypes","nameValidator","message","Modal","submitLabel","schema","onSubmit","values","statusMessages","onSuccess","description","onError","apiWithToast","createCustomRepository","PropTypes","EditModal","id","baseURL","editSchema","HelperText","HelperTextItem","variant","hasIcon","initialValues","editCustomRepository","setData","LabelWithText","text","TextContent","Text","WarningIcon","color","warningColor","RemoveModal","titleIconVariant","removeCustomRepository","filters","RepositoryTable","count","isLoading","hasError","fetchRepos","hasModalSubmitted","setHasModalSubmitted","buildRows","map","ID","Name","URL","rowInfo","repoName","repoBaseURL","cells","TextVariants","Tooltip","content","truncateString","href","target","rel","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","sort","rows","actionResolver","rowData","onClick","areActionsDisabled","defaultSort","index","direction","toolbarButtons","click","PageHeader","history","useHistory","useApi","api","query","getCustomRepositories","imageID","tableReload","response","useState","add","edit","remove","modalDetails","setModalDetails","prevState","Main","emptyStateNoFliters","Empty","icon","body","primaryAction","q","getTableParams","instance","EDGE_API","payload","RepoModal","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","hasSuccess","fetchData","addNotification","Title"],"sourceRoot":""}