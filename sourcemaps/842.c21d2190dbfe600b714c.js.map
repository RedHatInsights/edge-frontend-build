{"version":3,"sources":["webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js"],"names":["name","title","fields","component","PackagesLabel","release","getState","useFormApi","values","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","componentTypes","label","initialValue","clearedValue","imageType","includes","options","Object","entries","map","value","DEFAULT_RELEASE","validate","type","validatorTypes","isRequired","isDisabled","imageTypeMapper","placeholder","pattern","threshold","resizeOrientation","mapPackagesToComponent","packages","pack","key","className","summary","mapComponentToPackage","props","children","Packages","defaultArch","change","input","useFieldApi","packagesSearchName","useRef","useState","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","useEffect","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","handlePackagesSearch","getPackages","architecture","current","data","e","stopPropagation","DualListSelector","isSearchable","availableOptionsActions","Button","aria-label","data-testid","onClick","availableOptions","availableOptionsTitle","chosenOptions","filter","item","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","id","propTypes","PropTypes","registrationCredsValidator","state","length","checkbox","errs","password","sshKey","meta","toggleCheckbox","useCallback","checked","event","onChange","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextInput","TextArea","WarningInstallerHelperText","HelperText","hasIcon","HelperTextItem","variant","outputHelperText","ImageOutputCheckbox","index","initialValues","isUpdate","TextVariants","isVisitedLink","validated","touched","Fragment","target","href","CreateImageWizard","schema","onSubmit","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","validatorMapper","onCancel","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","useContext","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","pkgs","details","version","description","output","join","registration","credentials","before","after","calcPkgDiff","arr1","arr2","reduce","acc","some","pkg","Alert"],"mappings":"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","file":"js/842.16965ff021778dc9b4b5.js","sourcesContent":["export default {\n  name: 'review',\n  title: 'Review',\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n  DEFAULT_RELEASE,\n} from '../../ImageManagerDetail/constants';\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information for your image.</Text>,\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'release',\n      label: 'Release',\n      options: Object.entries(releaseMapper).map(([release, releaseLabel]) => ({\n        value: release,\n        label: releaseLabel,\n      })),\n      initialValue: DEFAULT_RELEASE,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n      isDisabled: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-\\s]*$/,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Add a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Device registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to connect your device to Fleet Management.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) =>\n  packages.map((pack, key) => (\n    <TextContent key={`${pack.name}-${key}`}>\n      <span className=\"pf-c-dual-list-selector__item-text\">{pack.name}</span>\n      <small>{pack.summary}</small>\n    </TextContent>\n  ));\n\nconst mapComponentToPackage = (component) => ({\n  name: component.props.children[0].props.children,\n  summary: component.props.children[1].props.children,\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const packagesSearchName = useRef();\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesSelected, setPackagesSelected] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n\n  useEffect(() => {\n    setPackagesSelected(\n      mapPackagesToComponent(getState()?.values?.[input.name] || [])\n    );\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"Available search input\"]'\n    );\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  const packageListChange = (newAvailablePackages, newChosenPackages) => {\n    const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n    setPackagesAvailable(newAvailablePackages);\n    setPackagesSelected(newChosenPackages);\n    change(input.name, chosenPkgs);\n  };\n\n  const handlePackagesSearch = async () => {\n    const { data } = await getPackages(\n      getState()?.values?.release || 'rhel-8',\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName.current\n    );\n    setPackagesAvailable(mapPackagesToComponent(data || []));\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      handlePackagesSearch();\n    }\n  };\n\n  return (\n    <DualListSelector\n      className=\"pf-u-mt-sm\"\n      isSearchable\n      availableOptionsActions={[\n        <Button\n          aria-label=\"Search button for available packages\"\n          key=\"availableSearchButton\"\n          data-testid=\"search-pkgs-button\"\n          onClick={handlePackagesSearch}\n        >\n          Search\n        </Button>,\n      ]}\n      availableOptions={packagesAvailable}\n      availableOptionsTitle=\"Available packages\"\n      chosenOptions={packagesSelected.filter((item) =>\n        mapComponentToPackage(item)?.name?.includes(filterSelected)\n      )}\n      chosenOptionsTitle=\"Chosen packages\"\n      addSelected={packageListChange}\n      removeSelected={packageListChange}\n      addAll={packageListChange}\n      removeAll={(newAvailablePackages) =>\n        packageListChange(\n          newAvailablePackages,\n          packagesSelected.filter(\n            (item) =>\n              !mapComponentToPackage(item)?.name?.includes(filterSelected)\n          )\n        )\n      }\n      onAvailableOptionsSearchInputChanged={(val) => {\n        packagesSearchName.current = val;\n      }}\n      onChosenOptionsSearchInputChanged={(val) => setFilterSelected(val)}\n      filterOption={() => true}\n      id=\"basicSelectorWithSearch\"\n    />\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\" hasIcon>\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing devices. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <>\n          <Checkbox\n            key={index}\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n            {value === 'rhel-edge-installer' && (\n              <Text component={TextVariants.small}>\n                <Text\n                  className=\"pf-u-ml-lg\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            )}\n          </TextContent>\n        </>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/solutions/3356121\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12} hasGutter>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <>\n          <GridItem span={3} hasGutter>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9} hasGutter>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n} from '../../Routes/ImageManagerDetail/constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: getState().initialValues.version + 1 },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = [\n    { name: 'Release', value: releaseMapper[getState().values.release] },\n    {\n      name: 'Type',\n      value: getState()\n        .values.imageType.map((type) => `${imageTypeMapper[type]}`)\n        .join(', '),\n    },\n  ];\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const before = getState().initialValues['selected-packages'];\n  const after = getState().values['selected-packages'];\n  const calcPkgDiff = (arr1, arr2) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      {\n        name: isUpdate ? 'Added' : 'Added packages',\n        value: calcPkgDiff(after, before),\n      },\n    ];\n    return isUpdate\n      ? [\n          ...pkgs,\n          { name: 'Removed', value: calcPkgDiff(before, after) },\n          { name: 'Updated', value: 0 },\n        ]\n      : pkgs;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create {isUpdate ? 'update' : 'image'}</Text> to{' '}\n          {isUpdate ? 'update' : 'create'} your image.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n"],"sourceRoot":""}