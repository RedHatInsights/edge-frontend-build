{"version":3,"file":"js/7637.50a86909dd98ad593769.js","mappings":"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","sources":["webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/api/groups/index.js","webpack:///./src/components/Modal.js","webpack:///./src/hooks/useApi.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","import { EDGE_API, INVENTORY_API_BASE, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const createGroup = (payload) => {\n  return instance.post(`${EDGE_API}/device-groups/`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const createInventoryGroup = (payload) => {\n  return instance.post(`${INVENTORY_API_BASE}/groups`, { name: payload.name });\n};\n\nexport const getGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups?${q}`);\n};\n\nexport const getInventoryGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${INVENTORY_API_BASE}/groups?${q}`);\n};\n\nexport const getGroupById = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups/${id}/view?${q}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n  return instance.put(`${EDGE_API}/device-groups/${id}`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const deleteGroupById = (id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${id}`);\n};\n\nexport const addDevicesToGroup = (groupId, devices) => {\n  return instance.post(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    ID: groupId,\n    Devices: devices,\n  });\n};\n\nexport const addDevicesToInventoryGroup = (groupId, devices) => {\n  const devicesIDS = [];\n  devices.forEach((device) => devicesIDS.push(device.UUID));\n\n  return instance.post(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts`,\n    devicesIDS\n  );\n};\n\nexport const removeDevicesFromGroup = (groupId, devices) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    data: {\n      ID: groupId,\n      Devices: devices,\n    },\n  });\n};\n\nexport const removeDevicesFromInventoryGroup = (groupId, devices) => {\n  return instance.delete(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts/` + devices.join(',')\n  );\n};\n\nexport const removeDeviceFromGroupById = (groupId, id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices/${id}`);\n};\n\nexport const validateGroupName = (name) => {\n  return instance.get(`${EDGE_API}/device-groups/checkName/${name}`);\n};\n\nexport const validateInventoryGroupName = (name) => {\n  return instance.get(\n    `${INVENTORY_API_BASE}/groups?name=${name}&order_by=name&order_how=ASC`\n  );\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n  validatorMapper,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        validatorMapper={validatorMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  validatorMapper: PropTypes.object,\n};\n\nexport default RepoModal;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useApi = ({ api, id = null, statusMessages, tableReload = false }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const hasSuccess = statusMessages?.onSuccess;\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async (query = '') => {\n    setIsLoading(true);\n    try {\n      const data = await api({ id, query });\n      setData(data);\n\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n    } catch (err) {\n      setHasError(true);\n\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n        }),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!tableReload) {\n      fetchData();\n    }\n  }, []);\n\n  return [{ data, isLoading, hasError }, fetchData];\n};\n\nexport default useApi;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["description","name","schema","fields","component","componentTypes","label","validate","type","validatorTypes","WarningIcon","color","warningColor","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","modalState","id","dispatch","useDispatch","isOpen","closeModal","title","titleIconVariant","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","deleteGroupById","propTypes","PropTypes","asyncGroupNameValidation","value","validateGroupName","data","isValid","createGroupSchema","helperText","isRequired","threshold","nameValidator","RenameGroupModal","initialValues","values","updateGroupById","createGroup","payload","instance","EDGE_API","Name","Type","createInventoryGroup","INVENTORY_API_BASE","getGroups","query","q","getTableParams","getInventoryGroups","getGroupById","addDevicesToGroup","groupId","devices","ID","Devices","addDevicesToInventoryGroup","devicesIDS","forEach","device","push","UUID","removeDevicesFromGroup","removeDevicesFromInventoryGroup","join","removeDeviceFromGroupById","validateInventoryGroupName","RepoModal","size","additionalMappers","validatorMapper","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","api","tableReload","useState","setData","isLoading","setIsLoading","hasError","setHasError","hasSuccess","fetchData","addNotification","useEffect","arrayPush","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","result","index","length","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","_objectWithoutProperties","source","excluded","key","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}