{"version":3,"sources":["webpack:///./src/components/form/ReviewStep.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/CreateImageWizard.js"],"names":["getState","useFormApi","TextContent","Text","component","TextVariants","TextList","TextListVariants","data-testid","TextListItem","T","TextListItemVariants","values","id","type","repeat","length","mapPackagesToComponent","packages","map","pack","key","name","className","summary","mapComponentToPackage","props","children","Packages","defaultArch","change","input","useFieldApi","packagesSearchName","useRef","useState","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","useEffect","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","handlePackagesSearch","getPackages","release","architecture","current","data","DualListSelector","isSearchable","availableOptionsActions","Button","aria-label","onClick","availableOptions","availableOptionsTitle","chosenOptions","filter","item","includes","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","propTypes","PropTypes","CreateImageWizard","schema","onSubmit","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","review","Review","onCancel","title","fields","nextStep","componentTypes","label","CreateImage","navigateBack","user","setUser","insights","chrome","auth","getUser","userData","ImageCreator","ReviewStep","console","log","isDynamic","inModal","buttonLabels","submit","showTitles","crossroads","description","defaultProps"],"mappings":"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","file":"js/CreateImageWizard.2414c3f910d6b9b090e2.js","sourcesContent":["import React from 'react';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListItem,\n  TextListVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  return (\n    <TextContent>\n      <Text component={TextVariants.small}>\n        Review the information and click the Create button to create your image\n        using the following criteria.\n      </Text>\n      <Text component={TextVariants.h3}>Image output</Text>\n      <TextList\n        component={TextListVariants.dl}\n        data-testid=\"review-image-output\"\n      >\n        <TextListItem component={TextListItemVariants.dt}>Release</TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          Add value\n        </TextListItem>\n      </TextList>\n      <Text component={TextVariants.h3}>Target environment</Text>\n      {getState()?.values?.['aws-account-id'] && (\n        <>\n          <Text id=\"destination-header\">Amazon Web Services</Text>\n          <TextList\n            component={TextListVariants.dl}\n            data-testid=\"review-image-upload-aws\"\n          >\n            <TextListItem component={TextListItemVariants.dt}>\n              Account ID\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {getState()?.values?.['aws-account-id']}\n            </TextListItem>\n          </TextList>\n        </>\n      )}\n      <Text component={TextVariants.h3}>Registration</Text>\n      <TextList\n        component={TextListVariants.dl}\n        data-testid=\"review-image-registration\"\n      >\n        <TextListItem component={TextListItemVariants.dt}>\n          Subscription\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd}>\n          Add value\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dt}>\n          Activation key\n        </TextListItem>\n        <TextListItem component={TextListItemVariants.dd} type=\"password\">\n          {'*'.repeat(getState()?.values?.['subscription-activation']?.length)}\n        </TextListItem>\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) =>\n  packages.map((pack, key) => (\n    <TextContent key={`${pack.name}-${key}`}>\n      <span className=\"pf-c-dual-list-selector__item-text\">{pack.name}</span>\n      <small>{pack.summary}</small>\n    </TextContent>\n  ));\n\nconst mapComponentToPackage = (component) => ({\n  name: component.props.children[0].props.children,\n  summary: component.props.children[1].props.children,\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const packagesSearchName = useRef();\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesSelected, setPackagesSelected] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n\n  useEffect(() => {\n    setPackagesSelected(\n      mapPackagesToComponent(getState()?.values?.[input.name] || [])\n    );\n  }, []);\n\n  const packageListChange = (newAvailablePackages, newChosenPackages) => {\n    const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n    setPackagesAvailable(newAvailablePackages);\n    setPackagesSelected(newChosenPackages);\n    change(input.name, chosenPkgs);\n  };\n\n  const handlePackagesSearch = async () => {\n    const { data } = await getPackages(\n      getState()?.values?.release || 'rhel-8',\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName.current\n    );\n    setPackagesAvailable(mapPackagesToComponent(data || []));\n  };\n\n  return (\n    <DualListSelector\n      className=\"pf-u-mt-sm\"\n      isSearchable\n      availableOptionsActions={[\n        <Button\n          aria-label=\"Search button for available packages\"\n          key=\"availableSearchButton\"\n          data-testid=\"search-pkgs-button\"\n          onClick={handlePackagesSearch}\n        >\n          Search\n        </Button>,\n      ]}\n      availableOptions={packagesAvailable}\n      availableOptionsTitle=\"Available packages\"\n      chosenOptions={packagesSelected.filter((item) =>\n        mapComponentToPackage(item)?.name?.includes(filterSelected)\n      )}\n      chosenOptionsTitle=\"Chosen packages\"\n      addSelected={packageListChange}\n      removeSelected={packageListChange}\n      addAll={packageListChange}\n      removeAll={(newAvailablePackages) =>\n        packageListChange(\n          newAvailablePackages,\n          packagesSelected.filter(\n            (item) =>\n              !mapComponentToPackage(item)?.name?.includes(filterSelected)\n          )\n        )\n      }\n      onAvailableOptionsSearchInputChanged={(val) => {\n        packagesSearchName.current = val;\n      }}\n      onChosenOptionsSearchInputChanged={(val) => setFilterSelected(val)}\n      filterOption={() => true}\n      id=\"basicSelectorWithSearch\"\n    />\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","export default {\n  name: 'review',\n  title: 'Review',\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\n\nexport default {\n  title: 'Packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: (\n        <Text>\n          Add optional additional packages to your image by searching available\n          packages.\n        </Text>\n      ),\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n    },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { review, packages } from './steps';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\n\nconst CreateImage = ({ navigateBack }) => {\n  const [user, setUser] = useState();\n  useEffect(() => {\n    (async () => {\n      const userData = (await insights?.chrome?.auth?.getUser()) || {};\n      setUser(() => userData);\n    })();\n  }, []);\n  return user ? (\n    <ImageCreator\n      onClose={() => navigateBack()}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={(values) => {\n        console.log(values);\n        navigateBack();\n      }}\n      defaultArch=\"x86_64\"\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Create',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: ['target-environment', 'release'],\n            description: 'Create RHEL for Edge image',\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [packages, review],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImage.propTypes = {\n  navigateBack: PropTypes.func,\n};\nCreateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default CreateImage;\n"],"sourceRoot":""}