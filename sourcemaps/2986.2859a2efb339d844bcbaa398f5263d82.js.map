{"version":3,"file":"js/2986.1667577792285.d384bc71f486cf44168c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/copy-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-open-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/ClipboardCopy/clipboard-copy.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.mjs","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Split/split.mjs","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Stack/stack.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Routes/ImageManager/UpdateImageWizard.js","webpack:///./src/Routes/ImageManagerDetail/DetailsHeader.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageVersionsTab.js","webpack:///./src/Routes/ImageManagerDetail/ImagePackagesTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTabs.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetail.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/keyBy.js","webpack:///./node_modules/lodash/map.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CopyIconConfig = {\n  name: 'CopyIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CopyIcon = createIcon(CopyIconConfig);\n\nexport default CopyIcon;","import { createIcon } from '../createIcon';\n\nexport const LockIconConfig = {\n  name: 'LockIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockIcon = createIcon(LockIconConfig);\n\nexport default LockIcon;","import { createIcon } from '../createIcon';\n\nexport const LockOpenIconConfig = {\n  name: 'LockOpenIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockOpenIcon = createIcon(LockOpenIconConfig);\n\nexport default LockOpenIcon;","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './clipboard-copy.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"clipboardCopy\": \"pf-c-clipboard-copy\",\n  \"clipboardCopyActions\": \"pf-c-clipboard-copy__actions\",\n  \"clipboardCopyActionsItem\": \"pf-c-clipboard-copy__actions-item\",\n  \"clipboardCopyExpandableContent\": \"pf-c-clipboard-copy__expandable-content\",\n  \"clipboardCopyGroup\": \"pf-c-clipboard-copy__group\",\n  \"clipboardCopyText\": \"pf-c-clipboard-copy__text\",\n  \"clipboardCopyToggleIcon\": \"pf-c-clipboard-copy__toggle-icon\",\n  \"modifiers\": {\n    \"expanded\": \"pf-m-expanded\",\n    \"inline\": \"pf-m-inline\",\n    \"block\": \"pf-m-block\",\n    \"code\": \"pf-m-code\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"labelText\": \"pf-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"labelGroup\": \"pf-c-label-group\",\n  \"labelGroupClose\": \"pf-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-c-label-group__label\",\n  \"labelGroupList\": \"pf-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","import './split.css';\nexport default {\n  \"modifiers\": {\n    \"wrap\": \"pf-m-wrap\",\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"split\": \"pf-l-split\",\n  \"splitItem\": \"pf-l-split__item\"\n};","import './stack.css';\nexport default {\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"stack\": \"pf-l-stack\",\n  \"stackItem\": \"pf-l-stack__item\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React, { useState, useEffect, useContext } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  review,\n  packages,\n  updateDetails,\n  registration,\n  repositories,\n  imageOutput,\n  customPackages,\n} from './steps';\nimport { Bullseye, Backdrop, Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\nimport { createNewImage, addImageToPoll } from '../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { imageDetailReducer } from '../../store/reducers';\nimport { loadImageDetail } from '../../store/actions';\nimport { getEdgeImageStatus } from '../../api/images';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useFeatureFlags, getReleases } from '../../utils';\nimport { temporaryReleases, supportedReleases } from '../../constants';\n\nconst UpdateImage = ({ navigateBack, updateImageID, reload }) => {\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const closeAction = () => {\n    navigateBack();\n    reload && reload();\n  };\n  const temporaryReleasesFlag = useFeatureFlags(\n    'fleet-management.temporary-releases'\n  );\n\n  const { getRegistry } = useContext(RegistryContext);\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({\n      data: imageDetailReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageDetailReducer,\n    });\n    updateImageID && loadImageDetail(dispatch, updateImageID);\n    return () => registered();\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      insights?.chrome?.auth\n        ?.getUser()\n        .then((result) => setUser(result != undefined ? result : {}));\n    })();\n  }, []);\n\n  return user && data ? (\n    <ImageCreator\n      onClose={closeAction}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const payload = {\n          ...values,\n          Id: data?.image?.ID,\n          name: data?.image?.Name,\n          version: data?.image?.Version + 1,\n          architecture: 'x86_64',\n          credentials: values.credentials\n            ? values.credentials\n            : data?.image?.Installer.SshKey,\n          username: values.username\n            ? values.username\n            : data?.image?.Installer.Username,\n        };\n\n        createNewImage(dispatch, payload, (resp) => {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              title: 'Update image',\n              description: `${resp.value.Name} image was added to the queue.`,\n            }),\n            meta: {\n              polling: {\n                id: `FETCH_IMAGE_${resp.value.ID}_BUILD_STATUS`,\n                fetcher: () => getEdgeImageStatus(resp.value.ID),\n                condition: (resp) => {\n                  switch (resp.Status) {\n                    case 'BUILDING':\n                      return [true, ''];\n                    case 'ERROR':\n                      return [false, 'failure'];\n                    default:\n                      return [false, 'success'];\n                  }\n                },\n                onEvent: {\n                  failure: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'danger',\n                          title: 'Image build failed',\n                          description: `${resp.value.Name} image build is completed unsuccessfully`,\n                        })\n                      ),\n                  ],\n                  success: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'success',\n                          title: 'Image is ready',\n                          description: `${resp.value.Name} image build is completed`,\n                        })\n                      ),\n                  ],\n                },\n              },\n            },\n          });\n          closeAction();\n          dispatch(\n            addImageToPoll({ name: data.value.Name, id: data.value.ID })\n          );\n        });\n      }}\n      defaultArch=\"x86_64\"\n      initialValues={{\n        imageID: data?.image.ID,\n        name: data?.image?.Name,\n        isUpdate: true,\n        description: data?.image?.Description,\n        credentials: data?.image?.Installer.SshKey,\n        username: data?.image?.Installer.Username,\n        version: data?.image?.Version,\n        release: data?.image?.Distribution,\n        release_options: temporaryReleasesFlag\n          ? getReleases(data?.image?.Distribution, [\n              ...supportedReleases,\n              ...temporaryReleases,\n            ])\n          : getReleases(data?.image?.Distribution),\n        imageType: ['rhel-edge-commit'],\n        'selected-packages': data?.image?.Packages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n        'third-party-repositories': data?.image?.ThirdPartyRepositories?.map(\n          (repo) => ({\n            id: repo.ID,\n            name: repo.Name,\n            ...repo,\n          })\n        ),\n        'initial-custom-repositories': data?.image?.ThirdPartyRepositories?.map(\n          (repo) => ({\n            id: repo.ID,\n            name: repo.Name,\n            ...repo,\n          })\n        ),\n        'custom-packages': data?.image?.CustomPackages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n      }}\n      test=\"\"\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Update image',\n            },\n            showTitles: true,\n            title: `Update image: ${data?.image?.Name}`,\n            crossroads: [\n              'target-environment',\n              'release',\n              'imageType',\n              'third-party-repositories',\n            ],\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              updateDetails,\n              imageOutput,\n              registration,\n              repositories,\n              packages,\n              repositories,\n              review,\n              customPackages,\n            ],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  );\n};\n\nUpdateImage.propTypes = {\n  navigateBack: PropTypes.func,\n  updateImageID: PropTypes.number,\n  reload: PropTypes.func,\n};\nUpdateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default UpdateImage;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Text,\n  TextList,\n  TextListItem,\n  TextContent,\n  Skeleton,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownPosition,\n  Tooltip,\n} from '@patternfly/react-core';\nimport Status from '../../components/Status';\nimport { routes as paths } from '../../constants/routeMapper';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst dropdownItems = (data, imageVersion, isoURL, openUpdateWizard) => {\n  const imageData = imageVersion ? imageVersion : data?.LastImageDetails;\n\n  const actionsArray = [];\n\n  imageData?.image?.ID &&\n    actionsArray.push(\n      <DropdownItem\n        key=\"create-new-version-button\"\n        component=\"button\"\n        onClick={() => openUpdateWizard(imageData?.image?.ID)}\n      >\n        Create new version\n      </DropdownItem>\n    );\n\n  isoURL &&\n    actionsArray.push(\n      <DropdownItem key=\"download-button\" component=\"button\">\n        <Text\n          className=\"force-text-black remove-underline\"\n          component=\"a\"\n          href={isoURL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Download installable .iso for newest image\n        </Text>\n      </DropdownItem>\n    );\n  return actionsArray;\n};\n\nconst DetailsHead = ({ imageData, imageVersion, openUpdateWizard }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    setData(imageData?.data);\n  }, [imageData]);\n\n  const actionsLabel = 'Actions for image set details view';\n  const dropdownId = 'image-set-details-dropdown';\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={paths['manage-images']}>Back to Manage Images</Link>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        <>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to={paths['manage-images']}>Manage Images</Link>\n            </BreadcrumbItem>\n            {imageVersion ? (\n              <BreadcrumbItem>\n                <Link to={`${paths['manage-images']}/${data?.ImageSet?.ID}`}>\n                  {data?.ImageSet?.Name}\n                </Link>\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem isActive>\n                {data?.ImageSet?.Name || <Skeleton width=\"100px\" />}\n              </BreadcrumbItem>\n            )}\n            {imageVersion && (\n              <BreadcrumbItem isActive>\n                {imageVersion?.image?.Version}\n              </BreadcrumbItem>\n            )}\n          </Breadcrumb>\n\n          <TextContent>\n            <Split>\n              <SplitItem>\n                <TextList component=\"dl\">\n                  <TextListItem\n                    component=\"h1\"\n                    className=\"grid-align-center pf-u-mb-0\"\n                  >\n                    {data?.ImageSet?.Name || <Skeleton width=\"150px\" />}\n                  </TextListItem>\n                  <TextListItem className=\"pf-u-pt-sm\" component=\"dd\">\n                    {imageVersion?.image?.Status ||\n                    data?.LastImageDetails?.image?.Status ? (\n                      <Status\n                        type={\n                          imageVersion\n                            ? imageVersion?.image?.Status.toLowerCase()\n                            : data?.LastImageDetails?.image?.Status.toLowerCase()\n                        }\n                      />\n                    ) : (\n                      <Skeleton width=\"100px\" />\n                    )}\n                  </TextListItem>\n                  {imageVersion?.image?.UpdatedAt ||\n                  data?.LastImageDetails?.image?.UpdatedAt ? (\n                    <TextListItem component=\"p\">\n                      {`Last updated `}\n                      <DateFormat\n                        date={\n                          imageVersion\n                            ? imageVersion?.image?.UpdatedAt\n                            : data?.LastImageDetails?.image?.UpdatedAt\n                        }\n                      />\n                    </TextListItem>\n                  ) : (\n                    <Skeleton width=\"200px\" />\n                  )}\n                </TextList>\n              </SplitItem>\n              <SplitItem isFilled></SplitItem>\n              <SplitItem>\n                <Dropdown\n                  position={DropdownPosition.right}\n                  toggle={\n                    <DropdownToggle\n                      id={dropdownId}\n                      toggleIndicator={CaretDownIcon}\n                      onToggle={(newState) => setIsOpen(newState)}\n                      isDisabled={\n                        (imageVersion\n                          ? imageVersion?.image?.Status\n                          : data?.LastImageDetails?.image.Status) ===\n                          'BUILDING' || false\n                      }\n                      aria-label={actionsLabel}\n                    >\n                      <Tooltip\n                        content={actionsLabel}\n                        reference={() => document.getElementById(dropdownId)}\n                      />\n                      Actions\n                    </DropdownToggle>\n                  }\n                  isOpen={isOpen}\n                  dropdownItems={dropdownItems(\n                    data,\n                    imageVersion,\n                    data?.ImageBuildIsoURL,\n                    openUpdateWizard\n                  )}\n                />\n              </SplitItem>\n            </Split>\n          </TextContent>\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsHead.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default DetailsHead;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  Text,\n  TextVariants,\n  Grid,\n  GridItem,\n  ClipboardCopy,\n  Skeleton,\n} from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { distributionMapper } from '../../constants';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Link } from 'react-router-dom';\n\nconst ImageDetailTab = ({ imageData, imageVersion }) => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    imageVersion\n      ? setData(imageVersion)\n      : setData(imageData?.data?.LastImageDetails);\n  }, [imageData, imageVersion]);\n\n  const createSkeleton = (rows) =>\n    [...Array(rows * 2)].map((_, key) => <Skeleton width=\"180px\" key={key} />);\n\n  const dateFormat = () => <DateFormat date={data?.image?.['CreatedAt']} />;\n\n  const detailsMapper = {\n    Version: 'Version',\n    Created: () => dateFormat(),\n    'Type(s)': () =>\n      data?.image?.['OutputTypes']?.map((outputType, index) => (\n        <div key={index}>{outputType}</div>\n      )),\n    Release: () => distributionMapper?.[data?.image?.['Distribution']],\n    //Size: 'Size',\n    Description: 'Description',\n  };\n\n  const userInfoMapper = {\n    Username: () => data?.image?.Installer?.Username,\n    'SSH key': () => data?.image?.Installer?.SshKey,\n  };\n  const renderAdditionalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths['manage-images']}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/additional`}\n      >\n        {data?.additional_packages}\n      </Link>\n    );\n  };\n\n  const renderTotalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths['manage-images']}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/all`}\n      >\n        {data?.packages}\n      </Link>\n    );\n  };\n\n  const packageMapper = {\n    'Total additional packages': renderAdditionalPackageLink,\n    'Total packages': renderTotalPackageLink,\n  };\n\n  const packageDiffMapper = {\n    Added: () => data?.update_added,\n    Removed: () => data?.update_removed,\n    Updated: () => data?.update_updated,\n  };\n\n  if (data?.image?.Installer?.Checksum) {\n    detailsMapper['SHA-256 checksum'] = () => data?.image?.Installer?.Checksum;\n  }\n\n  if (data?.image?.Commit?.OSTreeCommit) {\n    detailsMapper['Ostree commit hash'] = () =>\n      data?.image?.Commit?.OSTreeCommit;\n  }\n\n  const buildTextList = (labelsToValueMapper) =>\n    data\n      ? Object.entries(labelsToValueMapper).map(([label, value], index) => {\n          return (\n            <Fragment key={index}>\n              <TextListItem\n                className=\"details-label\"\n                component={TextListItemVariants.dt}\n              >\n                {label}\n              </TextListItem>\n              {label === 'SHA-256 checksum' ||\n              label === 'Ostree commit hash' ||\n              (label === 'SSH key' && value()) ? (\n                <TextListItem component={TextListItemVariants.dd}>\n                  <ClipboardCopy\n                    hoverTip=\"Copy\"\n                    clickTip=\"Copied\"\n                    variant=\"expansion\"\n                    className=\"pf-u-text-break-word\"\n                    id={`${label\n                      .replace(/\\s+/g, '-')\n                      .toLowerCase()}-clipboard-copy`}\n                  >\n                    {typeof value === 'function'\n                      ? value() || 'Unavailable'\n                      : data?.image?.[value] || 'Unavailable'}\n                  </ClipboardCopy>\n                </TextListItem>\n              ) : (\n                <TextListItem\n                  className=\"pf-u-text-break-word\"\n                  component={TextListItemVariants.dd}\n                >\n                  {typeof value === 'function'\n                    ? value() === 0\n                      ? 0\n                      : value() || 'Unavailable'\n                    : data?.image?.[value] || 'Unavailable'}\n                </TextListItem>\n              )}\n            </Fragment>\n          );\n        })\n      : null;\n\n  return (\n    <TextContent className=\"pf-u-ml-lg pf-u-mt-md\">\n      <Grid span={12}>\n        <GridItem span={5}>\n          <Text component={TextVariants.h2}>\n            {imageVersion ? 'Details' : 'Most recent image'}\n          </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(detailsMapper) || createSkeleton(6)}\n          </TextList>\n          <Text component={TextVariants.h2}>User information </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(userInfoMapper) || createSkeleton(2)}\n          </TextList>\n        </GridItem>\n        <GridItem span={1} />\n        <GridItem span={6}>\n          <Text component={TextVariants.h2}>Packages </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageMapper) || createSkeleton(3)}\n          </TextList>\n          <Text component={TextVariants.h2}>Changes from previous version</Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageDiffMapper) || createSkeleton(3)}\n          </TextList>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nImageDetailTab.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n};\n\nexport default ImageDetailTab;\n","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Link } from 'react-router-dom';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Status from '../../components/Status';\nimport { imageTypeMapper } from '../../constants';\nimport { getImageSetViewVersions } from '../../api/images';\nimport { cellWidth } from '@patternfly/react-table';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { truncateString } from '../../utils';\nimport useApi from '../../hooks/useApi';\n\nconst defaultFilters = [\n  {\n    label: 'Status',\n    type: 'checkbox',\n    options: [\n      { option: 'Building', value: 'BUILDING' },\n      { option: 'Created', value: 'CREATED' },\n      { option: 'Error', value: 'ERROR' },\n      { option: 'Ready', value: 'SUCCESS' },\n    ],\n  },\n];\n\nconst columnNames = [\n  {\n    title: 'Version',\n    type: 'version',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Output',\n    type: 'image_type',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Ostree commit hash',\n    type: 'ostree_commit_hash',\n    sort: false,\n    columnTransforms: [cellWidth(20)],\n  },\n  {\n    title: 'Created',\n    type: 'created_at',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Status',\n    type: 'status',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n];\n\nconst createRows = (data, imageSetId, latestImageVersion) => {\n  return data?.map((image) => ({\n    rowInfo: {\n      id: image?.ID,\n      imageStatus: image?.Status,\n      isoURL: image?.ImageBuildIsoURL,\n      latestImageVersion,\n      currentImageVersion: image.Version,\n    },\n    noApiSortFilter: [\n      image?.Version,\n      imageTypeMapper[image?.ImageType],\n      image?.CreatedAt,\n      image?.Status,\n    ],\n    cells: [\n      {\n        title: (\n          <Link\n            to={`${paths['manage-images']}/${imageSetId}/versions/${image.ID}/details`}\n          >\n            {image?.Version}\n          </Link>\n        ),\n      },\n      {\n        title: imageTypeMapper[image?.ImageType],\n      },\n      {\n        title: image?.CommitCheckSum ? (\n          <Tooltip content={<div>{image.CommitCheckSum}</div>}>\n            <span>{truncateString(image.CommitCheckSum, 5, 5)}</span>\n          </Tooltip>\n        ) : (\n          <Text>Unavailable</Text>\n        ),\n      },\n      {\n        title: <DateFormat date={image?.CreatedAt} />,\n      },\n      {\n        title: <Status type={image?.Status.toLowerCase()} />,\n      },\n    ],\n  }));\n};\n\nconst ImageVersionsTab = ({ imageData, openUpdateWizard }) => {\n  const imageSetID = imageData?.data?.ImageSet?.ID;\n  const latestImageVersion = imageData?.data?.ImageSet?.Version;\n\n  const [response, fetchImageSetVersions] = useApi({\n    api: ({ query }) =>\n      getImageSetViewVersions({\n        imageSetID: imageSetID,\n        query,\n      }),\n    tableReload: true,\n  });\n\n  const { data, isLoading, hasError } = response;\n\n  const actionResolver = (rowData) => {\n    const actionsArray = [];\n    if (rowData.rowInfo?.isoURL) {\n      actionsArray.push({\n        title: (\n          <Text\n            className=\"force-text-black remove-underline\"\n            component=\"a\"\n            href={rowData.rowInfo.isoURL}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Download\n          </Text>\n        ),\n      });\n    }\n\n    if (\n      rowData.rowInfo?.imageStatus === 'SUCCESS' ||\n      rowData.rowInfo?.imageStatus === 'ERROR'\n    ) {\n      actionsArray.push({\n        title: 'Update Image',\n        onClick: (_event, _rowId, rowData) => {\n          openUpdateWizard(rowData.rowInfo.id);\n        },\n        isDisabled:\n          rowData?.rowInfo?.latestImageVersion !==\n          rowData?.rowInfo?.currentImageVersion,\n      });\n    }\n\n    if (rowData.rowInfo?.imageStatus === 'BUILDING' && rowData.rowInfo?.id) {\n      actionsArray.push({\n        title: '',\n      });\n    }\n\n    return actionsArray;\n  };\n  const areActionsDisabled = (rowData) =>\n    rowData.rowInfo?.imageStatus === 'BUILDING';\n\n  return (\n    <Main className=\"add-100vh\">\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        filters={defaultFilters}\n        loadTableData={fetchImageSetVersions}\n        tableData={{\n          count: data?.count,\n          data: data?.data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columnNames}\n        rows={createRows(data?.data, imageSetID, latestImageVersion)}\n        actionResolver={actionResolver}\n        areActionsDisabled={areActionsDisabled}\n        defaultSort={{ index: 3, direction: 'desc' }}\n      />\n    </Main>\n  );\n};\nImageVersionsTab.propTypes = {\n  imageData: PropTypes.object,\n  urlParam: PropTypes.string,\n  imageSetID: PropTypes.number,\n  createRows: PropTypes.func,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default ImageVersionsTab;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { cellWidth } from '@patternfly/react-table';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Empty from '../../components/Empty';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nconst defaultFilters = [{ label: 'Name', type: 'text' }];\n\nconst columnNames = [\n  {\n    title: 'Name',\n    type: 'name',\n    sort: true,\n    columnTransforms: [cellWidth(35)],\n  },\n  {\n    title: 'Version',\n    type: 'version',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Release',\n    type: 'release',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n  //{ title: 'Type', type: 'type', sort: false, columnTransforms: [cellWidth(35)] },\n];\n\nconst createRows = ({\n  distribution,\n  installedPackages,\n  addedPackages,\n  showAll,\n}) => {\n  const rowData =\n    showAll === 0\n      ? installedPackages.filter(\n          (pack) =>\n            addedPackages?.filter((image) => pack.name === image.Name).length >\n            0\n        )\n      : installedPackages;\n  return rowData.map((packageData) => ({\n    noApiSortFilter: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n    ],\n    cells: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n      {\n        title: (\n          <a\n            href={`https://access.redhat.com/downloads/content/rhel---${distribution}/x86_64/7416/${packageData?.name}/${packageData?.version}-${packageData?.release}/${packageData?.arch}/fd431d51/package`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"link\"\n              isSmall\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n            >\n              More information\n            </Button>\n          </a>\n        ),\n      },\n    ],\n  }));\n};\n\nconst indexToTabs = {\n  0: 'additional',\n  1: 'all',\n};\n\nconst tabsToIndex = {\n  additional: 0,\n  all: 1,\n};\n\nconst ImagePackagesTab = ({ imageVersion }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const splitUrl = location.pathname.split('/');\n  const defaultToggle = splitUrl.length === 7 ? tabsToIndex[splitUrl[6]] : 1;\n  // Distribution examples would be: rhel-86, rhel-90, and rhel-100\n  const distribution = imageVersion?.image?.Distribution?.split('-')[1].slice(\n    0,\n    -1\n  );\n\n  const [packageData, setPackageData] = useState({});\n  const [toggleTable, setToggleTable] = useState(defaultToggle);\n\n  useEffect(() => {\n    setPackageData(imageVersion);\n  }, [imageVersion]);\n\n  useEffect(() => {\n    splitUrl[5] !== indexToTabs[toggleTable] && setToggleTable(defaultToggle);\n  }, [splitUrl]);\n\n  const handleToggleTable = (toggleIndex) => {\n    const currentTab = splitUrl[5]?.toLowerCase();\n    setToggleTable(toggleIndex);\n    if (currentTab === 'packages') {\n      if (splitUrl.length === 7) {\n        splitUrl[6] = indexToTabs[toggleIndex];\n      } else {\n        splitUrl.push(indexToTabs[toggleIndex]);\n      }\n\n      history.push(splitUrl.join('/'));\n    }\n  };\n\n  return imageVersion?.image?.Commit?.Status === 'SUCCESS' ? (\n    <Main className=\"add-100vh\">\n      <GeneralTable\n        apiFilterSort={false}\n        filters={defaultFilters}\n        tableData={{\n          count:\n            toggleTable === 0\n              ? packageData?.additional_packages\n              : packageData?.packages,\n          isLoading: false,\n          hasError: false,\n        }}\n        columnNames={columnNames}\n        rows={\n          packageData?.image?.Commit?.InstalledPackages\n            ? createRows({\n                distribution: distribution,\n                installedPackages:\n                  packageData?.image?.Commit?.InstalledPackages,\n                addedPackages: packageData?.image?.Packages,\n                showAll: toggleTable,\n              })\n            : []\n        }\n        actionResolver={() => []}\n        areActionsDisabled={() => true}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        toggleButton={[\n          { title: 'Additional', key: 0 },\n          { title: 'All', key: 1 },\n        ]}\n        toggleAction={handleToggleTable}\n        toggleState={toggleTable}\n        emptyFilterState={{\n          icon: 'search',\n          title: 'No packages to display',\n        }}\n      />\n    </Main>\n  ) : (\n    <Main className=\"add-100vh\">\n      <Empty\n        bgColor=\"white\"\n        title=\"Package data currently unavailable\"\n        body=\"Packages will be displayed as soon as the image is finished being built.\"\n        primaryAction={null}\n        secondaryActions={[]}\n      />\n    </Main>\n  );\n};\n\nImagePackagesTab.propTypes = {\n  imageVersion: PropTypes.object,\n};\n\nexport default ImagePackagesTab;\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, TabTitleText, Skeleton } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\n\nimport ImageDetailTab from './ImageDetailTab';\nimport ImageVersionTab from './ImageVersionsTab';\nimport ImagePackagesTab from './ImagePackagesTab';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../../components/Empty';\n\nimport { mapUrlToObj } from '../../utils';\n\n// conditional render for same index\nconst tabs = {\n  details: 0,\n  packages: 1,\n  versions: 1,\n};\n\nconst ImageDetailTabs = ({\n  imageData,\n  openUpdateWizard,\n  imageVersion,\n  isLoading,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [activeTabKey, setActiveTabkey] = useState(tabs.details);\n  const activeTab = imageVersion ? 'imageTab' : 'imageSetTab';\n\n  const keys = [\n    'baseURL',\n    'imageSetVersion',\n    'imageSetTab',\n    'imageVersion',\n    'imageTab',\n    'packagesToggle',\n  ];\n  const imageUrlMapper = mapUrlToObj(location.pathname, keys);\n\n  const handleTabClick = (_event, tabIndex) => {\n    const selectedTab =\n      tabIndex === 0 ? 'details' : imageVersion ? 'packages' : 'versions';\n\n    imageUrlMapper[activeTab] = selectedTab;\n\n    history.push(imageUrlMapper.buildUrl());\n\n    setActiveTabkey(tabIndex);\n  };\n\n  useEffect(() => {\n    imageUrlMapper['imageTab']\n      ? setActiveTabkey(tabs[imageUrlMapper['imageTab']])\n      : setActiveTabkey(tabs[imageUrlMapper['imageSetTab']]);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <EmptyState\n          icon=\"question\"\n          title=\"Image not found\"\n          body=\"Please check you have the correct link with the correct image Id.\"\n          primaryAction={{\n            text: 'Back to Manage Images',\n            href: paths['manage-images'],\n          }}\n          secondaryActions={[]}\n        />\n      ) : (\n        <div className=\"edge-c-device--detail add-100vh\">\n          <Tabs\n            className=\"pf-u-ml-md\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={tabs.details}\n              title={<TabTitleText>Details</TabTitleText>}\n            >\n              <ImageDetailTab\n                imageData={imageData}\n                imageVersion={imageVersion}\n              />\n            </Tab>\n            {isLoading ? (\n              <Tab\n                title={\n                  <TabTitleText>\n                    <Skeleton width=\"75px\" />\n                  </TabTitleText>\n                }\n              ></Tab>\n            ) : imageVersion ? (\n              <Tab\n                eventKey={tabs.packages}\n                title={<TabTitleText>Packages</TabTitleText>}\n              >\n                <ImagePackagesTab imageVersion={imageVersion} />\n              </Tab>\n            ) : (\n              <Tab\n                eventKey={tabs.versions}\n                title={<TabTitleText>Versions</TabTitleText>}\n              >\n                <ImageVersionTab\n                  imageData={imageData}\n                  openUpdateWizard={openUpdateWizard}\n                />\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      )}\n    </>\n  );\n};\n\nImageDetailTabs.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nexport default ImageDetailTabs;\n","import React, { Fragment, Suspense, useEffect, useState } from 'react';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Stack, StackItem, Spinner, Bullseye } from '@patternfly/react-core';\nimport { useParams, useHistory } from 'react-router-dom';\nimport DetailsHead from './DetailsHeader';\nimport ImageDetailTabs from './ImageDetailTabs';\nimport UpdateImageWizard from '../ImageManager/UpdateImageWizard';\nimport useApi from '../../hooks/useApi';\nimport { getImageSetView } from '../../api/images';\n\nconst ImageDetail = () => {\n  const { imageId, imageVersionId } = useParams();\n  const history = useHistory();\n  const [updateWizard, setUpdateWizard] = useState({\n    isOpen: false,\n    updateId: null,\n  });\n  const [imageVersion, setImageVersion] = useState(null);\n\n  const [response, fetchImageSetDetails] = useApi({\n    api: getImageSetView,\n    id: imageVersionId ? `${imageId}/versions/${imageVersionId}` : `${imageId}`,\n    tableReload: true,\n  });\n\n  const { data, isLoading } = response;\n\n  const openUpdateWizard = (id) => {\n    history.push({\n      pathname: history.location.pathname,\n      search: new URLSearchParams({\n        update_image: true,\n      }).toString(),\n    });\n    setUpdateWizard((prevState) => ({\n      ...prevState,\n      isOpen: !prevState.isLoading,\n      updateId: id,\n    }));\n  };\n\n  useEffect(() => {\n    imageVersionId\n      ? setImageVersion(data?.ImageDetails)\n      : setImageVersion(null);\n  }, [response, imageVersionId]);\n\n  useEffect(() => {\n    fetchImageSetDetails();\n  }, [imageId, imageVersionId]);\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <Stack hasGutter>\n          <StackItem>\n            <DetailsHead\n              imageData={response}\n              imageVersion={imageVersion}\n              openUpdateWizard={openUpdateWizard}\n            />\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <ImageDetailTabs\n        imageData={response}\n        urlParam={imageId}\n        imageVersion={imageVersion}\n        openUpdateWizard={openUpdateWizard}\n        isLoading={isLoading}\n      />\n      {updateWizard.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateImageWizard\n            navigateBack={() => {\n              history.push({ pathname: history.location.pathname });\n              setUpdateWizard((prevState) => ({ ...prevState, isOpen: false }));\n            }}\n            updateImageID={updateWizard.updateId}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ImageDetail;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["CopyIconConfig","name","height","width","svgPath","yOffset","xOffset","CopyIcon","LockIconConfig","LockIcon","LockOpenIconConfig","LockOpenIcon","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","UpdateImage","navigateBack","updateImageID","reload","useState","user","setUser","dispatch","useDispatch","closeAction","temporaryReleasesFlag","useFeatureFlags","getRegistry","useContext","RegistryContext","data","useSelector","imageDetailReducer","shallowEqual","useEffect","registered","register","loadImageDetail","insights","chrome","auth","getUser","then","result","undefined","onClose","customComponentMapper","review","ReviewStep","onSubmit","values","setIsSaving","payload","Id","image","ID","Name","version","Version","architecture","credentials","Installer","SshKey","username","Username","createNewImage","resp","addNotification","variant","title","meta","polling","id","fetcher","getEdgeImageStatus","condition","Status","onEvent","failure","success","addImageToPoll","defaultArch","initialValues","imageID","isUpdate","Description","release","Distribution","release_options","getReleases","supportedReleases","temporaryReleases","imageType","Packages","map","pkg","ThirdPartyRepositories","repo","CustomPackages","test","schema","fields","component","componentTypes","className","isDynamic","inModal","buttonLabels","submit","showTitles","crossroads","updateDetails","imageOutput","registration","repositories","packages","customPackages","isSVG","diameter","propTypes","PropTypes","defaultProps","dropdownItems","imageVersion","isoURL","openUpdateWizard","imageData","LastImageDetails","actionsArray","push","DropdownItem","key","onClick","Text","href","rel","target","DetailsHead","isOpen","setIsOpen","setData","actionsLabel","dropdownId","isLoading","hasError","Breadcrumb","BreadcrumbItem","Link","to","paths","ImageSet","isActive","Skeleton","TextContent","Split","SplitItem","TextList","TextListItem","T","toLowerCase","UpdatedAt","DateFormat","isFilled","Dropdown","position","DropdownPosition","toggle","DropdownToggle","toggleIndicator","CaretDownIcon","onToggle","newState","isDisabled","reference","document","getElementById","ImageBuildIsoURL","ImageDetailTab","createSkeleton","rows","Array","_","detailsMapper","Created","outputType","index","Release","distributionMapper","userInfoMapper","packageMapper","ImageSetID","additional_packages","packageDiffMapper","Added","update_added","Removed","update_removed","Updated","update_updated","Checksum","Commit","OSTreeCommit","buildTextList","labelsToValueMapper","entries","label","Fragment","TextListItemVariants","ClipboardCopy","hoverTip","clickTip","replace","Grid","span","GridItem","TextVariants","TextListVariants","defaultFilters","options","option","columnNames","sort","columnTransforms","cellWidth","createRows","imageSetId","latestImageVersion","rowInfo","imageStatus","currentImageVersion","noApiSortFilter","imageTypeMapper","ImageType","CreatedAt","cells","CommitCheckSum","truncateString","ImageVersionsTab","imageSetID","useApi","api","query","getImageSetViewVersions","tableReload","response","fetchImageSetVersions","Main","GeneralTable","apiFilterSort","isUseApi","filters","loadTableData","tableData","count","actionResolver","rowData","_event","_rowId","areActionsDisabled","defaultSort","direction","urlParam","distribution","installedPackages","addedPackages","showAll","filter","pack","packageData","arch","Button","isSmall","icon","iconPosition","indexToTabs","tabsToIndex","additional","all","ImagePackagesTab","location","useLocation","history","useHistory","splitUrl","pathname","defaultToggle","setPackageData","toggleTable","setToggleTable","InstalledPackages","toggleButton","toggleAction","toggleIndex","currentTab","join","toggleState","emptyFilterState","Empty","bgColor","body","primaryAction","secondaryActions","tabs","details","versions","ImageDetailTabs","activeTabKey","setActiveTabkey","activeTab","imageUrlMapper","mapUrlToObj","text","Tabs","activeKey","onSelect","tabIndex","selectedTab","buildUrl","Tab","eventKey","TabTitleText","useParams","imageId","imageVersionId","updateId","updateWizard","setUpdateWizard","setImageVersion","getImageSetView","fetchImageSetDetails","search","URLSearchParams","update_image","prevState","ImageDetails","PageHeader","Stack","hasGutter","StackItem","Suspense","fallback","Bullseye","Spinner","UpdateImageWizard","baseEach","isArrayLike","module","exports","collection","iteratee","baseFlatten","baseAssignValue","keyBy","createAggregator","arrayMap","baseIteratee","baseMap","isArray"],"sourceRoot":""}