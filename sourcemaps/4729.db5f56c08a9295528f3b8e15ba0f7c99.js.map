{"version":3,"file":"js/4729.47380c722f357e3fdb50.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/action-types.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/reducers/notifications.js","webpack:///./src/api/images/index.js","webpack:///./src/constants/routeMapper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js"],"sourcesContent":["var notificationsPrefix = '@@INSIGHTS-CORE/NOTIFICATIONS/';\nexport var ADD_NOTIFICATION = \"\".concat(notificationsPrefix, \"ADD_NOTIFICATION\");\nexport var REMOVE_NOTIFICATION = \"\".concat(notificationsPrefix, \"REMOVE_NOTIFICATION\");\nexport var CLEAR_NOTIFICATIONS = \"\".concat(notificationsPrefix, \"CLEAR_NOTIFICATIONS\");\nexport default {\n    ADD_NOTIFICATION: ADD_NOTIFICATION,\n    REMOVE_NOTIFICATION: REMOVE_NOTIFICATION,\n    CLEAR_NOTIFICATIONS: CLEAR_NOTIFICATIONS,\n};\n//# sourceMappingURL=action-types.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from '../actions/action-types';\nvar addNotification = function (notifications, _a) {\n    var payload = _a.payload;\n    return __spreadArray(__spreadArray([], notifications, true), [payload], false);\n};\nvar removeNotification = function (notifications, _a) {\n    var payload = _a.payload;\n    var index = notifications.findIndex(function (_a) {\n        var id = _a.id;\n        return id === payload;\n    });\n    return __spreadArray(__spreadArray([], notifications.slice(0, index), true), notifications.slice(index + 1), true);\n};\nvar clearNotifications = function () { return []; };\nexport var defaultState = [];\nexport var notificationsReducers = function (state, action) {\n    if (state === void 0) { state = defaultState; }\n    switch (action.type) {\n        case ADD_NOTIFICATION:\n            return addNotification(state, action);\n        case REMOVE_NOTIFICATION:\n            return removeNotification(state, action);\n        case CLEAR_NOTIFICATIONS:\n            return clearNotifications();\n        default:\n            return state;\n    }\n};\nexport var notifications = notificationsReducers;\nexport default notifications;\n//# sourceMappingURL=notifications.js.map","import {\n  CONTENT_SOURCES_API,\n  EDGE_API,\n  IMAGE_BUILDER_API,\n  RHSM_API,\n  getTableParams,\n} from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const checkImageName = (name) => {\n  const payload = {\n    name,\n  };\n  return instance.post(`${EDGE_API}/images/checkImageName`, payload);\n};\n\nexport const fetchImageStatus = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const fetchActiveImages = ({ limit = 100, offset = 0 } = {}) => {\n  return instance.get(\n    `${IMAGE_BUILDER_API}/composes?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const fetchActivationKeys = ({ limit = 10, offset = 0 } = {}) => {\n  return instance.get(\n    `${RHSM_API}/activation_keys?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const createImage = ({\n  Id,\n  name,\n  version,\n  description,\n  release,\n  architecture,\n  username,\n  credentials,\n  imageType: imageTypes,\n  'selected-packages': packages,\n  'third-party-repositories': thirdPartyRepositories,\n  'custom-packages': customPackages,\n  activationKey,\n}) => {\n  let [imageType] = imageTypes || [];\n  if (imageTypes.length > 1) {\n    imageType = 'rhel-edge-installer';\n  }\n  const payload = {\n    name,\n    version,\n    description,\n    distribution: release,\n    imageType: imageType,\n    packages: packages?.map((item) => ({ name: item.name })),\n    outputTypes: imageTypes,\n    commit: {\n      arch: architecture,\n    },\n    installer: {\n      username,\n      sshkey: credentials,\n    },\n    thirdPartyRepositories: thirdPartyRepositories?.map((repo) => ({\n      ID: repo.id,\n      Name: repo.name,\n      URL: repo.URL,\n      uuid: repo.uuid,\n    })),\n    customPackages: customPackages?.map((repo) => ({ Name: repo.name })),\n    activationKey: activationKey,\n  };\n\n  let endpoint = `${EDGE_API}/images`;\n\n  if (version > 1) {\n    endpoint += `/${Id}/update`;\n  }\n\n  return instance.post(endpoint, payload);\n};\n\nexport const getImageSet = ({\n  id,\n  q = {\n    limit: 10,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/${id}?${query}`);\n};\n\nexport const getImageSetViewVersions = ({\n  imageSetID,\n  query = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/image-sets/view/${imageSetID}/versions?${q}`\n  );\n};\n\nexport const getImageSetView = ({ id }) => {\n  return instance.get(`${EDGE_API}/image-sets/view/${id}`);\n};\n\nexport const getImagePackageMetadata = (id) => {\n  try {\n    return instance.get(`${EDGE_API}/images/${id}/metadata`);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchEdgeImages = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/images?${query}`);\n};\n\nexport const fetchEdgeImageSets = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets?${query}`);\n};\n\nexport const getEdgeImageStatus = (id) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const getImageDataOnDevice = (id) => {\n  return instance.get(`${EDGE_API}/updates/device/${id}/image`);\n};\n\nexport const getPackages = async (distribution, architecture, search) => {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  return instance(`${IMAGE_BUILDER_API}/packages?${params.toString()}`);\n};\n\nexport const getImageById = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/details`);\n};\n\nexport const getImageSets = ({ query }) => {\n  if (query === '') {\n    query = { limit: 20, offset: 0, sort_by: '-updated_at' };\n  }\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/image-sets/view?${q}`);\n};\n\nexport const postRpmsNames = (urls, search) => {\n  return instance.post(`${CONTENT_SOURCES_API}/rpms/names`, {\n    urls: urls,\n    search: search,\n  });\n};\n","export const routes = {\n  groups: '/groups',\n  groupsDetail: '/groups/:uuid',\n  deviceDetail: '/groups/:uuid/:inventoryId',\n  canaries: '/canaries',\n  fleetManagement: '/fleet-management',\n  fleetManagementDetail: '/fleet-management/:groupId',\n  fleetManagementSystemDetail: '/fleet-management/:groupId/systems/:deviceId',\n  fleetManagementSystemDetailUpdate:\n    '/fleet-management/:groupId/systems/:deviceId/update',\n  inventory: '/inventory',\n  insightsInventory: '/insights/inventory/manage-edge-inventory',\n  inventoryDetail: '/inventory/:deviceId',\n  inventoryDetailModal: '/inventory/:deviceId/:modalId',\n  inventoryDetailUpdate: '/inventory/:deviceId/update',\n  insightsInventoryDetailUpdate: '/insights/inventory/:deviceId/update',\n  manageImages: '/manage-images',\n  manageImagesDetail: '/manage-images/:imageId',\n  manageImagesDetailVersion: '/manage-images/:imageId/versions/:imageVersionId',\n  repositories: '/repositories',\n  learningResources: '/learning-resources',\n  contentSourcesRepositories: '/preview/insights/content',\n};\n","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };"],"names":["notificationsPrefix","ADD_NOTIFICATION","concat","REMOVE_NOTIFICATION","CLEAR_NOTIFICATIONS","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","removeNotification","index","clearNotifications","__spreadArray","to","from","pack","ar","l","Array","defaultState","state","action","notifications","_a","findIndex","checkImageName","name","instance","post","EDGE_API","fetchActivationKeys","_ref3","undefined","_ref3$limit","limit","_ref3$offset","offset","get","RHSM_API","createImage","_ref4","Id","version","description","release","architecture","username","credentials","imageTypes","imageType","packages","thirdPartyRepositories","customPackages","activationKey","_ref5","_slicedToArray","distribution","map","item","outputTypes","commit","arch","installer","sshkey","repo","ID","Name","URL","uuid","endpoint","getImageSet","_ref7","_ref7$q","q","sort_by","query","getTableParams","getImageSetViewVersions","_ref8","imageSetID","_ref8$query","getImageSetView","_ref9","fetchEdgeImageSets","getEdgeImageStatus","getImageDataOnDevice","getPackages","_ref10","_asyncToGenerator","_regeneratorRuntime","_callee","search","params","_context","prev","next","URLSearchParams","abrupt","IMAGE_BUILDER_API","stop","_x","_x2","_x3","getImageById","_ref11","getImageSets","_ref12","postRpmsNames","urls","CONTENT_SOURCES_API","routes","groups","groupsDetail","deviceDetail","canaries","fleetManagement","fleetManagementDetail","fleetManagementSystemDetail","fleetManagementSystemDetailUpdate","inventory","insightsInventory","inventoryDetail","inventoryDetailModal","inventoryDetailUpdate","insightsInventoryDetailUpdate","manageImages","manageImagesDetail","manageImagesDetailVersion","repositories","learningResources","contentSourcesRepositories","_defineProperty","e","r","defineProperty","value","enumerable","configurable","writable","toPropertyKey","Symbol","toPrimitive","TypeError","String"],"sourceRoot":""}