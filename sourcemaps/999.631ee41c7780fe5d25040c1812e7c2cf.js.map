{"version":3,"file":"js/999.1650488019216.c3a30c50f41ade092cfc.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/constants.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js"],"sourcesContent":["import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport React, { Suspense } from 'react';\nimport { routes as paths } from '../package.json';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { useFeatureFlags } from './constants';\n// const Groups = React.lazy(() =>\n//   import(/* webpackChunkName: \"GroupsPage\" */ './Routes/Groups/Groups')\n// );\n// const GroupsDetail = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/GroupsDetail/GroupsDetail'\n//   )\n// );\n\nconst DeviceDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/DeviceDetail/DeviceDetail'\n  )\n);\n\n// const Canaries = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Canaries/Canaries'\n//   )\n// );\n\nconst Groups = React.lazy(() =>\n  import(/* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Groups/Groups')\n);\n\nconst GroupsDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/GroupsDetail/GroupsDetail'\n  )\n);\n\nconst Inventory = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Devices/Inventory'\n  )\n);\n\nconst Images = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/ImageManager/Images'\n  )\n);\n\nconst ImageDetail = React.lazy(() =>\n  import('./Routes/ImageManagerDetail/ImageDetail')\n);\n\nconst Repositories = React.lazy(() =>\n  import('./Routes/Repositories/Repositories')\n);\n\nconst LearningResources = React.lazy(() =>\n  import('./Routes/LearningResources/LearningResources')\n);\n\nexport const Routes = () => {\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <Switch>\n        <Route exact path={paths.groups} component={Groups} />\n        <Route exact path={paths['groups-detail']} component={GroupsDetail} />\n        {/* <Route path={paths['device-detail']} component={DeviceDetail} /> */}\n        {/* <Route path={paths.canaries} component={Canaries} /> */}\n        <Route exact path={paths['fleet-management']} component={Groups} />\n        <Route\n          exact\n          path={paths['fleet-management-detail']}\n          component={GroupsDetail}\n        />\n        <Route exact path={paths['inventory']} component={Inventory} />\n        <Route path={paths['inventory-detail']} component={DeviceDetail} />\n        <Route\n          path={paths['manage-images-detail-version']}\n          component={ImageDetail}\n        />\n        <Route path={paths['manage-images-detail']} component={ImageDetail} />\n        <Route path={paths['manage-images']} component={Images} />\n\n        {useFeatureFlags('fleet-management.custom-repos') && (\n          <Route exact path={paths['repositories']} component={Repositories} />\n        )}\n        <Route\n          exact\n          path={paths['learning-resources']}\n          component={LearningResources}\n        />\n        <Route>\n          <Redirect to={paths['fleet-management']} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React, { useEffect, Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RegistryContext } from './store';\nimport { Routes } from './Routes';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { NotificationPortal } from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\n\nconst App = (props) => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isLogged, setIsLogged] = useState(false);\n  const history = useHistory();\n  useEffect(() => {\n    insights.chrome.init();\n    // TODO change this to your appname\n    insights.chrome.identifyApp('fleet-management');\n\n    insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    const registered = getRegistry().register({\n      notifications: notificationsReducer,\n    });\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setIsLogged(true);\n    })();\n\n    return () => {\n      registered();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {isLogged ? (\n        <Routes childProps={props} />\n      ) : (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  BellIcon,\n  PauseCircleIcon,\n  CircleNotchIcon,\n  UnknownIcon,\n} from '@patternfly/react-icons';\n\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport successColor from '@patternfly/react-tokens/dist/esm/global_success_color_100';\nimport infoColor from '@patternfly/react-tokens/dist/esm/global_info_color_100';\n\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport const statusMapper = [\n  'done',\n  'error',\n  'pending',\n  'unknown',\n  'updating',\n  'warning',\n  'notification',\n];\n\nexport const statusToIcon = {\n  done: {\n    icon: CheckCircleIcon,\n    color: successColor.value,\n    title: 'Fully adopted',\n  },\n  error: {\n    icon: ExclamationCircleIcon,\n    color: dangerColor.value,\n    title: 'Error while adopting',\n  },\n  pending: { icon: PauseCircleIcon, title: 'Pending adoption' },\n  updating: { icon: CircleNotchIcon, title: 'Updating' },\n  unknown: { icon: UnknownIcon, title: 'Unknown state' },\n  warning: {\n    icon: ExclamationTriangleIcon,\n    color: warningColor.value,\n    title: 'Warning while adopting',\n  },\n  notification: {\n    icon: BellIcon,\n    color: infoColor.value,\n    title: 'Delivering',\n  },\n};\n\nexport const sortByDirection = (data, direction = 'asc') =>\n  data.sort((a, b) =>\n    direction === 'asc'\n      ? a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      : b.name.toLowerCase().localeCompare(a.name.toLowerCase())\n  );\n\nexport const isEmptyFilters = (activeFilters) =>\n  Object.values(activeFilters).find(\n    (item) => item?.value?.length > 0 || item?.length > 0\n  );\n\nexport const constructActiveFilters = (activeFilters, getLabel) =>\n  Object.entries(activeFilters).map(([key, { label, value } = {}]) => ({\n    category: label,\n    chipKey: key,\n    chips:\n      value?.length > 0\n        ? Array.isArray(value)\n          ? value.map((item) => ({\n              name: getLabel?.(item) || item,\n              value: item,\n            }))\n          : [\n              {\n                name: getLabel?.(value) || value,\n                value,\n              },\n            ]\n        : [],\n  }));\n\nexport const onDeleteFilter = (activeFilters, itemsToRemove) => {\n  const currItem = itemsToRemove[0];\n  return {\n    ...activeFilters,\n    [currItem?.chipKey]: {\n      ...(activeFilters[currItem?.chipKey] || {}),\n      value: Array.isArray(activeFilters[currItem?.chipKey]?.value)\n        ? activeFilters[currItem?.chipKey]?.value?.filter(\n            (item) => !currItem?.chips?.find(({ value }) => value === item)\n          )\n        : '',\n    },\n  };\n};\n\nexport const deviceSummaryMapper = [\n  'active',\n  'noReports',\n  'neverReported',\n  'orphaned',\n];\n\nexport const inventoryFields = {\n  system_profile: { host_type: 'edge' },\n};\n\nexport const imageDistributionMapper = {\n  'rhel-8.1': 'RHEL 8.1',\n  'rhel-8.2': 'RHEL 8.2',\n  'rhel-8.3': 'RHEL 8.3',\n};\n\nexport const imageArchMapper = {\n  x86_64: '64bit',\n  arm: 'Arm',\n};\n\nexport const nameValidator = {\n  type: validatorTypes.PATTERN,\n  pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-\\s]*$/,\n  message:\n    'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n};\n\nexport const mapUrlToObj = (url, keys) => {\n  const splitUrl = url.split('/');\n  const obj = {};\n\n  for (let i = 1; i < splitUrl.length; i++) {\n    if (splitUrl[i]) {\n      obj[keys[i - 1]] = splitUrl[i];\n    }\n  }\n\n  obj.buildUrl = function () {\n    return Object.values(this).reduce(\n      (acc, curr) => (typeof curr !== 'function' ? `${acc}/${curr}` : acc),\n      ''\n    );\n  };\n\n  return obj;\n};\n\n//urlString is the string added to the url search param\n//state is a boolean that adds or removes the urlString from the url\nexport const stateToUrlSearch = (urlString, state) => {\n  var searchArray = [];\n  const currentSearchArray =\n    location.search.length > 0\n      ? location.search.includes('&')\n        ? location.search.split('?')[1].split('&')\n        : location.search.split('?').slice(1)\n      : [];\n  if (state) {\n    currentSearchArray.includes(urlString)\n      ? currentSearchArray\n      : currentSearchArray.push(urlString);\n    searchArray = currentSearchArray;\n  } else {\n    searchArray = currentSearchArray.includes(urlString)\n      ? currentSearchArray.filter((e) => e !== urlString)\n      : currentSearchArray;\n  }\n\n  return searchArray.join('&');\n};\n\nexport const emptyStateNoFliters = (isLoading, count, history) =>\n  isLoading !== true &&\n  !count > 0 &&\n  !history.location.search.includes('has_filters=true');\n\nexport const canUpdateSelectedDevices = ({ deviceData, imageData }) =>\n  deviceData?.length > 0 && imageData\n    ? deviceData?.some(\n        (device) => device.imageSetId !== deviceData[0].imageSetId\n      )\n    : true;\n\nexport const useFeatureFlags = (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n\n  return flagsReady ? isFlagEnabled : false;\n};\n","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n"],"names":["DeviceDetail","React","Groups","GroupsDetail","Inventory","Images","ImageDetail","Repositories","LearningResources","Routes","Suspense","fallback","Bullseye","Spinner","size","Switch","Route","exact","path","paths","component","useFeatureFlags","Redirect","to","props","getRegistry","useContext","RegistryContext","useState","isLogged","setIsLogged","history","useHistory","useEffect","insights","chrome","init","identifyApp","on","event","push","navId","registered","register","notifications","notificationsReducer","auth","getUser","Fragment","NotificationPortal","childProps","statusMapper","statusToIcon","done","icon","CheckCircleIcon","color","successColor","title","error","ExclamationCircleIcon","dangerColor","pending","PauseCircleIcon","updating","CircleNotchIcon","unknown","UnknownIcon","warning","ExclamationTriangleIcon","warningColor","notification","BellIcon","infoColor","sortByDirection","data","direction","sort","a","b","name","toLowerCase","localeCompare","nameValidator","type","validatorTypes","pattern","message","mapUrlToObj","url","keys","splitUrl","split","obj","i","length","buildUrl","Object","values","this","reduce","acc","curr","stateToUrlSearch","urlString","state","searchArray","currentSearchArray","location","search","includes","slice","filter","e","join","emptyStateNoFliters","isLoading","count","canUpdateSelectedDevices","deviceData","imageData","some","device","imageSetId","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","hasPollingData","polling","id","fetcher","condition","ofPollingType","endsWith","pollHash","dispatch","next","action","payload","meta","onEvent","setTimeout","then","resp","toContinue","stateName","forEach","createContext","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}