{"version":3,"file":"js/1180.0124bcc2a6b25d5335be.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-styles/css/components/Icon/icon.mjs","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Icon/Icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/filter-icon.js","webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/GroupTable.js","webpack:///./src/Routes/Groups/GroupsLinkAccess.js","webpack:///./src/Routes/Groups/Groups.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/constants/features.js","webpack:///./src/utils/apiWithToast.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/flatten.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import './icon.css';\nexport default {\n  \"icon\": \"pf-c-icon\",\n  \"iconContent\": \"pf-c-icon__content\",\n  \"iconProgress\": \"pf-c-icon__progress\",\n  \"modifiers\": {\n    \"inline\": \"pf-m-inline\",\n    \"sm\": \"pf-m-sm\",\n    \"md\": \"pf-m-md\",\n    \"lg\": \"pf-m-lg\",\n    \"xl\": \"pf-m-xl\",\n    \"inProgress\": \"pf-m-in-progress\",\n    \"danger\": \"pf-m-danger\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"info\": \"pf-m-info\",\n    \"default\": \"pf-m-default\"\n  },\n  \"spinner\": \"pf-c-spinner\"\n};","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Icon/icon';\nimport { css } from '@patternfly/react-styles';\nimport { Spinner } from '../Spinner';\nexport const Icon = (_a) => {\n    var { children, className, progressIcon, size, iconSize, progressIconSize, status, isInline = false, isInProgress = false, defaultProgressArialabel = 'Loading...' } = _a, props = __rest(_a, [\"children\", \"className\", \"progressIcon\", \"size\", \"iconSize\", \"progressIconSize\", \"status\", \"isInline\", \"isInProgress\", \"defaultProgressArialabel\"]);\n    const _progressIcon = progressIcon ? (progressIcon) : (React.createElement(Spinner, { diameter: \"1em\", isSVG: true, \"aria-label\": defaultProgressArialabel }));\n    return (React.createElement(\"span\", Object.assign({ className: css(styles.icon, isInline && styles.modifiers.inline, isInProgress && styles.modifiers.inProgress, styles.modifiers[size], className) }, props),\n        React.createElement(\"span\", { className: css(styles.iconContent, styles.modifiers[iconSize], styles.modifiers[status]) }, children),\n        isInProgress && (React.createElement(\"span\", { className: css(styles.iconProgress, styles.modifiers[progressIconSize], className) }, _progressIcon))));\n};\nIcon.displayName = 'Icon';\n//# sourceMappingURL=Icon.js.map","import { createIcon } from '../createIcon';\n\nexport const FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FilterIcon = createIcon(FilterIconConfig);\n\nexport default FilterIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React, { useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { useHistory, useLocation, useNavigate } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Bullseye, Spinner, Tooltip } from '@patternfly/react-core';\nimport { createLink, useFeatureFlags } from '../../utils';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateDeviceModal\" */ '../Devices/UpdateDeviceModal'\n  )\n);\n\nconst filters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  // {\n  //   label: 'Image',\n  //   type: 'text',\n  // },\n];\n\nconst columns = [\n  { title: 'Name', type: 'name', sort: true },\n  { title: 'Systems', type: 'name', sort: false },\n  { title: 'Image', type: 'name', sort: false },\n];\n\nconst GroupTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  handleCreateModal,\n  handleRenameModal,\n  handleDeleteModal,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n  locationProp,\n  navigateProp,\n  fetchGroups,\n}) => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n\n  const history = useHistory();\n  const { pathname } = locationProp ? locationProp() : useLocation();\n  const currentApplicationPath =\n    window.location.pathname.indexOf('edge') > 0 ? 'edge' : paths.inventory;\n\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n\n  const actionResolver = (rowData) => {\n    if (!rowData?.rowInfo) return [];\n    const { id, title, devices, devicesImageInfo } = rowData.rowInfo;\n    const hasUpdate = devicesImageInfo?.some((image) => image.UpdateAvailable);\n\n    return (\n      id && [\n        {\n          title: 'Rename',\n          onClick: () => handleRenameModal(id, title),\n        },\n        {\n          title: 'Delete',\n          onClick: () => handleDeleteModal(id, title),\n        },\n        {\n          title: 'Update',\n          onClick: () =>\n            setUpdateModal((prevState) => ({\n              ...prevState,\n              deviceData: devices.map((device) => ({\n                id: device.UUID,\n                display_name: device.Name,\n              })),\n              imageId: devices.find((device) => device?.ImageID).ImageID,\n              isOpen: true,\n            })),\n          isDisabled:\n            devices.length > 0\n              ? !(rowData?.rowInfo?.hasValidUpdate && hasUpdate)\n              : true,\n        },\n      ]\n    );\n  };\n\n  const buildRows = data?.map((rowData) => {\n    const { ID, Name, Devices } = rowData.DeviceGroup;\n    let { DevicesImageInfo } = rowData;\n    if (!DevicesImageInfo) {\n      DevicesImageInfo = [];\n    }\n    const systems = Devices ?? [];\n    const image = (\n      <div>\n        <Tooltip\n          content={\n            <div>\n              {DevicesImageInfo.map((device, index) => (\n                <p key={index}>{device.Name}</p>\n              ))}\n            </div>\n          }\n        >\n          <span>Multiple images</span>\n        </Tooltip>\n      </div>\n    );\n\n    return {\n      rowInfo: {\n        id: ID,\n        title: Name,\n        image:\n          DevicesImageInfo.length === 0\n            ? '-'\n            : DevicesImageInfo.length > 1\n            ? 'Multiple images'\n            : DevicesImageInfo[0]?.Name,\n        devicesImageInfo: rowData.DevicesImageInfo,\n        devices: Devices,\n        hasValidUpdate: rowData?.DeviceGroup?.ValidUpdate,\n      },\n      cells: [\n        {\n          title: createLink({\n            pathname:\n              currentApplicationPath === 'edge'\n                ? `edge${paths.fleetManagement}/${ID}`\n                : `insights/inventory/groups/${ID}`,\n            linkText: Name,\n          }),\n        },\n        {\n          title: systems.length,\n        },\n        {\n          title:\n            DevicesImageInfo.length === 0\n              ? '-'\n              : DevicesImageInfo.length > 1\n              ? image\n              : DevicesImageInfo[0]?.Name,\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchGroups}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columns}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        locationProp={locationProp}\n        navigateProp={navigateProp}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        emptyFilterState={{\n          title: 'No matching groups found',\n          body: 'To continue, edit your filter settings and try again',\n        }}\n        toolbarButtons={\n          hideCreateGroupsEnabled\n            ? []\n            : [\n                {\n                  title: 'Create group',\n                  click: handleCreateModal,\n                },\n              ]\n        }\n        hasModalSubmitted={hasModalSubmitted}\n        setHasModalSubmitted={setHasModalSubmitted}\n      />\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              if (navigateProp) {\n                navigate({ pathname });\n              } else {\n                history.push({ pathname });\n              }\n              setUpdateModal((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            refreshTable={async () => {\n              await fetchGroups();\n              setHasModalSubmitted(true);\n            }}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nGroupTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  closeModal: PropTypes.func,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  handleRenameModal: PropTypes.func,\n  handleDeleteModal: PropTypes.func,\n  handleCreateModal: PropTypes.func,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  fetchGroups: PropTypes.func,\n};\n\nexport default GroupTable;\n","import React from 'react';\nimport {\n  Button,\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateBody,\n  EmptyStateSecondaryActions,\n  Icon,\n  TextContent,\n  Text,\n  Title,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\n\nconst GroupsLinkAccess = () => (\n  <>\n    <PageHeader>\n      <TextContent>\n        <Text component=\"h1\" id=\"custom-repos-title\">\n          Groups\n        </Text>\n      </TextContent>\n    </PageHeader>\n\n    <EmptyState id=\"moved-state\">\n      <EmptyStateIcon id=\"external-link-icon\" icon={ExternalLinkAltIcon} />\n      <Title id=\"moved-state-title\" headingLevel=\"h4\" size=\"xl\">\n        Groups have moved\n      </Title>\n      <EmptyStateBody id=\"moved-state-body\">\n        You can now use your groups across the console. Access them on the\n        Insights Groups page.\n      </EmptyStateBody>\n      <Button\n        id=\"moved-state-button\"\n        variant=\"primary\"\n        component=\"a\"\n        target=\"_blank\"\n        href={`https://${window.location.host}/insights/inventory/groups`}\n      >\n        Go to Groups\n      </Button>\n      <EmptyStateSecondaryActions>\n        <Button\n          id=\"moved-state-link\"\n          variant=\"link\"\n          component=\"a\"\n          target=\"_blank\"\n          href=\"https://access.redhat.com/documentation/en-us/red_hat_insights/2023/html/viewing_and_managing_system_inventory/deploying-insights-with-rhca\"\n        >\n          Learn more about Groups\n          <Icon\n            style={{ paddingLeft: '1rem' }}\n            iconSize=\"md\"\n            size=\"lg\"\n            isInline\n          >\n            <ExternalLinkAltIcon />\n          </Icon>\n        </Button>\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </>\n);\n\nexport default GroupsLinkAccess;\n","import React, { useEffect, useState } from 'react';\nimport { Bullseye, Flex, Spinner } from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport GroupTable from './GroupTable';\nimport Empty from '../../components/Empty';\nimport { getGroups } from '../../api/groups';\nimport CreateGroupModal from './CreateGroupModal';\nimport RenameGroupModal from './RenameGroupModal';\nimport DeleteGroupModal from './DeleteGroupModal';\nimport useApi from '../../hooks/useApi';\nimport { emptyStateNoFilters, useFeatureFlags } from '../../utils';\nimport PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport GroupsLinkAccess from './GroupsLinkAccess';\nimport useInventoryGroups from '../../hooks/useInventoryGroups';\n// eslint-disable-next-line react/prop-types\nconst Groups = ({ locationProp, navigateProp, paramsProp }) => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n  const [inventoryGroupsEnabled, enforceEdgeGroupCheckReady] =\n    useInventoryGroups(false);\n\n  const { search } = locationProp ? locationProp() : useLocation();\n\n  const [response, fetchGroups] = useApi({\n    api: getGroups,\n    tableReload: true,\n  });\n  const chrome = useChrome();\n  const { data, isLoading, hasError } = response;\n\n  const [modalState, setModalState] = useState({ id: null, name: '' });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const handleRenameModal = (id, name) => {\n    setModalState({ id, name });\n    setIsRenameModalOpen(true);\n  };\n\n  const handleDeleteModal = (id, name) => {\n    setModalState({ id, name });\n    setIsDeleteModalOpen(true);\n  };\n\n  const reloadData = async () => {\n    await fetchGroups();\n    setHasModalSubmitted(true);\n  };\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.('Groups - Inventory | Edge management');\n  }, [chrome]);\n\n  return (\n    <>\n      {!enforceEdgeGroupCheckReady ? (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      ) : inventoryGroupsEnabled ? (\n        <GroupsLinkAccess />\n      ) : (\n        <>\n          <PageHeader className=\"pf-m-light\">\n            <PageHeaderTitle title=\"Groups\" />\n          </PageHeader>\n          <section className=\"edge-groups pf-l-page__main-section pf-c-page__main-section\">\n            {!emptyStateNoFilters(isLoading, data?.count, search) ? (\n              <GroupTable\n                data={data?.data || []}\n                count={data?.count}\n                isLoading={isLoading}\n                hasError={hasError}\n                handleRenameModal={handleRenameModal}\n                locationProp={locationProp}\n                navigateProp={navigateProp}\n                paramsProp={paramsProp}\n                handleDeleteModal={handleDeleteModal}\n                handleCreateModal={() => setIsCreateModalOpen(true)}\n                hasModalSubmitted={hasModalSubmitted}\n                setHasModalSubmitted={setHasModalSubmitted}\n                fetchGroups={fetchGroups}\n              />\n            ) : (\n              <Flex justifyContent={{ default: 'justifyContentCenter' }}>\n                {hideCreateGroupsEnabled}?{}:\n                <Empty\n                  icon=\"plus\"\n                  title=\"Create a system group\"\n                  body=\"Create system groups to help manage your systems more effectively.\"\n                  primaryAction={{\n                    text: 'Create group',\n                    click: () => setIsCreateModalOpen(true),\n                  }}\n                  secondaryActions={[\n                    {\n                      type: 'link',\n                      title: 'Learn more about system groups',\n                      link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/working_with_systems_in_the_edge_management_application/index',\n                    },\n                  ]}\n                />\n                {}\n              </Flex>\n            )}\n          </section>\n\n          {isCreateModalOpen && (\n            <CreateGroupModal\n              isModalOpen={isCreateModalOpen}\n              setIsModalOpen={setIsCreateModalOpen}\n              reloadData={reloadData}\n            />\n          )}\n          {isRenameModalOpen && (\n            <RenameGroupModal\n              isModalOpen={isRenameModalOpen}\n              setIsModalOpen={setIsRenameModalOpen}\n              reloadData={reloadData}\n              modalState={modalState}\n            />\n          )}\n          {isDeleteModalOpen && (\n            <DeleteGroupModal\n              isModalOpen={isDeleteModalOpen}\n              setIsModalOpen={setIsDeleteModalOpen}\n              reloadData={reloadData}\n              modalState={modalState}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nGroups.propTypes = {\n  pathPrefix: PropTypes.string,\n  historyProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  notificationProp: PropTypes.object,\n  paramsProp: PropTypes.func,\n};\n\nexport default Groups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","export const FEATURE_PARITY_INVENTORY_GROUPS =\n  'edgeParity.inventory-groups-enabled';\n\nexport const FEATURE_HIDE_GROUP_ACTIONS = 'edge-management.hide_groups_actions';\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages, notificationProp) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n  const hasWarning = statusMessages?.onWarning;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasInfo) {\n        if (notificationProp) {\n          notificationProp.hasInfo(statusMessages.onInfo);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              ...statusMessages.onInfo,\n            }),\n          });\n        }\n      }\n      if (hasSuccess) {\n        if (notificationProp) {\n          notificationProp.hasSuccess(statusMessages.onSuccess);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'success',\n              ...statusMessages.onSuccess,\n            }),\n          });\n        }\n      }\n      if (hasWarning) {\n        if (notificationProp) {\n          notificationProp.hasWarning(statusMessages.onWarning);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'warning',\n              ...statusMessages.onWarning,\n            }),\n          });\n        }\n      }\n      return response;\n    } catch (err) {\n      if (notificationProp) {\n        notificationProp.err(statusMessages.onError, err);\n      } else {\n        dispatch({\n          ...addNotification({\n            variant: 'danger',\n            ...statusMessages.onError,\n            // Add error message from API, if present\n            description: err?.Title\n              ? `${statusMessages.onError.description}: ${err.Title}`\n              : statusMessages.onError.description,\n          }),\n        });\n      }\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["Icon","_a","children","className","progressIcon","size","iconSize","progressIconSize","status","isInline","isInProgress","defaultProgressArialabel","props","__rest","_progressIcon","Spinner","diameter","isSVG","Object","assign","displayName","FilterIconConfig","name","height","width","svgPath","yOffset","xOffset","FilterIcon","description","schema","fields","component","componentTypes","label","validate","type","validatorTypes","WarningIcon","color","warningColor","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","modalState","id","dispatch","useDispatch","isOpen","closeModal","title","titleIconVariant","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","deleteGroupById","propTypes","PropTypes","UpdateDeviceModal","React","filters","columns","sort","GroupTable","data","count","isLoading","hasError","handleCreateModal","handleRenameModal","handleDeleteModal","hasModalSubmitted","setHasModalSubmitted","locationProp","navigateProp","fetchGroups","hideCreateGroupsEnabled","useFeatureFlags","history","useHistory","pathname","useLocation","currentApplicationPath","window","location","indexOf","paths","navigate","useNavigate","useState","deviceData","imageData","updateModal","setUpdateModal","buildRows","map","rowData","DeviceGroup","ID","Name","Devices","DevicesImageInfo","systems","image","Tooltip","content","device","index","key","rowInfo","length","devicesImageInfo","devices","hasValidUpdate","ValidUpdate","cells","createLink","linkText","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","rows","actionResolver","hasUpdate","some","UpdateAvailable","onClick","prevState","UUID","display_name","imageId","find","ImageID","isDisabled","areActionsDisabled","defaultSort","direction","emptyFilterState","body","toolbarButtons","click","Suspense","fallback","Bullseye","navigateBack","push","refreshTable","PageHeader","TextContent","Text","EmptyState","EmptyStateIcon","icon","ExternalLinkAltIcon","Title","headingLevel","EmptyStateBody","Button","target","href","host","EmptyStateSecondaryActions","style","paddingLeft","Groups","paramsProp","useInventoryGroups","inventoryGroupsEnabled","enforceEdgeGroupCheckReady","search","useApi","api","getGroups","tableReload","response","chrome","useChrome","setModalState","isCreateModalOpen","setIsCreateModalOpen","isRenameModalOpen","setIsRenameModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","useEffect","updateDocumentTitle","PageHeaderTitle","emptyStateNoFilters","Flex","justifyContent","default","Empty","primaryAction","text","secondaryActions","link","CreateGroupModal","RenameGroupModal","pathPrefix","historyProp","notificationProp","asyncGroupNameValidation","value","validateGroupName","isValid","createGroupSchema","helperText","isRequired","threshold","nameValidator","initialValues","values","updateGroupById","FEATURE_PARITY_INVENTORY_GROUPS","FEATURE_HIDE_GROUP_ACTIONS","hasSuccess","hasInfo","onInfo","hasWarning","onWarning","fetchData","addNotification","err","trimmedEndIndex","reTrimStart","module","exports","string","slice","replace","reWhitespace","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","undefined","apply","leadingEdge","setTimeout","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","baseFlatten","array","baseAssignValue","createAggregator","hasOwnProperty","prototype","groupBy","call","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","_iterableToArray","iter","Symbol","iterator","Array","from","_toConsumableArray","arr","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray"],"sourceRoot":""}