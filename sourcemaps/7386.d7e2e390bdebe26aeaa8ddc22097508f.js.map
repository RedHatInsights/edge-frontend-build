{"version":3,"file":"js/7386.568bc2ed89f76855f9ca.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Label/Label.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Split/Split.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/layouts/Split/SplitItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.mjs","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Split/split.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Routes/ImageManager/ImageSetsTable.js","webpack:///./src/Routes/ImageManagerDetail/utils.js","webpack:///./src/constants/status.js","webpack:///./src/components/Status.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { useState } from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label';\nimport labelGrpStyles from '@patternfly/react-styles/css/components/LabelGroup/label-group';\nimport { Button } from '../Button';\nimport { Tooltip } from '../Tooltip';\nimport { css } from '@patternfly/react-styles';\nimport TimesIcon from '@patternfly/react-icons/dist/esm/icons/times-icon';\nimport { useIsomorphicLayoutEffect } from '../../helpers';\nconst colorStyles = {\n    blue: styles.modifiers.blue,\n    cyan: styles.modifiers.cyan,\n    green: styles.modifiers.green,\n    orange: styles.modifiers.orange,\n    purple: styles.modifiers.purple,\n    red: styles.modifiers.red,\n    gold: styles.modifiers.gold,\n    grey: ''\n};\nexport const Label = (_a) => {\n    var { children, className = '', color = 'grey', variant = 'filled', isCompact = false, isEditable = false, editableProps, isTruncated = false, tooltipPosition, icon, onClose, onEditCancel, onEditComplete, closeBtn, closeBtnAriaLabel, closeBtnProps, href, isOverflowLabel, render } = _a, props = __rest(_a, [\"children\", \"className\", \"color\", \"variant\", \"isCompact\", \"isEditable\", \"editableProps\", \"isTruncated\", \"tooltipPosition\", \"icon\", \"onClose\", \"onEditCancel\", \"onEditComplete\", \"closeBtn\", \"closeBtnAriaLabel\", \"closeBtnProps\", \"href\", \"isOverflowLabel\", \"render\"]);\n    const [isEditableActive, setIsEditableActive] = useState(false);\n    const [currValue, setCurrValue] = useState(children);\n    const editableButtonRef = React.useRef();\n    const editableInputRef = React.useRef();\n    React.useEffect(() => {\n        document.addEventListener('mousedown', onDocMouseDown);\n        document.addEventListener('keydown', onKeyDown);\n        return () => {\n            document.removeEventListener('mousedown', onDocMouseDown);\n            document.removeEventListener('keydown', onKeyDown);\n        };\n    });\n    const onDocMouseDown = (event) => {\n        if (isEditableActive &&\n            editableInputRef &&\n            editableInputRef.current &&\n            !editableInputRef.current.contains(event.target)) {\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n        }\n    };\n    const onKeyDown = (event) => {\n        var _a, _b;\n        const key = event.key;\n        if ((!isEditableActive &&\n            (!editableButtonRef ||\n                !editableButtonRef.current ||\n                !editableButtonRef.current.contains(event.target))) ||\n            (isEditableActive &&\n                (!editableInputRef || !editableInputRef.current || !editableInputRef.current.contains(event.target)))) {\n            return;\n        }\n        if (isEditableActive && (key === 'Enter' || key === 'Tab')) {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            if (editableInputRef.current.value) {\n                onEditComplete && onEditComplete(editableInputRef.current.value);\n            }\n            setIsEditableActive(false);\n            (_a = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n        if (isEditableActive && key === 'Escape') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            // Reset div text to initial children prop - pre-edit\n            if (editableInputRef.current.value) {\n                editableInputRef.current.value = children;\n                onEditCancel && onEditCancel(children);\n            }\n            setIsEditableActive(false);\n            (_b = editableButtonRef === null || editableButtonRef === void 0 ? void 0 : editableButtonRef.current) === null || _b === void 0 ? void 0 : _b.focus();\n        }\n        if (!isEditableActive && key === 'Enter') {\n            event.preventDefault();\n            event.stopImmediatePropagation();\n            setIsEditableActive(true);\n            // Set cursor position to end of text\n            const el = event.target;\n            const range = document.createRange();\n            const sel = window.getSelection();\n            range.selectNodeContents(el);\n            range.collapse(false);\n            sel.removeAllRanges();\n            sel.addRange(range);\n        }\n    };\n    const LabelComponent = (isOverflowLabel ? 'button' : 'span');\n    const button = closeBtn ? (closeBtn) : (React.createElement(Button, Object.assign({ type: \"button\", variant: \"plain\", onClick: onClose, \"aria-label\": closeBtnAriaLabel || `Close ${children}` }, closeBtnProps),\n        React.createElement(TimesIcon, null)));\n    const textRef = React.createRef();\n    // ref to apply tooltip when rendered is used\n    const componentRef = React.useRef();\n    const [isTooltipVisible, setIsTooltipVisible] = React.useState(false);\n    useIsomorphicLayoutEffect(() => {\n        const currTextRef = isEditable ? editableButtonRef : textRef;\n        if (!isEditableActive) {\n            setIsTooltipVisible(currTextRef.current && currTextRef.current.offsetWidth < currTextRef.current.scrollWidth);\n        }\n    }, [isEditableActive]);\n    const content = (React.createElement(React.Fragment, null,\n        icon && React.createElement(\"span\", { className: css(styles.labelIcon) }, icon),\n        isTruncated && (React.createElement(\"span\", { ref: textRef, className: css(styles.labelText) }, children)),\n        !isTruncated && children));\n    React.useEffect(() => {\n        if (isEditableActive && editableInputRef) {\n            editableInputRef.current && editableInputRef.current.focus();\n        }\n    }, [editableInputRef, isEditableActive]);\n    const updateVal = () => {\n        setCurrValue(editableInputRef.current.value);\n    };\n    let labelComponentChild = React.createElement(\"span\", { className: css(styles.labelContent) }, content);\n    if (href) {\n        labelComponentChild = (React.createElement(\"a\", { className: css(styles.labelContent), href: href }, content));\n    }\n    else if (isEditable) {\n        labelComponentChild = (React.createElement(\"button\", Object.assign({ ref: editableButtonRef, className: css(styles.labelContent), onClick: (e) => {\n                setIsEditableActive(true);\n                e.stopPropagation();\n            } }, editableProps), content));\n    }\n    if (render) {\n        labelComponentChild = (React.createElement(React.Fragment, null,\n            isTooltipVisible && React.createElement(Tooltip, { reference: componentRef, content: children, position: tooltipPosition }),\n            render({\n                className: styles.labelContent,\n                content,\n                componentRef\n            })));\n    }\n    else if (isTooltipVisible) {\n        labelComponentChild = (React.createElement(Tooltip, { content: children, position: tooltipPosition }, labelComponentChild));\n    }\n    return (React.createElement(LabelComponent, Object.assign({}, props, { className: css(styles.label, colorStyles[color], variant === 'outline' && styles.modifiers.outline, isOverflowLabel && styles.modifiers.overflow, isCompact && styles.modifiers.compact, isEditable && labelGrpStyles.modifiers.editable, isEditableActive && styles.modifiers.editableActive, className) }),\n        !isEditableActive && labelComponentChild,\n        !isEditableActive && onClose && button,\n        isEditableActive && (React.createElement(\"input\", Object.assign({ className: css(styles.labelContent), type: \"text\", id: \"editable-input\", ref: editableInputRef, value: currValue, onChange: updateVal }, editableProps)))));\n};\nLabel.displayName = 'Label';\n//# sourceMappingURL=Label.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Split/split';\nimport { css } from '@patternfly/react-styles';\nexport const Split = (_a) => {\n    var { hasGutter = false, isWrappable = false, className = '', children = null, component = 'div' } = _a, props = __rest(_a, [\"hasGutter\", \"isWrappable\", \"className\", \"children\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(styles.split, hasGutter && styles.modifiers.gutter, isWrappable && styles.modifiers.wrap, className) }), children));\n};\nSplit.displayName = 'Split';\n//# sourceMappingURL=Split.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/layouts/Split/split';\nimport { css } from '@patternfly/react-styles';\nexport const SplitItem = (_a) => {\n    var { isFilled = false, className = '', children = null } = _a, props = __rest(_a, [\"isFilled\", \"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.splitItem, isFilled && styles.modifiers.fill, className) }), children));\n};\nSplitItem.displayName = 'SplitItem';\n//# sourceMappingURL=SplitItem.js.map","import './label.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"labelText\": \"pf-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"labelGroup\": \"pf-c-label-group\",\n  \"labelGroupClose\": \"pf-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-c-label-group__label\",\n  \"labelGroupList\": \"pf-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","import './split.css';\nexport default {\n  \"modifiers\": {\n    \"wrap\": \"pf-m-wrap\",\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"split\": \"pf-l-split\",\n  \"splitItem\": \"pf-l-split__item\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { createLink } from '../../utils';\nimport { Tooltip } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { cellWidth } from '@patternfly/react-table';\nimport CustomEmptyState from '../../components/Empty';\nimport { useLocation, useHistory, useNavigate } from 'react-router-dom';\nimport { emptyStateNoFilters } from '../../utils';\nimport Status from '../../components/Status';\nimport { getBaseURLFromPrefixAndName } from '../ImageManagerDetail/utils';\nimport { distributionMapper } from '../../constants';\n\nconst TooltipSelectorRef = ({ index }) => (\n  <div>\n    <Tooltip\n      content={<div>More options</div>}\n      reference={() =>\n        document.getElementById(`pf-dropdown-toggle-id-${index}`)\n      }\n    />\n  </div>\n);\n\nTooltipSelectorRef.propTypes = {\n  index: PropTypes.number,\n};\n\nconst defaultFilters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  {\n    label: 'Status',\n    type: 'checkbox',\n    options: [\n      { option: 'Building', value: 'BUILDING' },\n      { option: 'Created', value: 'CREATED' },\n      { option: 'Error', value: 'ERROR' },\n      { option: 'Ready', value: 'SUCCESS' },\n    ],\n  },\n];\n\nconst columnNames = [\n  {\n    title: 'Name',\n    type: 'name',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Version',\n    type: 'version',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Release',\n    type: 'distribution',\n    options: distributionMapper,\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Target',\n    type: 'outputTypes',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Status',\n    type: 'status',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Created/Updated',\n    type: 'updated_at',\n    sort: true,\n    columnTransforms: [cellWidth(35)],\n  },\n];\nconst createRows = (data, baseURL, history, navigate) => {\n  return data.map((image_set, index) => ({\n    rowInfo: {\n      id: image_set?.ID,\n      imageStatus: image_set?.Status,\n      distribution: image_set?.Distribution,\n      outputType: image_set?.OutputTypes,\n      isoURL: image_set?.ImageBuildIsoURL || null,\n      latestImageID: image_set?.ImageID,\n    },\n    cells: [\n      {\n        title: createLink({\n          pathname: `${baseURL}/${image_set?.ID}`,\n          linkText: image_set?.Name,\n          history,\n          navigate,\n        }),\n      },\n\n      image_set?.Version,\n      {\n        title: distributionMapper[image_set?.Distribution],\n      },\n      image_set?.OutputTypes.length == 2\n        ? 'Bare Metal Installer'\n        : 'Update Only',\n      {\n        title: (\n          <>\n            {/* workaround for tooltip on kebab*/}\n            <TooltipSelectorRef index={index} />\n            <Status type={image_set?.Status.toLowerCase()} />\n          </>\n        ),\n      },\n      {\n        title: image_set?.UpdatedAt ? (\n          <DateFormat date={image_set?.UpdatedAt} />\n        ) : (\n          'Unknown'\n        ),\n      },\n    ],\n  }));\n};\n\nconst ImageTable = ({\n  pathPrefix,\n  urlName,\n  historyProp,\n  locationProp,\n  navigateProp,\n  data,\n  count,\n  isLoading,\n  hasError,\n  fetchImageSets,\n  openCreateWizard,\n  openUpdateWizard,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n}) => {\n  const { search } = locationProp\n    ? locationProp()\n    : useLocation\n    ? useLocation()\n    : null;\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n  const actionResolver = (rowData) => {\n    const actionsArray = [];\n    if (rowData.rowInfo?.isoURL) {\n      actionsArray.push({\n        title: 'Download',\n        onClick: (_event, _rowId, rowData) => {\n          window.open(rowData.rowInfo?.isoURL);\n        },\n      });\n    }\n\n    if (\n      rowData.rowInfo?.imageStatus === 'SUCCESS' ||\n      rowData.rowInfo?.imageStatus === 'ERROR'\n    ) {\n      actionsArray.push({\n        title: 'Update Image',\n        onClick: (_event, _rowId, rowData) => {\n          openUpdateWizard(rowData.rowInfo?.latestImageID);\n        },\n      });\n    }\n\n    if (rowData.rowInfo?.imageStatus === 'BUILDING' && rowData.rowInfo?.id) {\n      actionsArray.push({\n        title: '',\n      });\n    }\n\n    return actionsArray;\n  };\n\n  const areActionsDisabled = (rowData) =>\n    rowData.rowInfo?.imageStatus === 'BUILDING';\n\n  const baseURL = getBaseURLFromPrefixAndName(\n    paths.manageImages,\n    pathPrefix,\n    urlName\n  );\n\n  return (\n    <>\n      {emptyStateNoFilters(isLoading, count, search) ? (\n        <CustomEmptyState\n          data-testid=\"general-table-empty-state-no-data\"\n          icon={'plus'}\n          title={'Create an OSTree image'}\n          body={\n            'Use the image builder tool to compose ' +\n            'customized RHEL (rpm-ostree) images optimized for Edge.' +\n            ' Then, you can remotely install, and securely manage and' +\n            ' scale deployments of the images on Edge servers.'\n          }\n          primaryAction={{\n            click: openCreateWizard,\n            text: 'Create new image',\n          }}\n          secondaryActions={[\n            {\n              type: 'link',\n              title: 'RHEL for Edge image documentation',\n              link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html/create_rhel_for_edge_images_and_configure_automated_management/index',\n            },\n          ]}\n        />\n      ) : (\n        <GeneralTable\n          apiFilterSort={true}\n          historyProp={historyProp}\n          locationProp={locationProp}\n          navigateProp={navigateProp}\n          isUseApi={true}\n          filters={defaultFilters}\n          loadTableData={fetchImageSets}\n          tableData={{ count, data, isLoading, hasError }}\n          columnNames={columnNames}\n          rows={data ? createRows(data, baseURL, history, navigate) : []}\n          actionResolver={actionResolver}\n          areActionsDisabled={areActionsDisabled}\n          defaultSort={{ index: 5, direction: 'desc' }}\n          toolbarButtons={[\n            {\n              title: 'Create new image',\n              click: () => openCreateWizard(),\n            },\n          ]}\n          hasModalSubmitted={hasModalSubmitted}\n          setHasModalSubmitted={setHasModalSubmitted}\n        />\n      )}\n    </>\n  );\n};\n\nImageTable.propTypes = {\n  pathPrefix: PropTypes.string,\n  urlName: PropTypes.string,\n  historyProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  data: PropTypes.array,\n  count: PropTypes.number,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  fetchImageSets: PropTypes.func,\n  clearFilters: PropTypes.func,\n  openCreateWizard: PropTypes.func,\n  openUpdateWizard: PropTypes.func,\n  filters: PropTypes.array,\n  pagination: PropTypes.shape({\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n  }),\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n};\n\nexport default ImageTable;\n","const getBaseURLFromPrefixAndName = (defaultBaseURL, pathPrefix, urlName) => {\n  let baseURL = defaultBaseURL;\n  if (pathPrefix || urlName) {\n    let urlNames = [];\n    if (pathPrefix) {\n      urlNames.push(pathPrefix);\n    }\n    if (urlName) {\n      urlNames.push(urlName);\n    }\n    baseURL = urlNames.join('/');\n  }\n  return baseURL;\n};\n\nconst restorePrefixURL = (url, pathPrefix) => {\n  const separator = '/';\n  if (!pathPrefix || url.startsWith(pathPrefix)) {\n    return url;\n  }\n  if (pathPrefix.endsWith(separator) || url.startsWith(separator)) {\n    return [pathPrefix, url].join('');\n  }\n  return [pathPrefix, url].join(separator);\n};\n\nexport { getBaseURLFromPrefixAndName, restorePrefixURL };\n","import { iconMapper, colorMapper } from './index';\n\nexport const statusMapper = {\n  booting: {\n    text: 'Booting',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  building: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  created: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  upToDate: {\n    text: 'Up to date',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  success: {\n    text: 'Ready',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  passed: {\n    text: 'Passed',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  updateAvailable: {\n    text: 'Update available',\n    Icon: iconMapper.exclamationTriangle,\n    color: colorMapper.yellow,\n    labelColor: 'orange',\n  },\n  updating: {\n    text: 'Updating',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  error: {\n    text: 'Error',\n    Icon: iconMapper.timesCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  default: {\n    text: 'Unknown',\n    Icon: iconMapper.unknown,\n  },\n  interrupted: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  unresponsive: {\n    text: 'Unresponsive',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  errorWithExclamationCircle: {\n    text: 'Error',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Tooltip, Split, SplitItem } from '@patternfly/react-core';\nimport { statusMapper } from '../constants/status';\n\nexport const getDeviceStatus = (\n  deviceStatus,\n  isUpdateAvailable,\n  dispatcherStatus\n) =>\n  dispatcherStatus === 'ERROR'\n    ? 'error'\n    : dispatcherStatus === 'UNRESPONSIVE'\n    ? 'unresponsive'\n    : deviceStatus === 'UPDATING'\n    ? 'updating'\n    : isUpdateAvailable\n    ? 'updateAvailable'\n    : 'upToDate';\n\nconst Status = ({\n  id,\n  type,\n  isLabel = false,\n  toolTipContent = '',\n  className = '',\n  isLink,\n}) => {\n  const { text, Icon, color, labelColor } =\n    Object.prototype.hasOwnProperty.call(statusMapper, type)\n      ? statusMapper[type]\n      : statusMapper['default'];\n\n  return (\n    <>\n      {isLabel ? (\n        <Label id={id} color={labelColor} icon={<Icon />} className={className}>\n          {text}\n        </Label>\n      ) : (\n        <Split id={id} style={{ color }} className={className}>\n          <SplitItem className=\"pf-u-mr-sm\">\n            {toolTipContent ? (\n              <Tooltip content=\"blargh\">\n                <Icon />\n              </Tooltip>\n            ) : (\n              <Icon />\n            )}\n          </SplitItem>\n          <SplitItem>\n            <p\n              style={\n                isLink\n                  ? {\n                      textDecoration: ' grey dotted underline',\n                      cursor: 'pointer',\n                    }\n                  : {}\n              }\n            >\n              {text}\n            </p>\n          </SplitItem>\n        </Split>\n      )}\n    </>\n  );\n};\n\nexport default Status;\n\nStatus.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  isLabel: PropTypes.bool,\n  toolTipContent: PropTypes.string,\n  className: PropTypes.string,\n  isLink: PropTypes.bool,\n};\n\nStatus.defaultProps = {\n  id: 'status',\n};\n"],"names":["colorStyles","blue","cyan","green","orange","purple","red","gold","grey","Label","_a","children","className","color","variant","isCompact","isEditable","editableProps","isTruncated","tooltipPosition","icon","onClose","onEditCancel","onEditComplete","closeBtn","closeBtnAriaLabel","closeBtnProps","href","isOverflowLabel","render","props","__rest","isEditableActive","setIsEditableActive","useState","currValue","setCurrValue","editableButtonRef","editableInputRef","document","addEventListener","onDocMouseDown","onKeyDown","removeEventListener","event","current","contains","target","value","_b","key","preventDefault","stopImmediatePropagation","focus","el","range","createRange","sel","window","getSelection","selectNodeContents","collapse","removeAllRanges","addRange","LabelComponent","button","Object","assign","type","onClick","textRef","componentRef","isTooltipVisible","setIsTooltipVisible","currTextRef","offsetWidth","scrollWidth","content","ref","labelComponentChild","e","stopPropagation","reference","position","id","onChange","displayName","Split","hasGutter","isWrappable","component","Component","SplitItem","isFilled","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","addTooltip","dateObj","dateType","toString","TooltipSelectorRef","index","getElementById","propTypes","PropTypes","defaultFilters","label","options","option","columnNames","title","sort","columnTransforms","cellWidth","distributionMapper","createRows","data","baseURL","history","navigate","map","image_set","rowInfo","ID","imageStatus","Status","distribution","Distribution","outputType","OutputTypes","isoURL","ImageBuildIsoURL","latestImageID","ImageID","cells","createLink","pathname","linkText","Name","Version","toLowerCase","UpdatedAt","ImageTable","pathPrefix","urlName","historyProp","locationProp","navigateProp","count","isLoading","hasError","fetchImageSets","openCreateWizard","openUpdateWizard","hasModalSubmitted","setHasModalSubmitted","search","useLocation","useHistory","useNavigate","getBaseURLFromPrefixAndName","paths","emptyStateNoFilters","body","primaryAction","click","text","secondaryActions","link","apiFilterSort","isUseApi","filters","loadTableData","tableData","rows","actionResolver","rowData","actionsArray","push","_event","_rowId","open","areActionsDisabled","defaultSort","direction","toolbarButtons","clearFilters","pagination","page","perPage","defaultBaseURL","urlNames","join","restorePrefixURL","url","startsWith","endsWith","statusMapper","booting","Icon","iconMapper","colorMapper","labelColor","building","created","upToDate","success","passed","updateAvailable","updating","error","default","interrupted","unresponsive","errorWithExclamationCircle","getDeviceStatus","deviceStatus","isUpdateAvailable","dispatcherStatus","isLabel","toolTipContent","isLink","style","textDecoration","cursor","defaultProps"],"sourceRoot":""}