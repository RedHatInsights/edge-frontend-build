{"version":3,"file":"js/508.1651612861970.e71f64b61bd09a54fc29.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/Repositories/modals/AddModal.js","webpack:///./src/Routes/Repositories/modals/EditModal.js","webpack:///./src/Routes/Repositories/modals/RemoveModal.js","webpack:///./src/Routes/Repositories/TableHeader.js","webpack:///./src/Routes/Repositories/RepositoryTable.js","webpack:///./src/Routes/Repositories/RepositoryHeader.js","webpack:///./src/Routes/Repositories/Repositories.js","webpack:///./src/components/Modal.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { createCustomRepository } from '../../../api/index';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { nameValidator } from '../../../constants';\n\nconst AddModal = ({ isOpen, openModal, reloadData }) => {\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label:\n          'Link to a custom repository to add packages to RHEL for Edge images.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }, nameValidator],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: 'Enter the baseURL for the custom repository.',\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Add repository\"\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'add' })}\n      submitLabel=\"Add\"\n      schema={addSchema}\n      onSubmit={(values) => createCustomRepository(values)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nAddModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.boo,\n};\n\nexport default AddModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { HelperText, HelperTextItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { editCustomRepository } from '../../../api/index';\n\nconst EditModal = ({ openModal, isOpen, id, name, baseURL, reloadData }) => {\n  const editSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label: 'Update information about this custom repository.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: (\n          <HelperText hasIcon>\n            <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n              If you change the repo URL, you may not have access to the\n              packages that were used to build images that reference this\n              repository.\n            </HelperTextItem>\n          </HelperText>\n        ),\n\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Edit repository\"\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'edit' })}\n      submitLabel=\"Update\"\n      schema={editSchema}\n      initialValues={{ id, name, baseURL }}\n      onSubmit={(values) => editCustomRepository(values)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nEditModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.boo,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default EditModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport PropTypes from 'prop-types';\nimport { removeCustomRepository } from '../../../api/index';\n\nconst LabelWithText = ({ label, text }) => {\n  return (\n    <TextContent>\n      <Text component={'b'}>{label}</Text>\n      <Text>{text}</Text>\n    </TextContent>\n  );\n};\n\nLabelWithText.propTypes = {\n  label: PropTypes.string,\n  text: PropTypes.string,\n};\n\nconst RemoveModal = ({ openModal, id, isOpen, name, baseURL, reloadData }) => {\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'description',\n        label:\n          'Removing a repository could affect your ability to update images.',\n      },\n      {\n        component: 'plain-text',\n        name: 'name',\n        label: <LabelWithText label=\"Name\" text={name} />,\n      },\n      {\n        component: 'plain-text',\n        name: 'baseURL',\n        label: <LabelWithText label=\"baseURL\" text={baseURL} />,\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title={\n        <>\n          <ExclamationTriangleIcon\n            color={warningColor.value}\n            className=\"pf-u-mr-md\"\n          />\n          Remove repository\n        </>\n      }\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'remove' })}\n      submitLabel=\"Remove\"\n      schema={addSchema}\n      initialValues={{ id }}\n      variant=\"danger\"\n      onSubmit={({ id }) => removeCustomRepository(id)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRemoveModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.boo,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default RemoveModal;\n","import React from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n//import { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\n\nconst Header = () => {\n  return (\n    <TextContent style={{ padding: '15px', backgroundColor: 'white' }}>\n      <Text component={TextVariants.h1}>Custom repositories</Text>\n      <Text component={TextVariants.p}>\n        Add custom repositories to build RHEL for Edge images with additional\n        packages.{' '}\n        {/*<Text\n          style={{ display: 'inline' }}\n          component={TextVariants.small}\n          href=\"#\"\n        >\n          <Text component={TextVariants.a} href=\"#\">\n            Learn more\n            <ExternalLinkAltIcon size=\"sm\" className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>*/}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst RepositoryTable = ({ data, openModal }) => {\n  const actionResolver = (rowData) => {\n    if (!rowData.rowInfo) {\n      return [];\n    }\n    const { id, repoName, repoBaseURL } = rowData.rowInfo;\n    return [\n      {\n        title: 'Edit',\n        onClick: () =>\n          openModal({\n            type: 'edit',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n      {\n        title: 'Remove',\n        onClick: () =>\n          openModal({\n            type: 'remove',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n    ];\n  };\n\n  const buildRows = data.map(({ id, name, baseURL }) => {\n    return {\n      rowInfo: {\n        id: id,\n        repoName: name,\n        repoBaseURL: baseURL,\n      },\n      noApiSortFilter: [name, baseURL],\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                {name}\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={baseURL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {baseURL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    };\n  });\n\n  return (\n    <GeneralTable\n      apiFilterSort={false}\n      filters={filters}\n      tableData={{\n        count: data.length,\n        data,\n        isLoading: false,\n        hasError: false,\n      }}\n      columnNames={[{ title: 'Name', type: 'name', sort: true }]}\n      rows={buildRows}\n      actionResolver={actionResolver}\n      areActionsDisabled={() => false}\n      defaultSort={{ index: 0, direction: 'asc' }}\n      toolbarButtons={[\n        {\n          title: 'Add repository',\n          click: () => openModal({ type: 'add' }),\n        },\n      ]}\n    />\n  );\n};\nRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  openModal: PropTypes.func,\n};\n\nexport default RepositoryTable;\n","import React from 'react';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Popover } from '@patternfly/react-core';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\n//import { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\n\nconst RepositoryHeader = () => {\n  return (\n    <PageHeader>\n      <>\n        <PageHeaderTitle title=\"Applications settings\" />\n        <p className=\"pf-u-mt-sm\">\n          Settings for Edge Management\n          <Popover\n            aria-label=\"Basic popover\"\n            headerContent={<div>About Edge Management</div>}\n            bodyContent={\n              <div>\n                Edge Management is a service that allows you to provision,\n                update and maintain edge systems.\n              </div>\n            }\n            //footerContent={\n            //  <Button variant=\"link\" style={{ 'padding-left': 0 }}>\n            //    <a href=\"#\">Documentation</a>\n            //    <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n            //  </Button>\n            //}\n          >\n            <QuestionCircleIcon\n              style={{ cursor: 'pointer' }}\n              className=\"pf-u-ml-xs\"\n              data-testid=\"test-pop-over\"\n            />\n          </Popover>\n        </p>\n      </>\n    </PageHeader>\n  );\n};\n\nexport default RepositoryHeader;\n","import React, { useEffect, useState } from 'react';\nimport EmptyState from '../../components/Empty';\nimport AddModal from './modals/AddModal';\nimport EditModal from './modals/EditModal';\nimport RemoveModal from './modals/RemoveModal';\nimport TableHeader from './TableHeader';\nimport RepositoryTable from './RepositoryTable';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport RepositoryHeader from './RepositoryHeader';\nimport { getCustomRepositories } from '../../api/index';\nimport { Skeleton } from '@patternfly/react-core';\n\nconst Repository = () => {\n  const [data, setData] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const [modalDetails, setModalDetails] = useState({\n    isOpen: {\n      add: false,\n      edit: false,\n      remove: false,\n    },\n    id: null,\n    name: '',\n    baseURL: '',\n  });\n\n  const openModal = ({ type, id = null, name = '', baseURL = '' }) => {\n    setModalDetails((prevState) => ({\n      ...prevState,\n      id,\n      name,\n      baseURL,\n      isOpen: {\n        ...prevState.isOpen,\n        [type]: !prevState.isOpen[type],\n      },\n    }));\n  };\n\n  const reloadData = async () => {\n    const repos = await getCustomRepositories();\n    setData(\n      repos.data.map((repo) => ({\n        id: repo.ID,\n        name: repo.Name,\n        baseURL: repo.URL,\n        ...repo,\n      }))\n    );\n    setLoaded(true);\n  };\n\n  useEffect(() => reloadData(), []);\n\n  return (\n    <>\n      <RepositoryHeader />\n      <Main>\n        {loaded ? (\n          data.length > 0 ? (\n            <>\n              <TableHeader />\n              <RepositoryTable data={data} openModal={openModal} />\n            </>\n          ) : (\n            <EmptyState\n              icon=\"repository\"\n              title=\"Add a custom repository\"\n              body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n              primaryAction={{\n                text: 'Add repository',\n                click: () => openModal({ type: 'add' }),\n              }}\n              secondaryActions={\n                [\n                  //{\n                  //  title: 'Learn more about custom repositories',\n                  //  type: 'link',\n                  //  link: '#',\n                  //},\n                ]\n              }\n            />\n          )\n        ) : (\n          <Skeleton />\n        )}\n        <AddModal\n          isOpen={modalDetails.isOpen.add}\n          openModal={openModal}\n          reloadData={reloadData}\n        />\n        <EditModal\n          isOpen={modalDetails.isOpen.edit}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          openModal={openModal}\n          reloadData={reloadData}\n        />\n        <RemoveModal\n          isOpen={modalDetails.isOpen.remove}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          openModal={openModal}\n          reloadData={reloadData}\n        />\n      </Main>\n    </>\n  );\n};\n\nexport default Repository;\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  openModal, // should be closeModal, update here and other places that use it\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={openModal}\n    >\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          openModal();\n        }}\n        onCancel={() => openModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n};\n\nexport default RepoModal;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","AddModal","isOpen","openModal","reloadData","addSchema","fields","component","label","placeholder","helperText","isRequired","validate","type","validatorTypes","nameValidator","message","Modal","submitLabel","schema","onSubmit","values","createCustomRepository","PropTypes","EditModal","id","baseURL","editSchema","HelperText","hasIcon","HelperTextItem","variant","initialValues","editCustomRepository","setData","LabelWithText","text","TextContent","Text","RemoveModal","color","warningColor","removeCustomRepository","style","padding","backgroundColor","TextVariants","filters","RepositoryTable","data","buildRows","map","rowInfo","repoName","repoBaseURL","noApiSortFilter","cells","href","target","rel","GeneralTable","apiFilterSort","tableData","count","length","isLoading","hasError","columnNames","sort","rows","actionResolver","rowData","onClick","areActionsDisabled","defaultSort","index","direction","toolbarButtons","click","PageHeader","Popover","headerContent","bodyContent","cursor","useState","loaded","setLoaded","add","edit","remove","modalDetails","setModalDetails","prevState","getCustomRepositories","repos","repo","ID","Name","URL","useEffect","Main","TableHeader","Empty","icon","body","primaryAction","secondaryActions","Skeleton","RepoModal","titleIconVariant","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel"],"sourceRoot":""}