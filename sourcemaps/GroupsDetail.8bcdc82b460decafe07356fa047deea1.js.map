{"version":3,"file":"js/GroupsDetail.f06f49868e87b691b0e7.js","mappings":"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","sources":["webpack:///./node_modules/@data-driven-forms/pf4-component-mapper/esm/dual-list-context/dual-list-context.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/parse-condition/parse-condition.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/Routes/Devices/AddSystemsToGroupModal.js","webpack:///./src/Routes/GroupsDetail/GroupsDetail.js","webpack:///./node_modules/lodash/isEmpty.js"],"sourcesContent":["import { createContext } from 'react';\nvar DualListContext = /*#__PURE__*/createContext({});\nexport default DualListContext;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport lodashIsEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nvar isEmptyValue = function isEmptyValue(value) {\n  return typeof value === 'number' || value === true ? false : lodashIsEmpty(value);\n};\n\nvar fieldCondition = function fieldCondition(value, config) {\n  if (config.isNotEmpty) {\n    return !isEmptyValue(value);\n  }\n\n  if (config.isEmpty) {\n    return isEmptyValue(value);\n  }\n\n  if (config.pattern) {\n    var regExpPattern = RegExp(config.pattern, config.flags);\n    return config.notMatch ? !regExpPattern.test(value) : regExpPattern.test(value);\n  }\n\n  if (typeof config.is === 'function') {\n    return config.is(value, config);\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThan')) {\n    return value > config.greaterThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThanOrEqualTo')) {\n    return value >= config.greaterThanOrEqualTo;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThan')) {\n    return value < config.lessThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThanOrEqualTo')) {\n    return value <= config.lessThanOrEqualTo;\n  }\n\n  var isMatched = Array.isArray(config.is) ? !!config.is.includes(value) : value === config.is;\n  return config.notMatch ? !isMatched : isMatched;\n};\n\nexport var parseCondition = function parseCondition(condition, values, field) {\n  var positiveResult = _objectSpread(_objectSpread({\n    visible: true\n  }, condition.then), {}, {\n    result: true\n  });\n\n  var negativeResult = _objectSpread(_objectSpread({\n    visible: false\n  }, condition[\"else\"]), {}, {\n    result: false\n  });\n\n  if (Array.isArray(condition)) {\n    return !condition.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref) {\n      var result = _ref.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.and) {\n    return !condition.and.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref2) {\n      var result = _ref2.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.sequence) {\n    return condition.sequence.reduce(function (acc, curr) {\n      var result = parseCondition(curr, values);\n      return {\n        sets: [].concat(_toConsumableArray(acc.sets), _toConsumableArray(result.set ? [result.set] : [])),\n        visible: acc.visible || result.visible,\n        result: acc.result || result.result\n      };\n    }, _objectSpread(_objectSpread({}, negativeResult), {}, {\n      sets: []\n    }));\n  }\n\n  if (condition.or) {\n    return condition.or.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref3) {\n      var result = _ref3.result;\n      return result === true;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.not) {\n    return !parseCondition(condition.not, values).result ? positiveResult : negativeResult;\n  }\n\n  var finalWhen = typeof condition.when === 'function' ? condition.when(field) : condition.when;\n\n  if (typeof finalWhen === 'string') {\n    return fieldCondition(get(values, finalWhen), condition) ? positiveResult : negativeResult;\n  }\n\n  if (Array.isArray(finalWhen)) {\n    return finalWhen.map(function (fieldName) {\n      return fieldCondition(get(values, typeof fieldName === 'function' ? fieldName(field) : fieldName), condition);\n    }).find(function (condition) {\n      return !!condition;\n    }) ? positiveResult : negativeResult;\n  }\n\n  return negativeResult;\n};\nexport default parseCondition;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: css(styles.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: styles.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nBreadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n            React.createElement(AngleRightIcon, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: css(styles.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","import React, { useState } from 'react';\nimport { Button, Modal } from '@patternfly/react-core';\nimport DeviceTable from '../Devices/DeviceTable';\nimport PropTypes from 'prop-types';\nimport { addDevicesToGroup } from '../../api/groups';\nimport { getInventory } from '../../api/devices';\nimport useApi from '../../hooks/useApi';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst AddSystemsToGroupModal = ({\n  groupId,\n  closeModal,\n  isOpen,\n  reloadData,\n  groupName,\n}) => {\n  const [response, fetchDevices] = useApi({\n    api: getInventory,\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n  const [deviceIds, setDeviceIds] = useState([]);\n  const dispatch = useDispatch();\n\n  const handleAddDevicesToGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${groupName} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: `An error occurred making the request`,\n      },\n    };\n\n    apiWithToast(\n      dispatch,\n      () =>\n        addDevicesToGroup(\n          parseInt(groupId),\n          deviceIds.map((device) => ({ ID: device.deviceID }))\n        ),\n      statusMessages\n    );\n    setTimeout(async () => await reloadData(), 500);\n    closeModal();\n  };\n\n  return (\n    <Modal\n      id=\"add-systems-modal\"\n      title=\"Add systems\"\n      position=\"top\"\n      isOpen={isOpen}\n      onClose={closeModal}\n      variant=\"large\"\n      actions={[\n        <Button\n          isDisabled={deviceIds.length === 0}\n          key=\"confirm\"\n          variant=\"primary\"\n          onClick={handleAddDevicesToGroup}\n        >\n          Add systems\n        </Button>,\n        <Button key=\"cancel\" variant=\"link\" onClick={closeModal}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <DeviceTable\n        selectedItems={setDeviceIds}\n        skeletonRowQuantity={15}\n        hasCheckbox={true}\n        isLoading={isLoading}\n        hasError={hasError}\n        count={data?.count}\n        data={data?.data?.devices || []}\n        fetchDevices={fetchDevices}\n      />\n    </Modal>\n  );\n};\nAddSystemsToGroupModal.propTypes = {\n  groupId: PropTypes.string,\n  closeModal: PropTypes.func,\n  isOpen: PropTypes.bool,\n  reloadData: PropTypes.func,\n  groupName: PropTypes.string,\n};\n\nexport default AddSystemsToGroupModal;\n","import React, { useState, Suspense } from 'react';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownPosition,\n  Flex,\n  FlexItem,\n  Skeleton,\n  Tooltip,\n} from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Empty from '../../components/Empty';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport DeviceTable from '../Devices/DeviceTable';\nimport { useParams } from 'react-router-dom';\nimport {\n  getGroupById,\n  removeDeviceFromGroupById,\n  removeDevicesFromGroup,\n} from '../../api/groups';\nimport AddSystemsToGroupModal from '../Devices/AddSystemsToGroupModal';\nimport { canUpdateSelectedDevices, emptyStateNoFilters } from '../../utils';\nimport useApi from '../../hooks/useApi';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport Modal from '../../components/Modal';\nimport DeleteGroupModal from '../Groups/DeleteGroupModal';\nimport RenameGroupModal from '../Groups/RenameGroupModal';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateDeviceModal\" */ '../Devices/UpdateDeviceModal'\n  )\n);\n\nconst GroupsDetail = () => {\n  const dispatch = useDispatch();\n  const params = useParams();\n  const history = useHistory();\n  const { search, pathname } = useLocation();\n\n  const { groupId } = params;\n\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [removeModal, setRemoveModal] = useState({\n    isOpen: false,\n    name: '',\n    deviceId: null,\n  });\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n  const [response, fetchDevices] = useApi({\n    api: getGroupById,\n    id: groupId,\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n  const groupName = data?.DeviceGroup?.Name;\n  const [deviceIds, getDeviceIds] = useState([]);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n  const [modalState, setModalState] = useState({ id: null, name: '' });\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n\n  const handleDeleteModal = (id, name) => {\n    setModalState({ id, name });\n    setIsDeleteModalOpen(true);\n  };\n\n  const handleRenameModal = (id, name) => {\n    setModalState({ id, name });\n    setIsRenameModalOpen(true);\n  };\n\n  const removeDeviceLabel = () =>\n    `Do you want to remove ${\n      deviceIds.length > 0\n        ? `${deviceIds.length} system${deviceIds.length === 1 ? '' : 's'}`\n        : `${removeModal.name}`\n    } from ${groupName}?`;\n\n  const handleSingleDeviceRemoval = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${removeModal.name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to remove system' },\n    };\n    apiWithToast(\n      dispatch,\n      () => removeDeviceFromGroupById(groupId, removeModal.deviceId),\n      statusMessages\n    );\n    setTimeout(() => setHasModalSubmitted(true), 800);\n  };\n\n  const handleBulkDeviceRemoval = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${deviceIds.length} systems have been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'failed to remove systems' },\n    };\n    apiWithToast(\n      dispatch,\n      () =>\n        removeDevicesFromGroup(\n          parseInt(groupId),\n          deviceIds.map((device) => ({ ID: device.deviceID }))\n        ),\n      statusMessages\n    );\n    setTimeout(() => setHasModalSubmitted(true), 800);\n  };\n\n  const actionsLabel = 'Actions for group details view';\n  const dropdownId = 'group-details-dropdown';\n\n  return (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        {groupName ? (\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to={paths.fleetManagement}>Groups</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>{groupName}</BreadcrumbItem>\n          </Breadcrumb>\n        ) : (\n          <Breadcrumb>\n            <BreadcrumbItem isActive>\n              <Skeleton width=\"100px\" />\n            </BreadcrumbItem>\n          </Breadcrumb>\n        )}\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            {groupName ? (\n              <PageHeaderTitle title={groupName} />\n            ) : (\n              <Skeleton width=\"150px\" />\n            )}\n          </FlexItem>\n          <FlexItem>\n            <Dropdown\n              position={DropdownPosition.right}\n              toggle={\n                <DropdownToggle\n                  id={dropdownId}\n                  toggleIndicator={CaretDownIcon}\n                  onToggle={(newState) => setIsDropdownOpen(newState)}\n                  isDisabled={false}\n                  aria-label={actionsLabel}\n                >\n                  <Tooltip\n                    content={actionsLabel}\n                    reference={() => document.getElementById(dropdownId)}\n                  />\n                  Actions\n                </DropdownToggle>\n              }\n              isOpen={isDropdownOpen}\n              dropdownItems={[\n                <DropdownItem\n                  key=\"delete-device-group\"\n                  onClick={() => handleDeleteModal(groupId, groupName)}\n                >\n                  Delete group\n                </DropdownItem>,\n                <DropdownItem\n                  key=\"rename-device-group\"\n                  onClick={() => handleRenameModal(groupId, groupName)}\n                >\n                  Rename group\n                </DropdownItem>,\n                <DropdownItem\n                  key=\"update-all-devices\"\n                  isDisabled={canUpdateSelectedDevices({\n                    deviceData: data?.DevicesView?.devices?.map((device) => ({\n                      imageSetId: device?.ImageSetID,\n                    })),\n                    imageData: data?.DevicesView?.devices?.some(\n                      (device) => device.ImageID\n                    ),\n                  })}\n                  onClick={() => {\n                    setIsDropdownOpen(false);\n                    setUpdateModal((prevState) => ({\n                      ...prevState,\n                      isOpen: true,\n                      deviceData: data?.DevicesView?.devices?.map((device) => ({\n                        id: device?.DeviceUUID,\n                        display_name:\n                          device?.DeviceName === ''\n                            ? 'localhost'\n                            : device?.DeviceName,\n                      })),\n                      imageSetId: data?.DevicesView?.devices.find(\n                        (device) => device.ImageSetID\n                      )?.ImageSetID,\n                    }));\n                  }}\n                >\n                  Update\n                </DropdownItem>,\n              ]}\n            />\n          </FlexItem>\n        </Flex>\n      </PageHeader>\n      <section className=\"edge-devices pf-l-page__main-section pf-c-page__main-section\">\n        {!emptyStateNoFilters(\n          isLoading,\n          data?.DeviceGroup?.Devices.length,\n          search\n        ) ? (\n          <DeviceTable\n            data={data?.DevicesView?.devices || []}\n            count={data?.DevicesView?.total}\n            isLoading={isLoading}\n            hasError={hasError}\n            hasCheckbox={true}\n            handleSingleDeviceRemoval={handleSingleDeviceRemoval}\n            kebabItems={[\n              {\n                isDisabled: !(deviceIds.length > 0),\n                title: 'Remove from group',\n                onClick: () =>\n                  setRemoveModal({\n                    name: '',\n                    deviceId: null,\n                    isOpen: true,\n                  }),\n              },\n              {\n                isDisabled: canUpdateSelectedDevices({\n                  deviceData: deviceIds,\n                  imageData: deviceIds[0]?.updateImageData,\n                }),\n                title: 'Update selected',\n                onClick: () =>\n                  setUpdateModal((prevState) => ({\n                    ...prevState,\n                    isOpen: true,\n                    deviceData: [...deviceIds],\n                    imageSetId: deviceIds.find((device) => device?.imageSetId)\n                      .imageSetId,\n                  })),\n              },\n            ]}\n            selectedItems={getDeviceIds}\n            setRemoveModal={setRemoveModal}\n            setIsAddModalOpen={setIsAddModalOpen}\n            hasModalSubmitted={hasModalSubmitted}\n            setHasModalSubmitted={setHasModalSubmitted}\n            fetchDevices={fetchDevices}\n            isAddSystemsView={true}\n          />\n        ) : (\n          <Flex justifyContent={{ default: 'justifyContentCenter' }}>\n            <Empty\n              icon=\"plus\"\n              title=\"Add systems to the group\"\n              body=\"Create groups to help manage your systems more effectively.\"\n              primaryAction={{\n                text: 'Add systems',\n                click: () => setIsAddModalOpen(true),\n              }}\n              secondaryActions={[\n                {\n                  type: 'link',\n                  title: 'Learn more about system groups',\n                  link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/working_with_systems_in_the_edge_management_application/index',\n                },\n              ]}\n            />\n          </Flex>\n        )}\n      </section>\n      {isAddModalOpen && (\n        <AddSystemsToGroupModal\n          groupId={groupId}\n          closeModal={() => setIsAddModalOpen(false)}\n          isOpen={isAddModalOpen}\n          reloadData={fetchDevices}\n          groupName={data?.DeviceGroup?.Name}\n        />\n      )}\n      {removeModal.isOpen && (\n        <Modal\n          isOpen={removeModal.isOpen}\n          closeModal={() => setRemoveModal(false)}\n          title={'Remove from group'}\n          submitLabel={'Remove'}\n          variant=\"danger\"\n          schema={{\n            fields: [\n              {\n                component: componentTypes.PLAIN_TEXT,\n                name: 'warning-text',\n                label: removeDeviceLabel(),\n              },\n            ],\n          }}\n          onSubmit={\n            removeModal.deviceId\n              ? handleSingleDeviceRemoval\n              : handleBulkDeviceRemoval\n          }\n          reloadData={fetchDevices}\n        />\n      )}\n\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateModal((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            refreshTable={fetchDevices}\n          />\n        </Suspense>\n      )}\n      {isDeleteModalOpen && (\n        <DeleteGroupModal\n          isModalOpen={isDeleteModalOpen}\n          setIsModalOpen={setIsDeleteModalOpen}\n          reloadData={() => history.push(paths.fleetManagement)}\n          modalState={modalState}\n        />\n      )}\n      {isRenameModalOpen && (\n        <RenameGroupModal\n          isModalOpen={isRenameModalOpen}\n          setIsModalOpen={setIsRenameModalOpen}\n          reloadData={() => fetchDevices()}\n          modalState={modalState}\n        />\n      )}\n    </>\n  );\n};\n\nexport default GroupsDetail;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n"],"names":["createContext","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","isEmptyValue","value","fieldCondition","config","isNotEmpty","isEmpty","pattern","regExpPattern","RegExp","flags","notMatch","test","is","prototype","hasOwnProperty","call","greaterThan","greaterThanOrEqualTo","lessThan","lessThanOrEqualTo","isMatched","Array","isArray","includes","parseCondition","condition","values","field","positiveResult","visible","then","result","negativeResult","map","some","_ref","and","_ref2","sequence","reduce","acc","curr","sets","concat","set","or","_ref3","not","finalWhen","when","fieldName","find","Breadcrumb","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","displayName","assign","child","index","showDivider","BreadcrumbItem","classNameProp","to","isActive","isDropdown","component","render","Component","ariaCurrent","undefined","type","href","description","name","schema","fields","componentTypes","label","validate","validatorTypes","WarningIcon","color","warningColor","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","modalState","id","dispatch","useDispatch","isOpen","closeModal","title","titleIconVariant","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","deleteGroupById","propTypes","PropTypes","asyncGroupNameValidation","validateGroupName","data","isValid","createGroupSchema","helperText","isRequired","threshold","nameValidator","RenameGroupModal","initialValues","updateGroupById","AddSystemsToGroupModal","groupId","groupName","useApi","api","getInventory","tableReload","response","fetchDevices","isLoading","hasError","useState","deviceIds","setDeviceIds","Modal","position","onClose","actions","Button","isDisabled","onClick","addDevicesToGroup","parseInt","device","ID","deviceID","setTimeout","DeviceTable","selectedItems","skeletonRowQuantity","hasCheckbox","count","devices","UpdateDeviceModal","React","params","useParams","history","useHistory","useLocation","search","pathname","isDropdownOpen","setIsDropdownOpen","isAddModalOpen","setIsAddModalOpen","deviceId","removeModal","setRemoveModal","deviceData","imageData","updateModal","setUpdateModal","getGroupById","DeviceGroup","Name","getDeviceIds","hasModalSubmitted","setHasModalSubmitted","setModalState","isDeleteModalOpen","setIsDeleteModalOpen","isRenameModalOpen","setIsRenameModalOpen","handleSingleDeviceRemoval","removeDeviceFromGroupById","actionsLabel","dropdownId","PageHeader","Link","paths","Skeleton","width","Flex","justifyContent","default","FlexItem","PageHeaderTitle","Dropdown","DropdownPosition","toggle","DropdownToggle","toggleIndicator","CaretDownIcon","onToggle","newState","Tooltip","content","reference","document","getElementById","dropdownItems","DropdownItem","canUpdateSelectedDevices","DevicesView","imageSetId","ImageSetID","ImageID","prevState","DeviceUUID","display_name","DeviceName","emptyStateNoFilters","Devices","Empty","icon","body","primaryAction","text","click","secondaryActions","link","total","kebabItems","updateImageData","isAddSystemsView","removeDevicesFromGroup","Suspense","fallback","Bullseye","Spinner","navigateBack","refreshTable","baseKeys","getTag","isArguments","isArrayLike","isBuffer","isPrototype","isTypedArray","module","exports","splice","tag","size"],"sourceRoot":""}