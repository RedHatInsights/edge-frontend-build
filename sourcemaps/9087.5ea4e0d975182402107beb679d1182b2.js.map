{"version":3,"file":"js/9087.63e5509ccbdbf6d7119e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/bell-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/check-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon.js","webpack:///./src/Routes/ImageManager/ImageSetsTable.js","webpack:///./src/Routes/ImageManagerDetail/utils.js","webpack:///./src/constants/status.js","webpack:///./src/components/Status.js","webpack:///./src/constants/routeMapper.js","webpack:///./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toPrimitive.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const BellIconConfig = {\n  name: 'BellIcon',\n  height: 1024,\n  width: 896,\n  svgPath: 'M448,0 C465.333333,0 480.333333,6.33333333 493,19 C505.666667,31.6666667 512,46.6666667 512,64 L512,106 L514.23,106.45 C587.89,121.39 648.48,157.24 696,214 C744,271.333333 768,338.666667 768,416 C768,500 780,568.666667 804,622 C818.666667,652.666667 841.333333,684 872,716 C873.773676,718.829136 875.780658,721.505113 878,724 C890,737.333333 896,752.333333 896,769 C896,785.666667 890,800.333333 878,813 C866,825.666667 850.666667,832 832,832 L63.3,832 C44.9533333,831.84 29.8533333,825.506667 18,813 C6,800.333333 0,785.666667 0,769 C0,752.333333 6,737.333333 18,724 L24,716 L25.06,714.9 C55.1933333,683.28 77.5066667,652.313333 92,622 C116,568.666667 128,500 128,416 C128,338.666667 152,271.333333 200,214 C248,156.666667 309.333333,120.666667 384,106 L384,63.31 C384.166667,46.27 390.5,31.5 403,19 C415.666667,6.33333333 430.666667,0 448,0 Z M576,896 L576,897.08 C575.74,932.6 563.073333,962.573333 538,987 C512.666667,1011.66667 482.666667,1024 448,1024 C413.333333,1024 383.333333,1011.66667 358,987 C332.666667,962.333333 320,932 320,896 L576,896 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const BellIcon = createIcon(BellIconConfig);\n\nexport default BellIcon;","import { createIcon } from '../createIcon';\n\nexport const CheckCircleIconConfig = {\n  name: 'CheckCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.967-111.033 248-248 248S8 392.967 8 256 119.033 8 256 8s248 111.033 248 248zM227.314 387.314l184-184c6.248-6.248 6.248-16.379 0-22.627l-22.627-22.627c-6.248-6.249-16.379-6.249-22.628 0L216 308.118l-70.059-70.059c-6.248-6.248-16.379-6.248-22.628 0l-22.627 22.627c-6.248 6.248-6.248 16.379 0 22.627l104 104c6.249 6.249 16.379 6.249 22.628.001z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CheckCircleIcon = createIcon(CheckCircleIconConfig);\n\nexport default CheckCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const ExclamationCircleIconConfig = {\n  name: 'ExclamationCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zm-248 50c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationCircleIcon = createIcon(ExclamationCircleIconConfig);\n\nexport default ExclamationCircleIcon;","import { createIcon } from '../createIcon';\n\nexport const ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExclamationTriangleIcon = createIcon(ExclamationTriangleIconConfig);\n\nexport default ExclamationTriangleIcon;","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { createLink } from '../../utils';\nimport { Tooltip } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { cellWidth } from '@patternfly/react-table';\nimport CustomEmptyState from '../../components/Empty';\nimport { useLocation, useHistory, useNavigate } from 'react-router-dom';\nimport { emptyStateNoFilters } from '../../utils';\nimport Status from '../../components/Status';\nimport { getBaseURLFromPrefixAndName } from '../ImageManagerDetail/utils';\nimport { distributionMapper } from '../../constants';\n\nconst TooltipSelectorRef = ({ index }) => (\n  <div>\n    <Tooltip\n      content={<div>More options</div>}\n      reference={() =>\n        document.getElementById(`pf-dropdown-toggle-id-${index}`)\n      }\n    />\n  </div>\n);\n\nTooltipSelectorRef.propTypes = {\n  index: PropTypes.number,\n};\n\nconst defaultFilters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  {\n    label: 'Status',\n    type: 'checkbox',\n    options: [\n      { option: 'Building', value: 'BUILDING' },\n      { option: 'Created', value: 'CREATED' },\n      { option: 'Error', value: 'ERROR' },\n      { option: 'Ready', value: 'SUCCESS' },\n    ],\n  },\n];\n\nconst columnNames = [\n  {\n    title: 'Name',\n    type: 'name',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Version',\n    type: 'version',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Release',\n    type: 'distribution',\n    options: distributionMapper,\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Target',\n    type: 'outputTypes',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Status',\n    type: 'status',\n    sort: false,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Created/Updated',\n    type: 'updated_at',\n    sort: true,\n    columnTransforms: [cellWidth(35)],\n  },\n];\nconst createRows = (data, baseURL, history, navigate) => {\n  return data.map((image_set, index) => ({\n    rowInfo: {\n      id: image_set?.ID,\n      imageStatus: image_set?.Status,\n      distribution: image_set?.Distribution,\n      outputType: image_set?.OutputTypes,\n      isoURL: image_set?.ImageBuildIsoURL || null,\n      latestImageID: image_set?.ImageID,\n    },\n    cells: [\n      {\n        title: createLink({\n          pathname: `${baseURL}/${image_set?.ID}`,\n          linkText: image_set?.Name,\n          history,\n          navigate,\n        }),\n      },\n\n      image_set?.Version,\n      {\n        title: distributionMapper[image_set?.Distribution],\n      },\n      image_set?.OutputTypes.length == 2\n        ? 'Bare Metal Installer'\n        : 'Update Only',\n      {\n        title: (\n          <>\n            {/* workaround for tooltip on kebab*/}\n            <TooltipSelectorRef index={index} />\n            <Status type={image_set?.Status.toLowerCase()} />\n          </>\n        ),\n      },\n      {\n        title: image_set?.UpdatedAt ? (\n          <DateFormat date={image_set?.UpdatedAt} />\n        ) : (\n          'Unknown'\n        ),\n      },\n    ],\n  }));\n};\n\nconst ImageTable = ({\n  pathPrefix,\n  urlName,\n  historyProp,\n  locationProp,\n  navigateProp,\n  data,\n  count,\n  isLoading,\n  docLinkProp,\n  hasError,\n  fetchImageSets,\n  openCreateWizard,\n  openUpdateWizard,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n}) => {\n  const docLink =\n    docLinkProp === undefined\n      ? 'https://access.redhat.com/documentation/en-us/edge_management/2022/html/create_rhel_for_edge_images_and_configure_automated_management/index'\n      : docLinkProp;\n  const { search } = locationProp\n    ? locationProp()\n    : useLocation\n    ? useLocation()\n    : null;\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n  const actionResolver = (rowData) => {\n    const actionsArray = [];\n    if (rowData.rowInfo?.isoURL) {\n      actionsArray.push({\n        title: 'Download',\n        onClick: (_event, _rowId, rowData) => {\n          window.open(rowData.rowInfo?.isoURL);\n        },\n      });\n    }\n\n    if (\n      rowData.rowInfo?.imageStatus === 'SUCCESS' ||\n      rowData.rowInfo?.imageStatus === 'ERROR'\n    ) {\n      actionsArray.push({\n        title: 'Update Image',\n        onClick: (_event, _rowId, rowData) => {\n          openUpdateWizard(rowData.rowInfo?.latestImageID);\n        },\n      });\n    }\n\n    if (rowData.rowInfo?.imageStatus === 'BUILDING' && rowData.rowInfo?.id) {\n      actionsArray.push({\n        title: '',\n      });\n    }\n\n    return actionsArray;\n  };\n\n  const areActionsDisabled = (rowData) =>\n    rowData.rowInfo?.imageStatus === 'BUILDING';\n\n  const baseURL = getBaseURLFromPrefixAndName(\n    `edge${paths.manageImages}`,\n    pathPrefix,\n    urlName\n  );\n  return (\n    <>\n      {emptyStateNoFilters(isLoading, count, search) ? (\n        <CustomEmptyState\n          data-testid=\"general-table-empty-state-no-data\"\n          icon={'plus'}\n          title={'Create an OSTree image'}\n          body={[\n            'Image builder is a tool to compose customized RHEL (rpm-ostree) images optimized for Edge. ',\n            'With OSTree, you can manage the system software by referencing a central image repository. ' +\n              'Images contain a complete operating system ready to be remotely installed at scale. ' +\n              'Updates to images are tracked through commits and enable secure updates that only ' +\n              'address changes and keep the operating system unchanged. Image updates are quick, ' +\n              'and rollbacks are easy.',\n          ]}\n          secondaryActions={[\n            {\n              type: 'link',\n              title: 'Learn more about OSTree.',\n              link: 'https://ostreedev.github.io/ostree/',\n            },\n            {\n              variant: 'primary',\n              className: 'edge-stretched-button',\n              onClick: () => openCreateWizard(),\n              type: 'button',\n              title: 'Create image.',\n            },\n            {\n              type: 'link',\n              iconPosition: 'left',\n              title: 'Image builder for OSTree documentation',\n              link: docLink,\n            },\n          ]}\n        />\n      ) : (\n        <GeneralTable\n          apiFilterSort={true}\n          historyProp={historyProp}\n          locationProp={locationProp}\n          navigateProp={navigateProp}\n          isUseApi={true}\n          filters={defaultFilters}\n          loadTableData={fetchImageSets}\n          tableData={{ count, data, isLoading, hasError }}\n          columnNames={columnNames}\n          rows={data ? createRows(data, baseURL, history, navigate) : []}\n          actionResolver={actionResolver}\n          areActionsDisabled={areActionsDisabled}\n          defaultSort={{ index: 5, direction: 'desc' }}\n          toolbarButtons={[\n            {\n              title: 'Create new image',\n              click: () => openCreateWizard(),\n            },\n          ]}\n          hasModalSubmitted={hasModalSubmitted}\n          setHasModalSubmitted={setHasModalSubmitted}\n        />\n      )}\n    </>\n  );\n};\n\nImageTable.propTypes = {\n  pathPrefix: PropTypes.string,\n  urlName: PropTypes.string,\n  historyProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  data: PropTypes.array,\n  count: PropTypes.number,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  fetchImageSets: PropTypes.func,\n  clearFilters: PropTypes.func,\n  openCreateWizard: PropTypes.func,\n  openUpdateWizard: PropTypes.func,\n  filters: PropTypes.array,\n  pagination: PropTypes.shape({\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n  }),\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  docLinkProp: PropTypes.string,\n};\n\nexport default ImageTable;\n","const getBaseURLFromPrefixAndName = (defaultBaseURL, pathPrefix, urlName) => {\n  let baseURL = defaultBaseURL;\n  if (pathPrefix || urlName) {\n    let urlNames = [];\n    if (pathPrefix) {\n      urlNames.push(pathPrefix);\n    }\n    if (urlName) {\n      urlNames.push(urlName);\n    }\n    baseURL = urlNames.join('/');\n  }\n  return baseURL;\n};\n\nconst restorePrefixURL = (url, pathPrefix) => {\n  const separator = '/';\n  if (!pathPrefix || url.startsWith(pathPrefix)) {\n    return url;\n  }\n  if (pathPrefix.endsWith(separator) || url.startsWith(separator)) {\n    return [pathPrefix, url].join('');\n  }\n  return [pathPrefix, url].join(separator);\n};\n\nexport { getBaseURLFromPrefixAndName, restorePrefixURL };\n","import { iconMapper, colorMapper } from './index';\n\nexport const statusMapper = {\n  booting: {\n    text: 'Booting',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  building: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  created: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  upToDate: {\n    text: 'Up to date',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  success: {\n    text: 'Ready',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  passed: {\n    text: 'Passed',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  updateAvailable: {\n    text: 'Update available',\n    Icon: iconMapper.exclamationTriangle,\n    color: colorMapper.yellow,\n    labelColor: 'orange',\n  },\n  updating: {\n    text: 'Updating',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  error: {\n    text: 'Error',\n    Icon: iconMapper.timesCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  default: {\n    text: 'Unknown',\n    Icon: iconMapper.unknown,\n  },\n  interrupted: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  unresponsive: {\n    text: 'Unresponsive',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  errorWithExclamationCircle: {\n    text: 'Error',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Tooltip, Split, SplitItem } from '@patternfly/react-core';\nimport { statusMapper } from '../constants/status';\n\nexport const getDeviceStatus = (\n  deviceStatus,\n  isUpdateAvailable,\n  dispatcherStatus\n) =>\n  dispatcherStatus === 'ERROR'\n    ? 'error'\n    : dispatcherStatus === 'UNRESPONSIVE'\n    ? 'unresponsive'\n    : deviceStatus === 'UPDATING'\n    ? 'updating'\n    : isUpdateAvailable\n    ? 'updateAvailable'\n    : 'upToDate';\n\nconst Status = ({\n  id,\n  type,\n  isLabel = false,\n  toolTipContent = '',\n  className = '',\n  isLink,\n}) => {\n  const { text, Icon, color, labelColor } =\n    Object.prototype.hasOwnProperty.call(statusMapper, type)\n      ? statusMapper[type]\n      : statusMapper['default'];\n\n  return (\n    <>\n      {isLabel ? (\n        <Label id={id} color={labelColor} icon={<Icon />} className={className}>\n          {text}\n        </Label>\n      ) : (\n        <Split id={id} style={{ color }} className={className}>\n          <SplitItem className=\"pf-u-mr-sm\">\n            {toolTipContent ? (\n              <Tooltip content=\"blargh\">\n                <Icon />\n              </Tooltip>\n            ) : (\n              <Icon />\n            )}\n          </SplitItem>\n          <SplitItem>\n            <p\n              style={\n                isLink\n                  ? {\n                      textDecoration: ' grey dotted underline',\n                      cursor: 'pointer',\n                    }\n                  : {}\n              }\n            >\n              {text}\n            </p>\n          </SplitItem>\n        </Split>\n      )}\n    </>\n  );\n};\n\nexport default Status;\n\nStatus.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  isLabel: PropTypes.bool,\n  toolTipContent: PropTypes.string,\n  className: PropTypes.string,\n  isLink: PropTypes.bool,\n};\n\nStatus.defaultProps = {\n  id: 'status',\n};\n","export const routes = {\n  groups: '/groups',\n  groupsDetail: '/groups/:uuid',\n  deviceDetail: '/groups/:uuid/:inventoryId',\n  canaries: '/canaries',\n  fleetManagement: '/fleet-management',\n  fleetManagementDetail: '/fleet-management/:groupId',\n  fleetManagementSystemDetail: '/fleet-management/:groupId/systems/:deviceId',\n  fleetManagementSystemDetailUpdate:\n    '/fleet-management/:groupId/systems/:deviceId/update',\n  inventory: '/inventory',\n  insightsInventory: '/insights/inventory/manage-edge-inventory',\n  inventoryDetail: '/inventory/:deviceId',\n  inventoryDetailModal: '/inventory/:deviceId/:modalId',\n  inventoryDetailUpdate: '/inventory/:deviceId/update',\n  insightsInventoryDetailUpdate: '/insights/inventory/:deviceId/update',\n  manageImages: '/manage-images',\n  manageImagesDetail: '/manage-images/:imageId',\n  manageImagesDetailVersion: '/manage-images/:imageId/versions/:imageVersionId',\n  repositories: '/repositories',\n  learningResources: '/learning-resources',\n  contentSourcesRepositories: '/preview/insights/content',\n};\n","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}"],"names":["BellIconConfig","name","height","width","svgPath","yOffset","xOffset","BellIcon","CheckCircleIconConfig","CheckCircleIcon","ExclamationCircleIconConfig","ExclamationCircleIcon","ExclamationTriangleIconConfig","ExclamationTriangleIcon","TooltipSelectorRef","index","content","reference","document","getElementById","propTypes","PropTypes","defaultFilters","label","type","options","option","value","columnNames","title","sort","columnTransforms","cellWidth","distributionMapper","createRows","data","baseURL","history","navigate","map","image_set","rowInfo","id","ID","imageStatus","Status","distribution","Distribution","outputType","OutputTypes","isoURL","ImageBuildIsoURL","latestImageID","ImageID","cells","createLink","pathname","linkText","Name","Version","length","toLowerCase","UpdatedAt","date","ImageTable","pathPrefix","urlName","historyProp","locationProp","navigateProp","count","isLoading","docLinkProp","hasError","fetchImageSets","openCreateWizard","openUpdateWizard","hasModalSubmitted","setHasModalSubmitted","docLink","undefined","search","useLocation","useHistory","useNavigate","getBaseURLFromPrefixAndName","paths","emptyStateNoFilters","icon","body","secondaryActions","link","variant","className","onClick","iconPosition","apiFilterSort","isUseApi","filters","loadTableData","tableData","rows","actionResolver","rowData","actionsArray","push","_event","_rowId","window","open","areActionsDisabled","defaultSort","direction","toolbarButtons","click","clearFilters","pagination","page","perPage","defaultBaseURL","urlNames","join","restorePrefixURL","url","startsWith","endsWith","statusMapper","booting","text","Icon","iconMapper","color","colorMapper","labelColor","building","created","upToDate","success","passed","updateAvailable","updating","error","default","interrupted","unresponsive","errorWithExclamationCircle","getDeviceStatus","deviceStatus","isUpdateAvailable","dispatcherStatus","isLabel","toolTipContent","isLink","Object","prototype","hasOwnProperty","call","Label","Split","style","SplitItem","Tooltip","textDecoration","cursor","defaultProps","routes","groups","groupsDetail","deviceDetail","canaries","fleetManagement","fleetManagementDetail","fleetManagementSystemDetail","fleetManagementSystemDetailUpdate","inventory","insightsInventory","inventoryDetail","inventoryDetailModal","inventoryDetailUpdate","insightsInventoryDetailUpdate","manageImages","manageImagesDetail","manageImagesDetailVersion","repositories","learningResources","contentSourcesRepositories","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_toPropertyKey","arg","input","hint","prim","Symbol","toPrimitive","res","TypeError","String"],"sourceRoot":""}