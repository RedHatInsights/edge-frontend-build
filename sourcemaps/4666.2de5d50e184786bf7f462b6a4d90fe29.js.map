{"version":3,"file":"js/4666.80c32e9f946398decbba.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListDescription.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListGroup.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/DescriptionList/DescriptionListTermHelpText.js","webpack:///./node_modules/@patternfly/react-styles/css/components/DescriptionList/description-list.mjs","webpack:///./src/components/SearchInput.js","webpack:///./src/Routes/Devices/RemoveDeviceModal.js","webpack:///./src/api/groups/index.js","webpack:///./src/components/Modal.js","webpack:///./src/hooks/useApi.js","webpack:///./src/hooks/useInventoryGroups.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListDescription = (_a) => {\n    var { children = null, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"dd\", Object.assign({ className: css(styles.descriptionListDescription, className) }, props),\n        React.createElement(\"div\", { className: 'pf-c-description-list__text' }, children)));\n};\nDescriptionListDescription.displayName = 'DescriptionListDescription';\n//# sourceMappingURL=DescriptionListDescription.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListGroup = (_a) => {\n    var { className, children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.descriptionListGroup, className) }, props), children));\n};\nDescriptionListGroup.displayName = 'DescriptionListGroup';\n//# sourceMappingURL=DescriptionListGroup.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/DescriptionList/description-list';\nimport { css } from '@patternfly/react-styles';\nexport const DescriptionListTermHelpText = (_a) => {\n    var { children, className } = _a, props = __rest(_a, [\"children\", \"className\"]);\n    return (React.createElement(\"dt\", Object.assign({ className: css(styles.descriptionListTerm, className) }, props), children));\n};\nDescriptionListTermHelpText.displayName = 'DescriptionListTermHelpText';\n//# sourceMappingURL=DescriptionListTermHelpText.js.map","import './description-list.css';\nexport default {\n  \"card\": \"pf-c-card\",\n  \"descriptionList\": \"pf-c-description-list\",\n  \"descriptionListDescription\": \"pf-c-description-list__description\",\n  \"descriptionListGroup\": \"pf-c-description-list__group\",\n  \"descriptionListTerm\": \"pf-c-description-list__term\",\n  \"descriptionListTermIcon\": \"pf-c-description-list__term-icon\",\n  \"descriptionListText\": \"pf-c-description-list__text\",\n  \"modifiers\": {\n    \"inlineGrid\": \"pf-m-inline-grid\",\n    \"autoColumnWidths\": \"pf-m-auto-column-widths\",\n    \"autoFit\": \"pf-m-auto-fit\",\n    \"compact\": \"pf-m-compact\",\n    \"fluid\": \"pf-m-fluid\",\n    \"fillColumns\": \"pf-m-fill-columns\",\n    \"displayLg\": \"pf-m-display-lg\",\n    \"display_2xl\": \"pf-m-display-2xl\",\n    \"helpText\": \"pf-m-help-text\",\n    \"1Col\": \"pf-m-1-col\",\n    \"2Col\": \"pf-m-2-col\",\n    \"3Col\": \"pf-m-3-col\",\n    \"horizontal\": \"pf-m-horizontal\",\n    \"vertical\": \"pf-m-vertical\",\n    \"1ColOnSm\": \"pf-m-1-col-on-sm\",\n    \"2ColOnSm\": \"pf-m-2-col-on-sm\",\n    \"3ColOnSm\": \"pf-m-3-col-on-sm\",\n    \"horizontalOnSm\": \"pf-m-horizontal-on-sm\",\n    \"verticalOnSm\": \"pf-m-vertical-on-sm\",\n    \"1ColOnMd\": \"pf-m-1-col-on-md\",\n    \"2ColOnMd\": \"pf-m-2-col-on-md\",\n    \"3ColOnMd\": \"pf-m-3-col-on-md\",\n    \"horizontalOnMd\": \"pf-m-horizontal-on-md\",\n    \"verticalOnMd\": \"pf-m-vertical-on-md\",\n    \"1ColOnLg\": \"pf-m-1-col-on-lg\",\n    \"2ColOnLg\": \"pf-m-2-col-on-lg\",\n    \"3ColOnLg\": \"pf-m-3-col-on-lg\",\n    \"horizontalOnLg\": \"pf-m-horizontal-on-lg\",\n    \"verticalOnLg\": \"pf-m-vertical-on-lg\",\n    \"1ColOnXl\": \"pf-m-1-col-on-xl\",\n    \"2ColOnXl\": \"pf-m-2-col-on-xl\",\n    \"3ColOnXl\": \"pf-m-3-col-on-xl\",\n    \"horizontalOnXl\": \"pf-m-horizontal-on-xl\",\n    \"verticalOnXl\": \"pf-m-vertical-on-xl\",\n    \"1ColOn_2xl\": \"pf-m-1-col-on-2xl\",\n    \"2ColOn_2xl\": \"pf-m-2-col-on-2xl\",\n    \"3ColOn_2xl\": \"pf-m-3-col-on-2xl\",\n    \"horizontalOn_2xl\": \"pf-m-horizontal-on-2xl\",\n    \"verticalOn_2xl\": \"pf-m-vertical-on-2xl\"\n  }\n};","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Select, SelectOption } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst SelectInputApi = (props) => {\n  useFieldApi(props);\n  const { change } = useFormApi();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(null);\n\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const onSelect = (_event, selection, isPlaceholder) => {\n    if (isPlaceholder) clearSelection();\n    else {\n      setSelected(selection);\n      setIsOpen(false);\n    }\n    change('group', selection);\n  };\n\n  const clearSelection = () => {\n    setSelected(null);\n    change('group', null);\n    setIsOpen(false);\n  };\n\n  return (\n    <>\n      <Select\n        variant=\"typeahead\"\n        typeAheadAriaLabel=\"Select a state\"\n        onToggle={onToggle}\n        onSelect={onSelect}\n        onClear={clearSelection}\n        selections={selected}\n        isOpen={isOpen}\n        aria-labelledby=\"typeahead-select-id-1\"\n        placeholderText=\"Type or click select group\"\n      >\n        {props.defaultOptions.map(({ DeviceGroup }, index) => (\n          <SelectOption\n            key={index}\n            value={{\n              toString: () => DeviceGroup.Name,\n              groupId: DeviceGroup.ID,\n            }}\n            {...(DeviceGroup.description && {\n              description: DeviceGroup.description,\n            })}\n          />\n        ))}\n      </Select>\n    </>\n  );\n};\n\nSelectInputApi.propTypes = {\n  defaultOptions: PropTypes.array,\n};\n\nexport default SelectInputApi;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport SearchInput from '../../components/SearchInput';\nimport apiWithToast from '../../utils/apiWithToast';\nimport {\n  removeDeviceFromGroupById,\n  removeDevicesFromInventoryGroup,\n} from '../../api/groups';\nimport { useDispatch } from 'react-redux';\nimport { Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport useInventoryGroups from '../../hooks/useInventoryGroups';\n\nconst removeDescription = (deviceInfo, inventoryGroupsEnabled) => {\n  const { deviceGroups } = deviceInfo[0];\n\n  const systemText =\n    deviceInfo.length > 1 ? `${deviceInfo.length} systems` : deviceInfo[0].name;\n  const groupText =\n    deviceGroups.length === 1\n      ? deviceGroups[0].Name\n      : `${deviceGroups.length} groups`;\n\n  if (inventoryGroupsEnabled) {\n    return (\n      <Text>\n        <strong>{systemText} </strong> will no longer be part of{' '}\n        <strong>{groupText}</strong> and its configuration will be impacted.\n      </Text>\n    );\n  }\n\n  if (deviceGroups.length > 1) {\n    return (\n      <Text>\n        Select the group you want to remove <strong>{systemText}</strong> from.\n      </Text>\n    );\n  }\n\n  return (\n    <Text>\n      Do you want to remove <strong>{systemText} </strong> from{' '}\n      <strong>{groupText}</strong>?\n    </Text>\n  );\n};\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst createSchema = (deviceInfo, inventoryGroupsEnabled) => {\n  const schema = {\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'description',\n        label: removeDescription(deviceInfo, inventoryGroupsEnabled),\n      },\n    ],\n  };\n\n  if (deviceInfo[0].deviceGroups.length > 1) {\n    schema.fields.push({\n      component: 'search-input',\n      name: 'group',\n      label: 'Select a group',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }],\n    });\n  }\n\n  return schema;\n};\n\nconst RemoveDeviceModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  deviceInfo,\n}) => {\n  const dispatch = useDispatch();\n\n  const inventoryGroupsEnabled = useInventoryGroups(false);\n\n  const { deviceGroups } = deviceInfo[0];\n\n  const handleRemoveDevices = (values) => {\n    const hasManyGroups = deviceGroups.length > 1;\n    const groupName = hasManyGroups\n      ? values.group.toString()\n      : deviceGroups[0].Name;\n    const groupId = hasManyGroups ? values.group.groupId : deviceGroups[0].ID;\n    const systemText =\n      deviceInfo.length > 1\n        ? `${deviceInfo.length} systems`\n        : deviceInfo[0].name;\n\n    const errorMessageDescription = inventoryGroupsEnabled\n      ? deviceInfo.length > 1\n        ? `Failed to remove ${deviceInfo.length} systems from ${groupName}`\n        : `Failed to remove 1 system from ${groupName}`\n      : 'Failed to remove system from group';\n\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${systemText} has been removed from ${groupName} successfully`,\n      },\n      onError: {\n        title: 'Error',\n        description: errorMessageDescription,\n      },\n    };\n\n    let removeDeviceGroupFunc;\n    if (inventoryGroupsEnabled) {\n      removeDeviceGroupFunc = () =>\n        removeDevicesFromInventoryGroup(\n          groupId,\n          deviceInfo.map((device) => device.UUID)\n        );\n    } else {\n      removeDeviceGroupFunc = () =>\n        removeDeviceFromGroupById(groupId, deviceInfo[0].ID);\n    }\n\n    apiWithToast(dispatch, removeDeviceGroupFunc, statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      variant=\"danger\"\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Remove from group\"\n      submitLabel=\"Remove\"\n      titleIconVariant={WarningIcon}\n      additionalMappers={{\n        'search-input': {\n          component: SearchInput,\n          defaultOptions:\n            deviceGroups.map((group) => ({\n              DeviceGroup: group,\n            })) || [],\n        },\n      }}\n      schema={createSchema(deviceInfo, inventoryGroupsEnabled)}\n      onSubmit={handleRemoveDevices}\n      reloadData={reloadData}\n    />\n  );\n};\n\nexport default RemoveDeviceModal;\n\nRemoveDeviceModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  deviceInfo: PropTypes.array,\n};\n","import { EDGE_API, INVENTORY_API_BASE, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const createGroup = (payload) => {\n  return instance.post(`${EDGE_API}/device-groups/`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const createInventoryGroup = (payload) => {\n  return instance.post(`${INVENTORY_API_BASE}/groups`, { name: payload.name });\n};\n\nexport const getGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups?${q}`);\n};\n\nexport const getInventoryGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${INVENTORY_API_BASE}/groups?${q}`);\n};\n\nexport const getGroupById = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups/${id}/view?${q}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n  return instance.put(`${EDGE_API}/device-groups/${id}`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const deleteGroupById = (id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${id}`);\n};\n\nexport const addDevicesToGroup = (groupId, devices) => {\n  return instance.post(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    ID: groupId,\n    Devices: devices,\n  });\n};\n\nexport const addDevicesToInventoryGroup = (groupId, devices) => {\n  const devicesIDS = [];\n  devices.forEach((device) => devicesIDS.push(device.UUID));\n\n  return instance.post(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts`,\n    devicesIDS\n  );\n};\n\nexport const removeDevicesFromGroup = (groupId, devices) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    data: {\n      ID: groupId,\n      Devices: devices,\n    },\n  });\n};\n\nexport const removeDevicesFromInventoryGroup = (groupId, devices) => {\n  return instance.delete(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts/` + devices.join(',')\n  );\n};\n\nexport const removeDeviceFromGroupById = (groupId, id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices/${id}`);\n};\n\nexport const validateGroupName = (name) => {\n  return instance.get(`${EDGE_API}/device-groups/checkName/${name}`);\n};\n\nexport const getEnforceEdgeGroups = () => {\n  return instance.get(`${EDGE_API}/device-groups/enforce-edge-groups`);\n};\n\nexport const validateInventoryGroupName = (name) => {\n  return instance.get(\n    `${INVENTORY_API_BASE}/groups?name=${name}&order_by=name&order_how=ASC`\n  );\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n  validatorMapper,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        validatorMapper={validatorMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  validatorMapper: PropTypes.object,\n};\n\nexport default RepoModal;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useApi = ({ api, id = null, statusMessages, tableReload = false }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [apiFunc, setAPIFunc] = useState(() => api);\n\n  const hasSuccess = statusMessages?.onSuccess;\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async (query = '') => {\n    setIsLoading(true);\n    try {\n      const data = await apiFunc({ id, query });\n      setData(data);\n\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n    } catch (err) {\n      setHasError(true);\n\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n        }),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!tableReload) {\n      fetchData();\n    }\n  }, []);\n\n  return [{ data, isLoading, hasError }, fetchData, apiFunc, setAPIFunc];\n};\n\nexport default useApi;\n","import { useState, useEffect } from 'react';\nimport { useFeatureFlags } from '../utils';\nimport { FEATURE_PARITY_INVENTORY_GROUPS } from '../constants/features';\nimport { getEnforceEdgeGroups } from '../api/groups';\n\nconst useInventoryGroups = (value) => {\n  const [data, setData] = useState(value);\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  useEffect(() => {\n    (async () => {\n      const response = await getEnforceEdgeGroups();\n      const enforceEdgeGroups = response?.enforce_edge_groups;\n      setData(!enforceEdgeGroups && inventoryGroupsEnabled);\n    })();\n  }, []);\n\n  return data;\n};\n\nexport default useInventoryGroups;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["DescriptionListDescription","_a","children","className","props","__rest","Object","assign","displayName","DescriptionListGroup","DescriptionListTermHelpText","SelectInputApi","useFieldApi","change","useFormApi","useState","isOpen","setIsOpen","selected","setSelected","clearSelection","Select","variant","typeAheadAriaLabel","onToggle","onSelect","_event","selection","isPlaceholder","onClear","selections","placeholderText","defaultOptions","map","index","DeviceGroup","SelectOption","key","value","toString","Name","groupId","ID","description","propTypes","PropTypes","removeDescription","deviceInfo","inventoryGroupsEnabled","deviceGroups","systemText","length","name","groupText","Text","WarningIcon","color","warningColor","createSchema","schema","fields","component","componentTypes","label","push","isRequired","validate","type","validatorTypes","RemoveDeviceModal","isModalOpen","setIsModalOpen","reloadData","dispatch","useDispatch","useInventoryGroups","Modal","closeModal","title","submitLabel","titleIconVariant","additionalMappers","SearchInput","group","onSubmit","values","removeDeviceGroupFunc","hasManyGroups","groupName","errorMessageDescription","statusMessages","onSuccess","onError","removeDevicesFromInventoryGroup","device","UUID","removeDeviceFromGroupById","apiWithToast","createGroup","payload","instance","EDGE_API","Type","createInventoryGroup","INVENTORY_API_BASE","getGroups","query","q","getTableParams","getInventoryGroups","getGroupById","id","updateGroupById","deleteGroupById","addDevicesToGroup","devices","Devices","addDevicesToInventoryGroup","devicesIDS","forEach","removeDevicesFromGroup","data","join","validateGroupName","getEnforceEdgeGroups","validateInventoryGroupName","RepoModal","initialValues","size","validatorMapper","onClose","FormTemplate","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","api","tableReload","setData","isLoading","setIsLoading","hasError","setHasError","apiFunc","setAPIFunc","hasSuccess","fetchData","addNotification","useEffect","useFeatureFlags","FEATURE_PARITY_INVENTORY_GROUPS","response","enforceEdgeGroups","enforce_edge_groups","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}