{"version":3,"sources":["webpack:///./src/Routes/ImageManager/UpdateImageWizard.js"],"names":["UpdateImage","navigateBack","updateImageID","useState","user","setUser","dispatch","useDispatch","updateRepoURL","setUpdateRepoURL","closeAction","type","CREATE_NEW_IMAGE_RESET","getRegistry","useContext","RegistryContext","data","useSelector","imageDetailReducer","shallowEqual","useEffect","registered","register","loadImageDetail","insights","chrome","auth","getUser","userData","imageUpdateRepoURL","found","onClose","customComponentMapper","review","ReviewStep","onSubmit","values","payload","name","Name","version","Version","architecture","OSTreeParentCommit","createNewImage","addImageToPoll","value","id","ID","defaultArch","initialValues","isUpdate","description","Description","Commit","Packages","map","pkg","schema","fields","component","componentTypes","className","isDynamic","inModal","buttonLabels","submit","showTitles","title","crossroads","updateDetails","imageOutput","packages","propTypes","PropTypes","defaultProps"],"mappings":"+9BAgBA,IAAMA,EAAc,SAAC,GAAoC,MAAlCC,EAAkC,EAAlCA,aAAcC,EAAoB,EAApBA,cAAoB,GAC/BC,gBAD+B,WAChDC,EADgD,KAC1CC,EAD0C,KAEjDC,GAAWC,mBAFsC,GAGbJ,cAAS,IAHI,WAGhDK,EAHgD,KAGjCC,EAHiC,KAIjDC,EAAc,WAClBT,IACAK,EAAS,CAAEK,KAAMC,OAGXC,GAAgBC,gBAAWC,KAA3BF,YACAG,GAASC,kBACf,gBAAGC,EAAH,EAAGA,mBAAH,MAA6B,CAAEF,MAAME,aAAA,EAAAA,EAAoBF,OAAQ,QACjEG,gBAFMH,KAwBR,OAnBAI,gBAAU,WACR,IAAMC,EAAaR,IAAcS,SAAS,CACxCJ,0CAGF,OADAK,qBAAgBjB,EAAUJ,GACnB,kBAAMmB,OACZ,CAACf,KAEJc,gBAAU,WACR,cAAC,oHACyBI,gBADzB,iBACyB,EAAUC,cADnC,iBACyB,EAAkBC,YAD3C,aACyB,EAAwBC,UADjD,gDAC+D,GAD/D,OACOC,EADP,KAECvB,GAAQ,kBAAMuB,KAFf,0CAAD,GAIA,cAAC,qGACqBC,QAAmB3B,GADxC,OACO4B,EADP,OAECrB,EAAiBqB,GAFlB,0CAAD,KAIC,IAEI1B,EACL,kBAAC,IAAD,CACE2B,QAASrB,EACTsB,sBAAuB,CACrBC,OAAQC,KAEVC,SAAU,SAACC,GACT,IAAMC,EAAU,EAAH,KACRD,GADQ,IAEXE,KAAMtB,aAAF,EAAEA,EAAMuB,KACZC,SAASxB,aAAA,EAAAA,EAAMyB,SAAU,EACzBC,aAAc,SACdC,mBAAoBnC,KAEtBoC,QAAetC,EAAU+B,GAAS,SAACrB,GACjCN,IACAJ,GACEuC,QAAe,CAAEP,KAAMtB,EAAK8B,MAAMP,KAAMQ,GAAI/B,EAAK8B,MAAME,UAI7DC,YAAY,SACZC,cAAe,CACbZ,KAAMtB,aAAF,EAAEA,EAAMuB,KACZY,UAAU,EACVC,YAAapC,aAAF,EAAEA,EAAMqC,YACnBb,QAASxB,aAAF,EAAEA,EAAMyB,QACf,oBAAqBzB,SAArB,UAAqBA,EAAMsC,cAA3B,aAAqB,EAAcC,SAASC,KAAI,SAACC,GAAD,cAC3CA,GAD2C,IAE9CnB,KAAMmB,EAAIlB,WAGdmB,OAAQ,CACNC,OAAQ,CACN,CACEC,UAAWC,WACXvB,KAAM,uBACNwB,UAAW,gBACXC,WAAW,EACXC,SAAS,EACTC,aAAc,CACZC,OAAQ,iBAEVC,YAAY,EACZC,MAAO,iBAAF,OAAmBpD,aAAnB,EAAmBA,EAAMuB,MAC9B8B,WAAY,CAAC,qBAAsB,WAGnCV,OAAQ,CAACW,KAAeC,KAAaC,KAAUvC,WAMvD,kBAAC,IAAD,OAIJjC,EAAYyE,UAAY,CACtBxE,aAAcyE,SACdxE,cAAewE,YAEjB1E,EAAY2E,aAAe,CACzB1E,aAAc,cAGhB","file":"js/UpdateImageWizard.44fb6f3081a2c03af8f2.js","sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { review, packages, updateDetails, imageOutput } from './steps';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\nimport { createNewImage, addImageToPoll } from '../../store/actions';\nimport { CREATE_NEW_IMAGE_RESET } from '../../store/action-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { imageDetailReducer } from '../../store/reducers';\nimport { loadImageDetail } from '../../store/actions';\nimport { imageUpdateRepoURL } from '../../api/index';\n\nconst UpdateImage = ({ navigateBack, updateImageID }) => {\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const [updateRepoURL, setUpdateRepoURL] = useState('');\n  const closeAction = () => {\n    navigateBack();\n    dispatch({ type: CREATE_NEW_IMAGE_RESET });\n  };\n\n  const { getRegistry } = useContext(RegistryContext);\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({ data: imageDetailReducer?.data || null }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageDetailReducer,\n    });\n    loadImageDetail(dispatch, updateImageID);\n    return () => registered();\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      const userData = (await insights?.chrome?.auth?.getUser()) || {};\n      setUser(() => userData);\n    })();\n    (async () => {\n      const found = await imageUpdateRepoURL(updateImageID);\n      setUpdateRepoURL(found);\n    })();\n  }, []);\n\n  return user ? (\n    <ImageCreator\n      onClose={closeAction}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={(values) => {\n        const payload = {\n          ...values,\n          name: data?.Name,\n          version: data?.Version + 1,\n          architecture: 'x86_64',\n          OSTreeParentCommit: updateRepoURL,\n        };\n        createNewImage(dispatch, payload, (data) => {\n          closeAction();\n          dispatch(\n            addImageToPoll({ name: data.value.Name, id: data.value.ID })\n          );\n        });\n      }}\n      defaultArch=\"x86_64\"\n      initialValues={{\n        name: data?.Name,\n        isUpdate: true,\n        description: data?.Description,\n        version: data?.Version,\n        'selected-packages': data?.Commit?.Packages.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Create update',\n            },\n            showTitles: true,\n            title: `Update image: ${data?.Name}`,\n            crossroads: ['target-environment', 'release'],\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [updateDetails, imageOutput, packages, review],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nUpdateImage.propTypes = {\n  navigateBack: PropTypes.func,\n  updateImageID: PropTypes.number,\n};\nUpdateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default UpdateImage;\n"],"sourceRoot":""}