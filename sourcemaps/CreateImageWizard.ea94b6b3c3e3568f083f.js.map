{"version":3,"sources":["webpack:///./src/components/form/ReviewStep.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/Routes/ImageManager/CreateImageWizard.js"],"names":["getState","useFormApi","getRegistry","useContext","RegistryContext","useSelector","createImageReducer","isLoading","undefined","hasError","error","shallowEqual","useEffect","registered","register","Bullseye","Fragment","Alert","variant","title","TextContent","Text","component","TextVariants","TextList","TextListVariants","data-testid","TextListItem","T","TextListItemVariants","values","credentials","includes","type","repeat","password","length","sshKey","mapPackagesToComponent","packages","map","pack","key","name","className","summary","mapComponentToPackage","props","children","Packages","defaultArch","change","input","useFieldApi","packagesSearchName","useRef","useState","packagesAvailable","setPackagesAvailable","packagesSelected","setPackagesSelected","filterSelected","setFilterSelected","packageListChange","newAvailablePackages","newChosenPackages","chosenPkgs","handlePackagesSearch","getPackages","release","architecture","current","data","DualListSelector","isSearchable","availableOptionsActions","Button","aria-label","onClick","availableOptions","availableOptionsTitle","chosenOptions","filter","item","chosenOptionsTitle","addSelected","removeSelected","addAll","removeAll","onAvailableOptionsSearchInputChanged","val","onChosenOptionsSearchInputChanged","filterOption","id","propTypes","PropTypes","registrationCredsValidator","value","state","checkbox","errs","meta","toggleCheckbox","useCallback","checked","event","onChange","currentTarget","passwordInput","sshKeyInput","FormGroup","label","isHelperTextBeforeField","hasNoPaddingTop","isRequired","isStack","Checkbox","isChecked","helperTextInvalid","dirty","TextInput","TextArea","CreateImageWizard","schema","onSubmit","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","review","Review","validatorMapper","validatorTypes","onCancel","fields","PackagesLabel","releaseName","releaseMapper","nextStep","componentTypes","initialValue","clearedValue","options","Object","keys","validate","isDisabled","helperText","pattern","threshold","CreateImage","navigateBack","user","setUser","dispatch","useDispatch","closeAction","CREATE_NEW_IMAGE_RESET","insights","chrome","auth","getUser","userData","ImageCreator","ReviewStep","payload","createNewImage","isDynamic","inModal","buttonLabels","submit","showTitles","crossroads","description","imageOutput","registration","defaultProps"],"mappings":"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","file":"js/CreateImageWizard.4809b16c3fcb8515fe88.js","sourcesContent":["import React, { Fragment, useContext, useEffect } from 'react';\nimport {\n  TextContent,\n  Text,\n  TextVariants,\n  TextList,\n  TextListItem,\n  TextListVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click the Create button to create your\n          image using the following criteria.\n        </Text>\n        <Text component={TextVariants.h1}>Image output</Text>\n        <TextList\n          component={TextListVariants.dl}\n          data-testid=\"review-image-output\"\n        >\n          <TextListItem component={TextListItemVariants.dt}>\n            Release\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            Red Hat Enterprise Linux (RHEL) 8.3\n          </TextListItem>\n        </TextList>\n        <Text component={TextVariants.h1}>Registration</Text>\n        <TextList\n          component={TextListVariants.dl}\n          data-testid=\"review-image-registration\"\n        >\n          <TextListItem component={TextListItemVariants.dt}>\n            Username\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {getState().values['username']}\n          </TextListItem>\n          {getState().values.credentials.includes('password') ? (\n            <>\n              <TextListItem component={TextListItemVariants.dt}>\n                Password\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd} type=\"password\">\n                {'*'.repeat(getState().values.password.length)}\n              </TextListItem>\n            </>\n          ) : null}\n          {getState().values.credentials.includes('sshKey') ? (\n            <>\n              <TextListItem component={TextListItemVariants.dt}>\n                SSH Key\n              </TextListItem>\n              <TextListItem component={TextListItemVariants.dd} type=\"password\">\n                {getState().values.sshKey}\n              </TextListItem>\n            </>\n          ) : null}\n        </TextList>\n        <Text component={TextVariants.h1}>Packages</Text>\n        <TextList\n          component={TextListVariants.dl}\n          data-testid=\"review-image-packages\"\n        >\n          <TextListItem component={TextListItemVariants.dt}>\n            Added Packages\n          </TextListItem>\n          <TextListItem component={TextListItemVariants.dd}>\n            {getState().values['selected-packages'] === undefined\n              ? 0\n              : getState().values['selected-packages'].length}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useState, useRef, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { DualListSelector, Button, TextContent } from '@patternfly/react-core';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\n\nconst mapPackagesToComponent = (packages) =>\n  packages.map((pack, key) => (\n    <TextContent key={`${pack.name}-${key}`}>\n      <span className=\"pf-c-dual-list-selector__item-text\">{pack.name}</span>\n      <small>{pack.summary}</small>\n    </TextContent>\n  ));\n\nconst mapComponentToPackage = (component) => ({\n  name: component.props.children[0].props.children,\n  summary: component.props.children[1].props.children,\n});\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const packagesSearchName = useRef();\n  const [packagesAvailable, setPackagesAvailable] = useState([]);\n  const [packagesSelected, setPackagesSelected] = useState([]);\n  const [filterSelected, setFilterSelected] = useState('');\n\n  useEffect(() => {\n    setPackagesSelected(\n      mapPackagesToComponent(getState()?.values?.[input.name] || [])\n    );\n  }, []);\n\n  const packageListChange = (newAvailablePackages, newChosenPackages) => {\n    const chosenPkgs = newChosenPackages.map(mapComponentToPackage);\n    setPackagesAvailable(newAvailablePackages);\n    setPackagesSelected(newChosenPackages);\n    change(input.name, chosenPkgs);\n  };\n\n  const handlePackagesSearch = async () => {\n    const { data } = await getPackages(\n      getState()?.values?.release || 'rhel-8',\n      getState()?.values?.architecture || defaultArch,\n      packagesSearchName.current\n    );\n    setPackagesAvailable(mapPackagesToComponent(data || []));\n  };\n\n  return (\n    <DualListSelector\n      className=\"pf-u-mt-sm\"\n      isSearchable\n      availableOptionsActions={[\n        <Button\n          aria-label=\"Search button for available packages\"\n          key=\"availableSearchButton\"\n          data-testid=\"search-pkgs-button\"\n          onClick={handlePackagesSearch}\n        >\n          Search\n        </Button>,\n      ]}\n      availableOptions={packagesAvailable}\n      availableOptionsTitle=\"Available packages\"\n      chosenOptions={packagesSelected.filter((item) =>\n        mapComponentToPackage(item)?.name?.includes(filterSelected)\n      )}\n      chosenOptionsTitle=\"Chosen packages\"\n      addSelected={packageListChange}\n      removeSelected={packageListChange}\n      addAll={packageListChange}\n      removeAll={(newAvailablePackages) =>\n        packageListChange(\n          newAvailablePackages,\n          packagesSelected.filter(\n            (item) =>\n              !mapComponentToPackage(item)?.name?.includes(filterSelected)\n          )\n        )\n      }\n      onAvailableOptionsSearchInputChanged={(val) => {\n        packagesSearchName.current = val;\n      }}\n      onChosenOptionsSearchInputChanged={(val) => setFilterSelected(val)}\n      filterOption={() => true}\n      id=\"basicSelectorWithSearch\"\n    />\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","export default {\n  name: 'review',\n  title: 'Review',\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional Packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nexport default {\n  title: 'Image Output',\n  name: 'imageOutput',\n  nextStep: 'registration',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter some basic info about the image you are creating</Text>\n      ),\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'release',\n      label: 'Release',\n      options: Object.keys(releaseMapper).map((release) => ({\n        value: release,\n        label: releaseMapper[release],\n      })),\n      initialValue: 'rhel-8.3',\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n      isDisabled: true,\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'outputType',\n      label: 'Output Type',\n      options: [\n        { value: 'rhel-edge-iso', label: 'RHEL for Edge Installer (.iso)' },\n      ],\n      initialValue: 'rhel-edge-iso',\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n      isDisabled: true,\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          A user is required to register the device and make it visible on\n          cloud.redhat.com\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'username',\n      label: 'Username',\n      helperText:\n        'The user name can only consist of letters from a-z, digits, dots, dashes and underscores.',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n        },\n        { type: validatorTypes.MIN_LENGTH, threshold: 5 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'registration-creds',\n      name: 'credentials',\n      initialValue: [],\n      clearedValue: [],\n      validate: [{ type: 'registrationCredsValidator' }],\n    },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { registration, review, packages, imageOutput } from './steps';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\nimport { createNewImage } from '../../store/actions';\nimport { CREATE_NEW_IMAGE_RESET } from '../../store/action-types';\nimport { useDispatch } from 'react-redux';\n\nconst CreateImage = ({ navigateBack }) => {\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const closeAction = () => {\n    navigateBack();\n    dispatch({ type: CREATE_NEW_IMAGE_RESET });\n  };\n  useEffect(() => {\n    (async () => {\n      const userData = (await insights?.chrome?.auth?.getUser()) || {};\n      setUser(() => userData);\n    })();\n  }, []);\n\n  return user ? (\n    <ImageCreator\n      onClose={closeAction}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={(values) => {\n        const payload = {\n          ...values,\n          architecture: 'x86_64',\n        };\n        createNewImage(dispatch, payload, closeAction);\n      }}\n      defaultArch=\"x86_64\"\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Create',\n            },\n            showTitles: true,\n            title: 'Create image',\n            crossroads: ['target-environment', 'release'],\n            description: 'Create RHEL for Edge image',\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [imageOutput, registration, packages, review],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImage.propTypes = {\n  navigateBack: PropTypes.func,\n};\nCreateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default CreateImage;\n"],"sourceRoot":""}