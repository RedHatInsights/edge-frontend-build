{"version":3,"file":"js/357.8b88f670fa20e6d4a0bb.js","mappings":"+RAMMA,EAAgB,SAAH,GAAmD,QAA7CC,aAAgBC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAI,EAAJA,KACvD,GAAgCC,EAAAA,EAAAA,WAAS,GAAM,eAAxCC,EAAQ,KAAEC,EAAW,KAC5B,GAAoCC,EAAAA,EAAAA,YAAWC,EAAAA,SAAvCC,EAAU,EAAVA,WAAYC,EAAW,EAAXA,YACpB,OACE,kBAAC,KAAO,MACL,kBACC,kBAAC,aAAc,KACb,kBAACC,EAAA,GAAM,CACLC,QAAQ,UACRC,KAAK,SACLC,YACGJ,EAAYK,OACbL,EAAYM,WAAWC,YACvBZ,EAEFa,QAAS,WACPR,EAAYS,SAAS,CACnBC,OAAQV,EAAYM,WAAWI,OAC/Bd,YAAAA,GAEJ,GAECJ,GAEH,kBAACS,EAAA,GAAM,CACLE,KAAK,SACLD,QAAQ,YACRM,QAAST,EACTK,WAAYT,GAEXF,GAEH,yBAAKkB,UAAU,8BACb,kBAACV,EAAA,GAAM,CACLE,KAAK,SACLD,QAAQ,OACRM,QAASR,EAAYY,SACrBR,WAAYT,GAEXJ,IAGU,GAIzB,EAEAF,EAAcwB,UAAY,CACxBvB,aAAcwB,IAAAA,MAAgB,CAC5BvB,OAAQuB,IAAAA,KACRtB,OAAQsB,IAAAA,KACRrB,KAAMqB,IAAAA,OAERnB,SAAUmB,IAAAA,MAGZ,MC7DA,GACEC,KAAM,SACNC,MAAO,SACPC,QD0DF,ECzDEC,OAAQ,CACN,CACEH,KAAM,SACNI,UAAW,Y,2DCHXC,EAAgB,WAAM,QAEpBC,EAAoB,QAAb,GAAGf,GADKgB,EAAAA,EAAAA,WAAbhB,mBACkB,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoBW,QAC9BE,OAA0BC,IAAZH,EAAwBI,EAAAA,GAAcJ,GAAW,GACrE,OACE,kBAACK,EAAA,EAAW,KACV,kBAACC,EAAA,EAAI,KAAC,wBACiB,kBAACA,EAAA,EAAI,CAACR,UAAU,KAAKI,GAAmB,WAIrE,EAEA,SACEP,MAAO,8BACPD,KAAM,WACNa,SAAU,eACVC,UAAW,UACXX,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,8BACNgB,MAAO,kBAACX,EAAa,OAEvB,CACED,UAAW,mBACXJ,KAAM,oBACNgB,MAAO,oBACPC,aAAc,GACdC,aAAc,M,2DCpBdC,EAAe,WAAM,YACnBC,GAAwBC,EAAAA,EAAAA,IAC5B,uCAEF,GAA6Bd,EAAAA,EAAAA,WAArBe,EAAM,EAANA,OAAQ/B,EAAQ,EAARA,SACVe,GACM,QAAV,EAAAf,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoBW,WACnBc,EAAwBG,EAAAA,GAAoBC,EAAAA,IACzCC,GACM,QAAV,EAAAlC,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoB+B,mBACnBN,GACGO,EAAAA,EAAAA,IAAYrB,EAAS,GAAF,eAAMsB,EAAAA,KAAiB,OAAKC,EAAAA,OAC/CF,EAAAA,EAAAA,IAAYrB,IAClB,GAA8B3B,EAAAA,EAAAA,UAAS8C,GAAS,eAAzCK,EAAO,KAAEC,EAAU,KAC1B,GAA4BpD,EAAAA,EAAAA,WAAS,GAAM,eAApCqD,EAAM,KAAEC,EAAS,KACxB,GAAgCtD,EAAAA,EAAAA,UAAS2B,GAAQ,eAA1C4B,EAAQ,KAAEC,EAAW,KAmB5B,OACE,kBAACC,EAAA,EAAM,CACLjD,QAAQ,SACRkD,MAAM,OACNC,SArBa,SAACN,GAAM,OAAKC,EAAUD,EAAO,EAsB1CO,SApBa,SAACC,EAAQC,EAAWC,GAC/BA,GASJP,EAAY7B,GACZ2B,GAAU,GACVF,EAAWN,KATTU,EAAYM,GACZR,GAAU,IAEZX,EAAO,UAAWmB,EACpB,EAcIE,WAAYT,EACZF,OAAQA,EACRY,MAAO,CAAEC,YAAa,EAAGC,WAAY,IAEpChB,EAAQiB,KAAI,SAACC,GAAI,OAChB,kBAACC,EAAA,EAAY,CAACC,IAAKF,EAAKG,MAAOA,MAAOH,EAAKG,OACxCH,EAAKhC,MACO,IAIvB,EAEA,SACEf,MAAO,UACPD,KAAM,cACNa,SAAU,kBAAGlB,EAAM,EAANA,OAAM,OACjBA,SAAiB,QAAX,EAANA,EAAQyD,iBAAS,OAAjB,EAAmBC,SAAS,yBAA2B1D,EAAOyD,UAC1D,eACA,UAAU,EAChBjD,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MAAO,kBAACJ,EAAA,EAAI,KAAC,mDAEf,CACER,UAAWW,EAAAA,EAAAA,WACXf,KAAM,UACNgB,MAAO,kBAACG,EAAY,MACpBmC,SAAU,CAAC,CAAElE,KAAMmE,EAAAA,EAAAA,WACnBC,YAAY,GAEd,CACEpD,UAAW,wBACXJ,KAAM,YACN8B,QAAS2B,OAAOC,QAAQC,EAAAA,IAAiBZ,KACvC,+BAA2B,MAAO,CAChCI,MADS,KAETnC,MAFyB,KAG1B,IAEHC,aAAc,CAAC,sBAAuB,oBACtCC,aAAc,GACdoC,SAAU,CAAC,CAAElE,KAAMmE,EAAAA,EAAAA,c,oECxFnBK,EAAiB,WAAM,MAErBC,EAA+B,QAApB,GAAGtE,GADCgB,EAAAA,EAAAA,WAAbhB,YACuBI,cAAM,aAAjB,EAAmBkE,YACvC,OAAO,6BAAKA,aAAW,EAAXA,EAAaC,SAAU,EAAE,OACvC,EAiEA,QA/DiC,WAAH,MAAU,CACtC7D,MAAO,UACPD,KAAM,kBACNa,SAAU,cACVV,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MACE,kBAACJ,EAAA,EAAI,KAAC,sEAKV,CACER,UAAWW,EAAAA,EAAAA,WACXf,KAAM,OACNgB,MAAO,aACP+C,YAAa,aACbC,WA3BJ,kFA4BIV,SAAU,EACR,iBACA,gGAAiB,GAEM,KAFhBH,EAAQ,EAAH,6BAAG,IAEHW,OAAY,8CACbrD,GAAS,wBAECwD,EAAAA,EAAAA,IAAed,GAAM,OAA9B,IAAG,EAAH,KACDe,YAAa,CAAF,oBAEZ,sBAAqB,2CAG/B,CAAE9E,KAAMmE,EAAAA,EAAAA,UACR,CAAEnE,KAAMmE,EAAAA,EAAAA,WAA2BY,UAAW,IAC9CC,EAAAA,IAEFZ,YAAY,GAEd,CACEpD,UAAWW,EAAAA,EAAAA,SACX6B,MAAO,CACLyB,aAAc,OACdC,OAAQ,QAEVtE,KAAM,cACNgB,MACE,kBAACuD,EAAA,EAAI,CAACC,eAAgB,CAAEC,QAAS,+BAC/B,kBAACC,EAAA,EAAQ,KACP,kBAAC9D,EAAA,EAAI,CAACR,UAAW,KAAK,gBAExB,kBAACsE,EAAA,EAAQ,KACP,kBAACd,EAAc,QAIrBG,YAAa,kBACbY,kBAAmB,WACnBrB,SAAU,CAAC,CAAElE,KAAMmE,EAAAA,EAAAA,WAA2BY,UAAW,QAG9D,ECzED,GACElE,MAAO,UACPD,KAAM,kBACNa,SAAU,cACVV,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MACE,kBAACJ,EAAA,EAAI,KAAC,6DAGV,CACER,UAAWW,EAAAA,EAAAA,SACX6B,MAAO,CACL0B,OAAQ,QAEVtE,KAAM,cACNgB,MAAO,cACP+C,YAAa,kBACbT,SAAU,CAAC,CAAElE,KAAMmE,EAAAA,EAAAA,WAA2BY,UAAW,S,0BCpB/D,SACElE,MAAO,sBACPD,KAAM,eACNa,SAAU,WACVV,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MAAO,kBAACJ,EAAA,EAAI,KAAC,sCAEf,CACER,UAAWW,EAAAA,EAAAA,WACXC,MAAO,WACP+C,YAAa,iBACbC,WACE,kBAACY,EAAA,EAAU,KACT,kBAACC,EAAA,EAAc,CAACjF,UAAU,aAAaT,QAAQ,iBAAgB,4EAMnEa,KAAM,WACNsD,SAAU,CACR,CAAElE,KAAMmE,EAAAA,EAAAA,UACR,CACEnE,KAAMmE,EAAAA,EAAAA,QACNuB,QAAS,+BACTC,QACE,2EAEJ,CAAE3F,KAAMmE,EAAAA,EAAAA,WAA2BY,UAAW,IAC9C,CAAE/E,KAAM,8BAEVoE,YAAY,GAEd,CACEpD,UAAW,kBACXJ,KAAM,cACNsD,SAAU,CACR,CAAElE,KAAMmE,EAAAA,EAAAA,UACR,CACEnE,KAAMmE,EAAAA,EAAAA,QACNuB,QAAS,+DAGbtB,YAAY,K,eC9ClB,iBAAgBwB,EAAaC,GAC3B,MAAO,CACLhF,MAAO,sBACPD,KAAM,eACNa,SAAU,oBAAGlB,EAAM,EAANA,OAAM,OACjBA,SAAoC,QAA9B,EAANA,EAAS,mCAA2B,WAA9B,EAAN,EAAsCmE,QAAS,GAC/CnE,SAAAA,EAAS,0BACTA,SAAuC,QAAjC,EAANA,EAAS,sCAA8B,WAAjC,EAAN,EAAyCmE,QAAS,EAC9CkB,EACE,2BACA,iBACF,QAAQ,EACdlE,UAAW,UACXX,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MACE,kBAACJ,EAAA,EAAI,KAAC,gGAMV,CACER,UAAW,oBACXJ,KAAM,2BACNgB,MAAO,kBAACkE,EAAA,EAAqB,CAACD,aAAcA,IAC5ChE,aAAc,GACdC,aAAc,GACdiE,mBAAmB,IAI1B,E,2DCvBKC,EAAkB,SAAH,OAAMjG,EAAO,EAAPA,QAASc,EAAK,EAALA,MAAK,OACvC,kBAACoF,EAAA,EAAK,CACJzF,UAAU,aACVT,QAASA,EACTmG,UAAQ,EACRrF,MAAOA,EACP2C,MAAO,CAAE,gCAAiC,IAC1C,EAGJwC,EAAgBtF,UAAY,CAC1BX,QAASY,IAAAA,OACTE,MAAOF,IAAAA,QAGT,IAiBMwF,EAAqB,WAAM,oBAC/B,GAA6BhF,EAAAA,EAAAA,WAArBhB,EAAQ,EAARA,SAAU+B,EAAM,EAANA,OACZkE,EAAuB,QAAb,EAAGjG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,4BAClC8F,EAAyB,QAAb,EAAGlG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,+BACpC+F,EAA2B,QAAb,EAAGnG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,mBAEtCW,EAAoB,QAAb,EAAGf,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoBW,QAC9BE,OAA0BC,IAAZH,EAAwBI,EAAAA,GAAcJ,GAAW,GAOrE,OALAqF,EAAAA,EAAAA,YAAU,WACRrE,EAAO,yBAAyB,GAChCA,EAAO,wBAAwB,EACjC,GAAG,IAGD,oCACE,kBAACX,EAAA,EAAW,KACV,kBAACC,EAAA,EAAI,KAAC,oBACc,IAClB,kBAACgF,EAAA,EAAO,CACNhD,MAAO,CAAEiD,WAAY,WACrBC,SAAS,SACTC,cAAc,sBACdC,YACE,kBAACC,EAAA,EAAK,KACHT,EAAWzC,KAAI,gBAAG/C,EAAI,EAAJA,KAAI,OACrB,kBAACkG,EAAA,EAAS,CAAChD,IAAKlD,GACd,kBAACY,EAAA,EAAI,KAAEZ,GACG,MAKlB,kBAACd,EAAA,GAAM,CAACC,QAAQ,OAAOmG,UAAQ,GAC5BE,EAAW1B,OAAO,UAAQ,IACJ,IAAtB0B,EAAW1B,OAAe,aAAe,iBAEnC,IAAI,WACP,2BAAItD,GAAgB,YAGT,IAAtBgF,EAAW1B,QAAgB4B,EAAe5B,OAAS,EAClD,kBAACsB,EAAe,CACdjG,QAAQ,SACRc,MAAM,+EA7Dc,WAIzB,IAHHkG,EAAY,UAAH,6CAAG,GACZC,EAAe,UAAH,6CAAG,GACfC,EAAkB,UAAH,6CAAG,GAElB,OAA4B,IAAxBD,EAAatC,QAA2C,IAA3BuC,EAAgBvC,UAG7CsC,EAAatC,OAASqC,EAAUrC,SAI5BqC,EAAUG,OAAM,SAACC,GAAK,OAC5BH,EAAaI,MAAK,SAACC,GAAK,OAAKA,EAAMzG,OAASuG,EAAMvG,IAAI,GAAC,IAE3D,CAgDU0G,CAAsBjB,EAAcD,EAAYE,GAClD,kBAACN,EAAe,CACdjG,QAAQ,UACRc,MAAM,sHAEN,KAGV,EAEA,SACEA,MAAO,6BACPD,KAAM,iBACNa,SAAU,SACVC,UAAW,UACXX,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MAAO,kBAACuE,EAAkB,OAE5B,CACEnF,UAAW,2BACXwC,MAAO,CACLyB,aAAc,OACdC,OAAQ,QAEVtE,KAAM,kBACNiB,aAAc,GACdC,aAAc,IAEhB,CACEd,UAAWW,EAAAA,EAAAA,WACXf,KAAM,iBACNgB,MACE,kBAACJ,EAAA,EAAI,KAAC,kIAMV,CACER,UAAWW,EAAAA,EAAAA,WACXf,KAAM,UACNgB,MACE,kBAACJ,EAAA,EAAI,CAAChB,UAAU,0BACd,kBAAC,KAAuB,CAACA,UAAU,2BAA2B,iGC7HxE,IAAMwF,EAAkB,SAAH,OAAMjG,EAAO,EAAPA,QAASc,EAAK,EAALA,MAAK,OACvC,kBAACoF,EAAA,EAAK,CACJzF,UAAU,aACVT,QAASA,EACTmG,UAAQ,EACRrF,MAAOA,EACP2C,MAAO,CAAE,gCAAiC,IAC1C,EAGJwC,EAAgBtF,UAAY,CAC1BX,QAASY,IAAAA,OACTE,MAAOF,IAAAA,QAGT,IAiBMwF,EAAqB,WAAM,oBAC/B,GAA6BhF,EAAAA,EAAAA,WAArBhB,EAAQ,EAARA,SAAU+B,EAAM,EAANA,OACZkE,EAAuB,QAAb,EAAGjG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,4BAClC8F,EAAyB,QAAb,EAAGlG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,+BACpC+F,EAA2B,QAAb,EAAGnG,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,mBACtCW,EAAoB,QAAb,EAAGf,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoBW,QAC9BE,OAA0BC,IAAZH,EAAwBI,EAAAA,GAAcJ,GAAW,GAOrE,OALAqF,EAAAA,EAAAA,YAAU,WACRrE,EAAO,yBAAyB,GAChCA,EAAO,wBAAwB,EACjC,GAAG,IAGD,oCACE,kBAACX,EAAA,EAAW,KACV,kBAACC,EAAA,EAAI,KAAC,yCACmC,IACvC,kBAACgF,EAAA,EAAO,CACNhD,MAAO,CAAEiD,WAAY,WACrBC,SAAS,SACTC,cAAc,sBACdC,YACE,kBAACC,EAAA,EAAK,KACHT,EAAWzC,KAAI,gBAAG/C,EAAI,EAAJA,KAAI,OACrB,kBAACkG,EAAA,EAAS,CAAChD,IAAKlD,GACd,kBAACY,EAAA,EAAI,KAAEZ,GACG,MAKlB,kBAACd,EAAA,GAAM,CAACC,QAAQ,OAAOmG,UAAQ,GAAC,UACA,IAAtBE,EAAW1B,OAAe,aAAe,iBAE1C,IAAI,kBACA,2BAAItD,GAAgB,YAGhB,IAAtBgF,EAAW1B,QAAgB4B,EAAe5B,OAAS,EAClD,kBAAC,EAAe,CACd3E,QAAQ,SACRc,MAAM,+EA3Dc,WAIzB,IAHHkG,EAAY,UAAH,6CAAG,GACZC,EAAe,UAAH,6CAAG,GACfC,EAAkB,UAAH,6CAAG,GAElB,OAA4B,IAAxBD,EAAatC,QAA2C,IAA3BuC,EAAgBvC,UAG7CsC,EAAatC,OAASqC,EAAUrC,SAI5BqC,EAAUG,OAAM,SAACC,GAAK,OAC5BH,EAAaI,MAAK,SAACC,GAAK,OAAKA,EAAMzG,OAASuG,EAAMvG,IAAI,GAAC,IAE3D,CA8CU0G,CAAsBjB,EAAcD,EAAYE,GAClD,kBAAC,EAAe,CACdvG,QAAQ,UACRc,MAAM,sHAEN,KAGV,EAEA,SACEA,MAAO,6BACPD,KAAM,2BACNa,SAAU,SACVC,UAAW,UACXX,OAAQ,CACN,CACEC,UAAWW,EAAAA,EAAAA,WACXf,KAAM,cACNgB,MAAO,kBAAC,EAAkB,OAE5B,CACEZ,UAAW,6BACXJ,KAAM,kBACNgB,MAAO,oBACPC,aAAc,GACdC,aAAc,K,+GClHPyF,EAAwB,SAAH,GAAgC,QAA1BC,QAAAA,OAAO,IAAG,KAAE,EAAEC,EAAK,EAALA,MAC9CC,GAAIC,EAAAA,EAAAA,IAAeF,GACzB,OAAOG,EAAAA,SAAAA,IAAa,GAAD,OACdC,EAAAA,GAAQ,2BAAmBL,EAAU,WAAH,OAAcA,EAAO,KAAM,IAAE,OAAGE,GAEzE,EAEaI,EAAyB,SAACC,GACrC,OAAOH,EAAAA,SAAAA,KAAc,GAAD,OAAIC,EAAAA,GAAQ,mBAAmB,CACjDG,KAAMD,EAAQnH,KACdqH,IAAKF,EAAQG,SAEjB,EAEaC,EAAuB,SAACJ,GACnC,OAAOH,EAAAA,SAAAA,IAAa,GAAD,OAAIC,EAAAA,GAAQ,2BAAmBE,EAAQK,IAAM,CAC9DJ,KAAMD,EAAQnH,KACdqH,IAAKF,EAAQG,SAEjB,EAEaG,EAAyB,SAACD,GAAE,OACvCR,EAAAA,SAAAA,OAAgB,GAAD,OAAIC,EAAAA,GAAQ,2BAAmBO,GAAK,EAExCE,EAAmB,SAAC1H,GAC/B,OAAOgH,EAAAA,SAAAA,IAAa,GAAD,OAAIC,EAAAA,GAAQ,qCAA6BjH,GAC9D,C,iuBCAA,IAAM2H,EAAY,SAAH,OAAMC,EAAI,EAAJA,KAAI,OACvB,kBAAChH,EAAA,EAAI,CAAChB,UAAU,2DACbgI,EACI,EAGTD,EAAU7H,UAAY,CACpB8H,KAAM7H,IAAAA,QAGR,IAAM8H,EAAgB,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAI,OACpC,kBAACpH,EAAA,EAAW,CAACf,UAAU,2DACrB,kBAACgB,EAAA,EAAI,CAACR,UAAU,MAAM0H,GACtB,kBAAClH,EAAA,EAAI,CAACR,UAAU,SAAS2H,GACb,EAGhBF,EAAc/H,UAAY,CACxBgI,QAAS/H,IAAAA,OACTgI,KAAMhI,IAAAA,QAGR,IAAMiI,EAAuB,SAACC,GAAI,OAChCA,EAAKlF,KAAI,SAACmF,GAAG,O,qWAAA,EACXhG,UAAU,EACViG,WAAW,GACRD,EAAG,GACL,EAECE,EAAW,SAAH,GAAkC,IAA5BC,EAAW,EAAXA,YAAgBC,GAAK,YACvC,GAA6B/H,EAAAA,EAAAA,WAArBe,EAAM,EAANA,OAAQ/B,EAAQ,EAARA,SACRgJ,GAAUC,EAAAA,EAAAA,GAAYF,GAAtBC,MACR,EAAgDE,IAAAA,SAAe,IAAG,eAA3DC,EAAgB,KAAEC,EAAmB,KAC5C,EAA0CF,IAAAA,SAAe,IAAG,eAArDG,EAAa,KAAEC,EAAgB,KACtC,EAAsDJ,IAAAA,SAAe,IAAG,eAAjEK,EAAmB,KAAEC,EAAsB,KAClD,GAAwCpK,EAAAA,EAAAA,WAAS,GAAM,gBAAhDqK,GAAY,MAAEC,GAAe,MACpC,IAA4CtK,EAAAA,EAAAA,WAAS,GAAM,iBAApDuK,GAAc,MAAEC,GAAiB,MACxC,IAAgCxK,EAAAA,EAAAA,UAAS,MAAK,iBAAvCyK,GAAQ,MAAEC,GAAW,MAC5B,IAAoD1K,EAAAA,EAAAA,WAAS,GAAM,iBAA5D2K,GAAkB,MAAEC,GAAqB,MAChD,IAA0C5K,EAAAA,EAAAA,WAAS,GAAM,iBAAlD6K,GAAa,MAAEC,GAAgB,MACtC,IAAoC9K,EAAAA,EAAAA,WAAS,GAAM,iBAA5C+K,GAAU,MAAEC,GAAa,OAEhChE,EAAAA,EAAAA,YAAU,WAAM,QACRiE,GAA2B,QAAV,EAAArK,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB4I,EAAMvI,QAAS,GAC3D6I,GAAiBgB,EAAAA,EAAAA,GAAc7B,EAAqB4B,KAEpD,IAAME,EAAuBC,SAASC,cACpC,yCAIF,OADAF,SAAAA,EAAsBG,iBAAiB,UAAWC,IAC3C,kBACLJ,EAAqBK,oBAAoB,UAAWD,GAAoB,CAC5E,GAAG,KAEHvE,EAAAA,EAAAA,YAAU,WACJqD,KACFoB,KACAnB,IAAgB,GAEpB,GAAG,CAACD,MAEJrD,EAAAA,EAAAA,YAAU,WACR0E,IACF,GAAG,CAACjB,KAEJ,IAAMgB,GAAmB,mCAAG,yGACE,KAAxBtB,EAA0B,kEAIDwB,EAAAA,EAAAA,KACjB,QAAV,EAAA/K,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoBW,UAAW,WACrB,QAAV,EAAAf,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAoB4K,eAAgBlC,EACpCS,GACD,OAJiB,GAIjB,SAJO0B,EAAI,EAAJA,KAAMC,EAAI,EAAJA,KAMTD,EAAM,CAAF,gBAGiB,OAFxBjB,IAAsB,GACtBJ,IAAkB,GAClBR,EAAoB,IAAI,gCAItB8B,EAAKC,MAAQ,KAAG,iBAcjB,GAbDnB,IAAsB,GACtBJ,IAAkB,GAEdwB,EAAkB,KACtBH,EAAKI,SAAQ,WAAWC,GAAJ,EAAJ7K,OACD8I,IACX6B,EAAkBE,EAGtB,IAEMC,GAAelC,EAAcpC,MACjC,SAACuE,GAAM,OAAKA,EAAO/K,OAASwK,EAAKG,GAAiB3K,IAAI,IAGhC,OAApB2K,IAA4BG,EAAW,iBAE0B,OADnEnB,IAAc,GACdhB,EAAoBX,EAAqB,CAACwC,EAAKG,MAAoB,2BAK7C,OADxBhB,IAAc,GACdhB,EAAoB,IAAI,2BAGxBQ,IAAkB,GAElBQ,IAAc,GAAO,QAGjBqB,EAAuBR,EAAKS,QAChC,SAACC,GAAM,OACJtC,EAAcpC,MAAK,SAAC2E,GAAS,OAAKA,EAAUnL,OAASkL,EAAOlL,IAAI,GAAC,IAEtE2I,GACEkB,EAAAA,EAAAA,GAAc7B,EAAqBgD,KAGrCzB,IAAsB,GAAO,4CAC9B,kBA1DwB,mCA4DnBW,GAAsB,SAACkB,GACb,UAAVA,EAAElI,MACJkI,EAAEC,kBACFpC,IAAgB,GAEpB,EAEMoB,GAAwB,WAC5B,GAAKjB,GAAL,CAIA,IAAMkC,EAAcvB,SAASC,cAAc,SAAD,OAC/BZ,GAASmC,KAAI,oCAExBnC,GAASnB,KAAK2C,SAAQ,SAAC1C,GAAG,OACxB6B,SACGyB,eAAe,WAAD,OAAYtD,EAAIlI,OAC9ByL,QAAQ,2CACRC,UAAUC,IAAI,2CAA2C,IAE9DC,YAAW,WACTxC,GAASnB,KAAK2C,SAAQ,SAAC1C,GAAG,OACxB6B,SACGyB,eAAe,WAAD,OAAYtD,EAAIlI,OAC9ByL,QAAQ,2CACRC,UAAUG,OAAO,2CAA2C,GAEnE,GAAG,KACHP,EAAYQ,UAAY1C,GAAS2C,aAEjC1C,GAAY,KArBZ,CAsBF,EAEM2C,GAAe,SAACC,GAKpB,IAJA,IAAMC,EAAgBD,EAAgBvD,EAAmBE,EACrDuD,EAAqBF,EAAgBrD,EAAgBF,EAEnD0D,EAAkB,GACfC,EAAI,EAAGA,EAAIH,EAAcpI,OAAQuI,IAAK,CAC7C,IAAMtB,EAASmB,EAAcG,GACzBtB,EAAO7I,UAAY6I,EAAO5C,YAC5BiE,EAAgBE,KAAKvB,GACrBmB,EAAcK,OAAOF,EAAG,GACxBtB,EAAO7I,UAAW,EAClBmK,IAEJ,CAOA,IACMN,EADgB,IALtBI,GAAqBtC,EAAAA,EAAAA,GAAc,GAAD,eAC7BsC,GACAC,KAKgBI,WACjB,SAACtE,GAAG,OAAKA,EAAIlI,OAASoM,EAAgB,GAAGpM,IAAI,IAG7CiM,GACFtD,GAAoBkB,EAAAA,EAAAA,IAAc,OAAIqC,KACtCrD,EAAiBsD,GACjB7K,EAAOiH,EAAMvI,KAAMmM,KAEnBtD,GAAiBgB,EAAAA,EAAAA,IAAc,OAAIqC,KACnCvD,EAAoBwD,GACpB7K,EAAOiH,EAAMvI,MAAM,OAAIkM,KAEzB7C,GAAY,CACVpB,KAAMmE,EACNb,KAAMU,EAAgB,SAAW,YACjCF,aAAAA,IAEFpC,IAAc,EAChB,EAEM8C,GAAU,SAACR,GACXA,GACFpD,GACEgB,EAAAA,EAAAA,GAAc,GAAD,eACRnB,EAAiBuC,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,MAAC,OAC3CS,MAGPD,GACEkB,EAAAA,EAAAA,IAAc,OAAInB,EAAiBuC,QAAO,SAACyB,GAAC,OAAMA,EAAEvE,SAAS,OAE/D7G,EAAOiH,EAAMvI,KAAM,GAAF,eAAM0I,IAAgB,OAAKE,OAE5CD,GACEkB,EAAAA,EAAAA,GAAc,GAAD,eACRjB,EAAcqC,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,MAAC,OACxCO,MAGPG,GACEgB,EAAAA,EAAAA,IAAc,OAAIjB,EAAcqC,QAAO,SAACyB,GAAC,OAAMA,EAAEvE,SAAS,OAE5D7G,EAAOiH,EAAMvI,KAAM,KAErB2J,IAAc,EAChB,EAcMgD,GAAmB,SAACC,GAaxB,OACE,oCACE,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,GAAS,CACRtF,GAAE,UAAKoF,EAAc,YAAc,SAAQ,cAC3CxN,KAAK,SACL2N,SAlBS,SAAC5J,GAChB4F,EAAuB5F,GAClByJ,IACc,OAAIhE,GACZgC,SAAQ,SAACG,GAChBA,EAAO5C,UACK,KAAVhF,GACA4H,EAAO/K,KAAKgN,cAAc3J,SAASF,EAAM6J,cAC7C,GAEJ,EASQjJ,YAAY,sBACZkJ,QAAS,kBAAMxD,IAAiB,EAAK,EACrCyD,OAAQ,kBAAMzD,IAAiB,EAAM,EACrC0D,UACEjE,IAAkB0D,IAAgBpD,GAAgB,UAAY,GAEhE,aACEoD,EAAc,yBAA2B,sBAE3C,cACEA,EAAc,yBAA2B,wBAG5CA,EACC,kBAAC1N,EAAA,GAAM,CACLO,QAAS2K,GACT/K,YAAauN,EACbzN,QAAQ,UACR,aAAW,iCACX,cAAY,kBAEZ,kBAAC,KAAU,OAGb,kBAACiO,EAAA,EAAc,KACb,kBAAC,KAAU,CAACxN,UAAU,4BAI3BsJ,IAAkB0D,GACjB,kBAAChI,EAAA,EAAU,KACT,kBAACC,EAAA,EAAc,CAAC1F,QAAQ,WAAU,gDAO5C,EAEMkO,GAAsB,SAACvL,EAASwL,GACpC,OAAOxL,EAAQiB,KAAI,SAACgI,EAAQF,GAC1B,OAAOE,EAAO5C,UACZ,kBAACoF,EAAA,EAAwB,CACvBrK,IAAK2H,EACL2C,WAAYzC,EAAO7I,SACnBsF,GAAE,4BAAuBqD,GACzB4C,eAAgB,SAACrC,GAAC,OA/EH,SAAC5I,EAAQqI,EAAOyC,GACrC,GAAIA,EAAU,CACZ,IAAMI,GAAY,OAAI9E,GACtB8E,EAAU7C,GAAO3I,UAAY0G,EAAciC,GAAO3I,SAClD2G,GAAiBgB,EAAAA,EAAAA,GAAc6D,GACjC,KAAO,CACL,IAAMC,GAAe,OAAIjF,GACzBiF,EAAa9C,GAAO3I,UAAYwG,EAAiBmC,GAAO3I,SACxDyG,GAAoBkB,EAAAA,EAAAA,GAAc8D,GACpC,CACF,CAqE+BF,CAAerC,EAAGP,EAAOyC,EAAS,GAEzD,kBAAC3M,EAAA,EAAW,KACV,0BACE6G,GAAE,kBAAauD,EAAO/K,MACtBJ,UAAU,sCAETmL,EAAO/K,MAEV,+BAAQ+K,EAAO6C,WAGjB,IACN,GACF,EAEMC,GAAiB,SAAC/L,GACtB,IAAMgM,EAAehM,EAAQmJ,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,IAAErE,OAClDiK,EAAkBjM,EAAQmJ,QAC9B,SAACyB,GAAC,OAAKA,EAAExK,UAAYwK,EAAEvE,SAAS,IAChCrE,OACF,OAAOiK,EAAkB,EAAC,UACnBA,EAAe,eAAOD,EAAY,6BAClCA,EAAY,YAAIA,EAAe,EAAI,QAAU,OACtD,EAEA,OACE,kBAACE,EAAA,EAAgB,KACf,kBAACC,EAAA,EAAoB,CACnBhO,MAAM,qBACNiO,OAAQL,GAAenF,GACvByF,YAAaxB,IAAiB,IAE9B,kBAACyB,EAAA,EAAoB,CACnBxL,MAAO,CAAE0B,OAAQ,SACjB,cAAY,2BAEXoE,EAAiB5E,OAAS,IAAM4F,GAC/B2D,GAAoB3E,GAAkB,GACpCY,GACF,kBAACzB,EAAa,CACZC,QAAQ,mBACRC,KAAK,qCAELmB,GACF,oCACGQ,IACC,kBAAC9E,EAAA,EAAU,KACT,kBAACC,EAAA,EAAc,CACbjF,UAAU,wBACVT,QAAQ,iBACT,gBAKJuK,IAAc2D,GAAoB3E,GAAkB,GACpDgB,IACC,kBAAC2E,EAAA,EAAO,CACNzO,UAAU,aACV0O,MAAO,CAAE7J,QAAS,aAGtB,kBAACoD,EAAa,CACZC,QAAQ,8BACRC,KAAK,wDAIT,kBAACJ,EAAS,CAACC,KAAK,6DAKtB,kBAAC2G,EAAA,EAA+B,CAAC,aAAW,qBAC1C,kBAACC,EAAA,EAAuB,CACtBnP,YAAaqJ,EAAiB+F,MAAK,SAAC1D,GAAM,OAAKA,EAAO7I,QAAQ,IAC9DzC,QAAS,kBAAMuM,IAAa,EAAK,EACjC,aAAW,eACX0C,eAAe,gBAEf,kBAAC,KAAc,OAEjB,kBAACF,EAAA,EAAuB,CACtBnP,WAAwC,IAA5BqJ,EAAiB5E,OAC7BrE,QAAS,kBAAMgN,IAAQ,EAAK,EAC5B,aAAW,UACXiC,eAAe,WAEf,kBAAC,KAAoB,OAEvB,kBAACF,EAAA,EAAuB,CACtBnP,WAAqC,IAAzBuJ,EAAc9E,OAC1BrE,QAAS,kBAAMgN,IAAQ,EAAM,EAC7B,aAAW,aACXiC,eAAe,cAEf,kBAAC,KAAmB,OAEtB,kBAACF,EAAA,EAAuB,CACtB/O,QAAS,kBAAMuM,IAAa,EAAM,EAClC3M,YAAauJ,EAAc6F,MAAK,SAAC1D,GAAM,OAAKA,EAAO7I,QAAQ,IAC3D,aAAW,kBACXwM,eAAe,mBAEf,kBAAC,KAAa,QAIlB,kBAACT,EAAA,EAAoB,CACnBhO,MAAM,kBACNiO,OAAQL,GAAejF,GACvBuF,YAAaxB,IAAiB,GAC9BW,UAAQ,GAER,kBAACc,EAAA,EAAoB,CACnBxL,MAAO,CAAE0B,OAAQ,SACjB,cAAY,wBAEc,IAAzBsE,EAAc9E,OACb,kBAAC6D,EAAS,CAACC,KAAK,uBACdgB,EAAcqC,QAAO,SAACF,GAAM,OAAKA,EAAO5C,SAAS,IAAErE,OAAS,EAC9DuJ,GAAoBzE,GAAe,GAEnC,kBAACf,EAAa,CACZC,QAAQ,mBACRC,KAAK,uCAOnB,EAEAK,EAAStI,UAAY,CACnBuI,YAAatI,IAAAA,QAGf,U,iCC9bM4H,EAAY,SAAH,OAAMC,EAAI,EAAJA,KAAI,OACvB,kBAAChH,EAAA,EAAI,CAAChB,UAAU,2DACbgI,EACI,EAGTD,EAAU7H,UAAY,CACpB8H,KAAM7H,IAAAA,QAGR,IAAM8H,GAAgB,SAAH,OAAMC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAI,OACpC,kBAACpH,EAAA,EAAW,CAACf,UAAU,2DACrB,kBAACgB,EAAA,EAAI,CAACR,UAAU,MAAM0H,GACtB,kBAAClH,EAAA,EAAI,CAACR,UAAU,SAAS2H,GACb,EAGhBF,GAAc/H,UAAY,CACxBgI,QAAS/H,IAAAA,OACTgI,KAAMhI,IAAAA,QAGR,IAAMiI,GAAuB,SAACC,GAAI,OAChCA,EAAKlF,KAAI,SAACmF,GAAG,MAAM,CACjBhG,UAAU,EACViG,WAAW,EACXnI,KAAMkI,EAAIyG,cAAgBzG,EAAIlI,KAC9B4N,QAAS1F,EAAI0F,QACd,GAAE,EAECgB,GAA2B,SAAH,GAAiB,EAAXvG,YAA4B,IAAZC,GAAK,YACvD,GAA6B/H,EAAAA,EAAAA,WAArBe,EAAM,EAANA,OAAQ/B,EAAQ,EAARA,SACRgJ,GAAUC,EAAAA,EAAAA,GAAYF,GAAtBC,MACR,EAAgDE,IAAAA,SAAe,IAAG,eAA3DC,EAAgB,KAAEC,EAAmB,KAC5C,EAA0CF,IAAAA,SAAe,IAAG,eAArDG,EAAa,KAAEC,EAAgB,KACtC,EAAsDJ,IAAAA,SAAe,IAAG,eAAjEK,EAAmB,KAAEC,EAAsB,KAClD,GAAwCpK,EAAAA,EAAAA,WAAS,GAAM,eAAhDqK,EAAY,KAAEC,EAAe,KACpC,IAA4CtK,EAAAA,EAAAA,WAAS,GAAM,iBAApDuK,GAAc,MAAEC,GAAiB,MACxC,IAAgCxK,EAAAA,EAAAA,UAAS,MAAK,iBAAvCyK,GAAQ,MAAEC,GAAW,MAC5B,IAAoD1K,EAAAA,EAAAA,WAAS,GAAM,iBAA5D2K,GAAkB,MAAEC,GAAqB,MAChD,IAA0C5K,EAAAA,EAAAA,WAAS,GAAM,iBAAlD6K,GAAa,MAAEC,GAAgB,MACtC,IAAoC9K,EAAAA,EAAAA,WAAS,GAAM,iBAA5C+K,GAAU,MAAEC,GAAa,OAEhChE,EAAAA,EAAAA,YAAU,WAAM,QACRiE,GAA2B,QAAV,EAAArK,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB4I,EAAMvI,QAAS,GAC3D6I,GAAiBgB,EAAAA,EAAAA,GAAc7B,GAAqB4B,KAEpD,IAAME,EAAuBC,SAASC,cACpC,yCAIF,OADAF,SAAAA,EAAsBG,iBAAiB,UAAWC,IAC3C,kBACLJ,EAAqBK,oBAAoB,UAAWD,GAAoB,CAC5E,GAAG,KAEHvE,EAAAA,EAAAA,YAAU,WACJqD,IACFoB,KACAnB,GAAgB,GAEpB,GAAG,CAACD,KAEJrD,EAAAA,EAAAA,YAAU,WACR0E,IACF,GAAG,CAACjB,KAEJ,IAAMgB,GAAmB,mCAAG,mGACE,KAAxBtB,EAA0B,kEAIX+F,EAAAA,EAAAA,IACsC,QADzB,GACnB,QAAV,EAAAtP,WAAU,OAAQ,QAAR,EAAV,EAAYI,cAAM,WAAR,EAAV,EAAqB,8BAA+B,UAAE,aAAvD,EAA0DoD,KACxD,YAAM,SAAHsE,GAAa,IAElByB,GACD,OAI4B,GATvB0B,EAAO,EAAH,KAOVrB,IAAkB,GAClBQ,IAAc,GACdJ,IAAsB,GAEjBiB,EAAM,CAAF,gBAEiB,OADxBjB,IAAsB,GACtBZ,EAAoB,IAAI,gCAItB6B,EAAK1G,OAAS,KAAG,iBAclB,GAbDyF,IAAsB,GACtBJ,IAAkB,GAEdwB,EAAkB,KACtBH,EAAKI,SAAQ,WAAmBC,GAAJ,EAAZ8D,eACO7F,IACnB6B,EAAkBE,EAGtB,IAEMC,GAAelC,EAAcpC,MACjC,SAACuE,GAAM,OAAKA,EAAO/K,OAASwK,EAAKG,GAAiB3K,IAAI,IAEhC,OAApB2K,IAA4BG,EAAW,iBAE0B,OADnEnB,IAAc,GACdhB,EAAoBX,GAAqB,CAACwC,EAAKG,MAAoB,2BAI7C,OAAxBhC,EAAoB,IAAI,2BAIpBqC,EAAuBR,EAAKS,QAChC,SAACC,GAAM,OACJtC,EAAcpC,MAAK,SAAC2E,GAAS,OAAKA,EAAUnL,OAASkL,EAAOlL,IAAI,GAAC,IAEtE2I,GACEkB,EAAAA,EAAAA,GAAc7B,GAAqBgD,KAGrCzB,IAAsB,GAAO,4CAC9B,kBAxDwB,mCA0DnBW,GAAsB,SAACkB,GACb,UAAVA,EAAElI,MACJkI,EAAEC,kBACFpC,GAAgB,GAEpB,EAEMoB,GAAwB,WAC5B,GAAKjB,GAAL,CAIA,IAAMkC,EAAcvB,SAASC,cAAc,SAAD,OAC/BZ,GAASmC,KAAI,oCAExBnC,GAASnB,KAAK2C,SAAQ,SAAC1C,GAAG,OACxB6B,SACGyB,eAAe,WAAD,OAAYtD,EAAIlI,OAC9ByL,QAAQ,2CACRC,UAAUC,IAAI,2CAA2C,IAE9DC,YAAW,WACTxC,GAASnB,KAAK2C,SAAQ,SAAC1C,GAAG,OACxB6B,SACGyB,eAAe,WAAD,OAAYtD,EAAIlI,OAC9ByL,QAAQ,2CACRC,UAAUG,OAAO,2CAA2C,GAEnE,GAAG,KACHP,EAAYQ,UAAY1C,GAAS2C,aAEjC1C,GAAY,KArBZ,CAsBF,EAEM2C,GAAe,SAACC,GAKpB,IAJA,IAAMC,EAAgBD,EAAgBvD,EAAmBE,EACrDuD,EAAqBF,EAAgBrD,EAAgBF,EAEnD0D,EAAkB,GACfC,EAAI,EAAGA,EAAIH,EAAcpI,OAAQuI,IAAK,CAC7C,IAAMtB,EAASmB,EAAcG,GACzBtB,EAAO7I,UAAY6I,EAAO5C,YAC5BiE,EAAgBE,KAAKvB,GACrBmB,EAAcK,OAAOF,EAAG,GACxBtB,EAAO7I,UAAW,EAClBmK,IAEJ,CAOA,IACMN,EADgB,IALtBI,GAAqBtC,EAAAA,EAAAA,GAAc,GAAD,eAC7BsC,GACAC,KAKgBI,WACjB,SAACtE,GAAG,OAAKA,EAAIlI,OAASoM,EAAgB,GAAGpM,IAAI,IAG7CiM,GACFtD,GAAoBkB,EAAAA,EAAAA,IAAc,OAAIqC,KACtCrD,EAAiBsD,GACjB7K,EAAOiH,EAAMvI,KAAMmM,KAEnBtD,GAAiBgB,EAAAA,EAAAA,IAAc,OAAIqC,KACnCvD,EAAoBwD,GACpB7K,EAAOiH,EAAMvI,MAAM,OAAIkM,KAEzB7C,GAAY,CACVpB,KAAMmE,EACNb,KAAMU,EAAgB,SAAW,YACjCF,aAAAA,IAEFpC,IAAc,EAChB,EAEM8C,GAAU,SAACR,GACXA,GACFpD,GACEgB,EAAAA,EAAAA,GAAc,GAAD,eACRnB,EAAiBuC,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,MAAC,OAC3CS,MAGPD,GACEkB,EAAAA,EAAAA,IAAc,OAAInB,EAAiBuC,QAAO,SAACyB,GAAC,OAAMA,EAAEvE,SAAS,OAE/D7G,EAAOiH,EAAMvI,KAAM,GAAF,eAAM0I,IAAgB,OAAKE,OAE5CD,GACEkB,EAAAA,EAAAA,GAAc,GAAD,eACRjB,EAAcqC,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,MAAC,OACxCO,MAGPG,GACEgB,EAAAA,EAAAA,IAAc,OAAIjB,EAAcqC,QAAO,SAACyB,GAAC,OAAMA,EAAEvE,SAAS,OAE5D7G,EAAOiH,EAAMvI,KAAM,KAErB2J,IAAc,EAChB,EAcMgD,GAAmB,SAACC,GAaxB,OACE,oCACE,kBAACC,EAAA,EAAU,KACT,kBAACC,EAAA,GAAS,CACRtF,GAAE,UAAKoF,EAAc,YAAc,SAAQ,cAC3CxN,KAAK,QACL2N,SAlBS,SAAC5J,GAChB4F,EAAuB5F,GAClByJ,IACc,OAAIhE,GACZgC,SAAQ,SAACG,GAChBA,EAAO5C,UACK,KAAVhF,GACA4H,EAAO/K,KAAKgN,cAAc3J,SAASF,EAAM6J,cAC7C,GAEJ,EASQjJ,YAAY,sBACZkJ,QAAS,kBAAMxD,IAAiB,EAAK,EACrCyD,OAAQ,kBAAMzD,IAAiB,EAAM,EACrC0D,UACEjE,IAAkB0D,IAAgBpD,GAAgB,UAAY,GAEhE,aACEoD,EAAc,yBAA2B,sBAE3C,cACEA,EAAc,yBAA2B,wBAG5CA,EACC,kBAAC1N,EAAA,GAAM,CACLO,QAAS2K,GACT/K,YAAauN,EACbzN,QAAQ,UACR,aAAW,iCACX,cAAY,kBAEZ,kBAAC,KAAc,OAGjB,kBAACiO,EAAA,EAAc,KACb,kBAAC,KAAc,CAACxN,UAAU,4BAI/BsJ,IAAkB0D,GACjB,kBAAChI,EAAA,EAAU,KACT,kBAACC,EAAA,EAAc,CAAC1F,QAAQ,WAAU,gDAO5C,EAEMkO,GAAsB,SAACvL,EAASwL,GACpC,OAAOxL,EAAQiB,KAAI,SAACgI,EAAQF,GAC1B,OAAOE,EAAO5C,UACZ,kBAACoF,EAAA,EAAwB,CACvBrK,IAAK2H,EACL2C,WAAYzC,EAAO7I,SACnBsF,GAAE,4BAAuBqD,GACzB4C,eAAgB,SAACrC,GAAC,OA/EH,SAAC5I,EAAQqI,EAAOyC,GACrC,GAAIA,EAAU,CACZ,IAAMI,GAAY,OAAI9E,GACtB8E,EAAU7C,GAAO3I,UAAY0G,EAAciC,GAAO3I,SAClD2G,GAAiBgB,EAAAA,EAAAA,GAAc6D,GACjC,KAAO,CACL,IAAMC,GAAe,OAAIjF,GACzBiF,EAAa9C,GAAO3I,UAAYwG,EAAiBmC,GAAO3I,SACxDyG,GAAoBkB,EAAAA,EAAAA,GAAc8D,GACpC,CACF,CAqE+BF,CAAerC,EAAGP,EAAOyC,EAAS,GAEzD,kBAAC3M,EAAA,EAAW,KACV,0BACE6G,GAAE,kBAAauD,EAAO/K,MACtBJ,UAAU,sCAETmL,EAAO/K,MAEV,+BAAQ+K,EAAO6C,WAGjB,IACN,GACF,EAEMC,GAAiB,SAAC/L,GACtB,IAAMgM,EAAehM,EAAQmJ,QAAO,SAACyB,GAAC,OAAKA,EAAEvE,SAAS,IAAErE,OAClDiK,EAAkBjM,EAAQmJ,QAC9B,SAACyB,GAAC,OAAKA,EAAExK,UAAYwK,EAAEvE,SAAS,IAChCrE,OACF,OAAOiK,EAAkB,EAAC,UACnBA,EAAe,eAAOD,EAAY,6BAClCA,EAAY,YAAIA,EAAe,EAAI,QAAU,OACtD,EAEA,OACE,kBAACE,EAAA,EAAgB,KACf,kBAACC,EAAA,EAAoB,CACnBhO,MAAM,qBACNiO,OAAQL,GAAenF,GACvByF,YAAaxB,IAAiB,IAE9B,kBAACyB,EAAA,EAAoB,CACnBxL,MAAO,CAAE0B,OAAQ,SACjB,cAAY,2BAEXoE,EAAiB5E,OAAS,IAAM4F,GAC/B2D,GAAoB3E,GAAkB,GACpCY,GACF,kBAAC,GAAa,CACZxB,QAAQ,mBACRC,KAAK,qCAELmB,GACF,oCACGQ,IACC,kBAAC9E,EAAA,EAAU,KACT,kBAACC,EAAA,EAAc,CACbjF,UAAU,wBACVT,QAAQ,iBACT,gBAKJuK,IAAc2D,GAAoB3E,GAAkB,GACpDgB,IACC,kBAAC2E,EAAA,EAAO,CACNzO,UAAU,aACV0O,MAAO,CAAE7J,QAAS,aAItB,kBAAC,GAAa,CACZqD,QAAQ,8BACRC,KAAK,wDAIT,kBAAC,EAAS,CAACH,KAAK,6DAKtB,kBAAC2G,EAAA,EAA+B,CAAC,aAAW,qBAC1C,kBAACC,EAAA,EAAuB,CACtBnP,YAAaqJ,EAAiB+F,MAAK,SAAC1D,GAAM,OAAKA,EAAO7I,QAAQ,IAC9DzC,QAAS,kBAAMuM,IAAa,EAAK,EACjC,aAAW,eACX0C,eAAe,gBAEf,kBAAC,KAAc,OAEjB,kBAACF,EAAA,EAAuB,CACtBnP,WAAwC,IAA5BqJ,EAAiB5E,OAC7BrE,QAAS,kBAAMgN,IAAQ,EAAK,EAC5B,aAAW,UACXiC,eAAe,WAEf,kBAAC,KAAoB,OAEvB,kBAACF,EAAA,EAAuB,CACtBnP,WAAqC,IAAzBuJ,EAAc9E,OAC1BrE,QAAS,kBAAMgN,IAAQ,EAAM,EAC7B,aAAW,aACXiC,eAAe,cAEf,kBAAC,KAAmB,OAEtB,kBAACF,EAAA,EAAuB,CACtB/O,QAAS,kBAAMuM,IAAa,EAAM,EAClC3M,YAAauJ,EAAc6F,MAAK,SAAC1D,GAAM,OAAKA,EAAO7I,QAAQ,IAC3D,aAAW,kBACXwM,eAAe,mBAEf,kBAAC,KAAa,QAIlB,kBAACT,EAAA,EAAoB,CACnBhO,MAAM,kBACNiO,OAAQL,GAAejF,GACvBuF,YAAaxB,IAAiB,GAC9BW,UAAQ,GAER,kBAACc,EAAA,EAAoB,CACnBxL,MAAO,CAAE0B,OAAQ,SACjB,cAAY,wBAEc,IAAzBsE,EAAc9E,OACb,kBAAC,EAAS,CAAC8D,KAAK,uBACdgB,EAAcqC,QAAO,SAACF,GAAM,OAAKA,EAAO5C,SAAS,IAAErE,OAAS,EAC9DuJ,GAAoBzE,GAAe,GAEnC,kBAAC,GAAa,CACZd,QAAQ,mBACRC,KAAK,uCAOnB,EAEA6G,GAAyB9O,UAAY,CACnCuI,YAAatI,IAAAA,QAGf,Y,6nBCtdO,IAAM+O,GAA6B,WAAH,OAAS,SAAC3L,EAAO4L,GACtD,GAAqB,IAAjB5L,EAAMW,OACR,MAAO,CAAEkL,SAAU,yCAErB,IAAIC,EAAO,CAAC,EAaZ,OAXE9L,EAAME,SAAS,kBACQ5C,IAAtBsO,EAAgB,UAAyC,KAAtBA,EAAgB,WAEpDE,EAAO,SAAKA,GAAI,IAAEC,SAAU,eAG5B/L,EAAME,SAAS,gBACM5C,IAApBsO,EAAc,QAAuC,KAApBA,EAAc,SAEhDE,EAAO,SAAKA,GAAI,IAAEE,OAAQ,cAErBF,CACT,CAAC,EAgED,SA9D0B,SAAC3G,GACzB,OAAwBE,EAAAA,EAAAA,GAAYF,GAA5BC,EAAK,EAALA,MAAOkC,EAAI,EAAJA,KACT2E,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,EAASC,GACRhH,EAAMwE,SACJuC,EAAO,kBACC/G,EAAMpF,OAAK,CAAEoM,EAAMC,cAAchI,KACrCe,EAAMpF,MAAM8H,QAAO,SAACjI,GAAI,OAAKA,IAASuM,EAAMC,cAAchI,EAAE,IAEpE,GACA,CAACe,EAAMwE,WAGM0C,GAAkBjH,EAAAA,EAAAA,GAAY,CAAExI,KAAM,aAA7CuI,MACOmH,GAAgBlH,EAAAA,EAAAA,GAAY,CAAExI,KAAM,WAA3CuI,MAER,OACE,kBAACoH,GAAA,EAAS,CACR3O,MAAM,8CACN4O,yBAAuB,EACvBC,iBAAe,EACfrM,YAAU,EACVsM,SAAO,GAEP,kBAACC,GAAA,EAAQ,CACP/O,MAAM,WACNwG,GAAG,WACHwI,UAAWzH,EAAMpF,MAAME,SAAS,YAChC0J,SAAUqC,IAEX7G,EAAMpF,MAAME,SAAS,YACpB,kBAACsM,GAAA,EAAS,CACRM,kBACExF,EAAKyF,YAAoCzP,IAA3BgK,EAAK0F,MAAgB,SAC/B1F,EAAK0F,MAAgB,cACrB1P,GAGN,kBAACqM,EAAA,IAAS,QAAC1N,KAAK,YAAeqQ,KAE/B,KACJ,kBAACM,GAAA,EAAQ,CACP/O,MAAM,MACNwG,GAAG,SACHwI,UAAWzH,EAAMpF,MAAME,SAAS,UAChC0J,SAAUqC,IAEX7G,EAAMpF,MAAME,SAAS,UACpB,kBAACsM,GAAA,EAAS,CACRM,kBACExF,EAAKyF,YAAkCzP,IAAzBgK,EAAK0F,MAAc,OAC7B1F,EAAK0F,MAAc,YACnB1P,GAGN,kBAAC2P,GAAA,GAAaV,IAEd,KAGV,E,gBC1EMW,GAA6B,WAAH,OAC9B,kBAACzL,EAAA,EAAU,CAAChF,UAAU,cACpB,kBAACiF,EAAA,EAAc,CAACjF,UAAU,aAAaT,QAAQ,UAAUmR,SAAO,GAAC,2HAElB,6BAAM,8FAI1C,EAGTC,GAAmB,CACvB,mBACE,6DACF,sBACE,oFAGEC,GAAsB,SAAClI,GAC3B,IAAQ/I,GAAagB,EAAAA,EAAAA,WAAbhB,SACAgJ,GAAUC,EAAAA,EAAAA,GAAYF,GAAtBC,MACF6G,GAAiBC,EAAAA,EAAAA,cACrB,SAACC,EAASC,GACRhH,EAAMwE,SACJuC,EAAO,kBACC/G,EAAMpF,OAAK,CAAEoM,EAAMC,cAAchI,KACrCe,EAAMpF,MAAM8H,QAAO,SAACjI,GAAI,OAAKA,IAASuM,EAAMC,cAAchI,EAAE,IAEpE,GACA,CAACe,EAAMwE,WAGT,OACE,kBAAC4C,GAAA,EAAS,CACR3O,MAAM,cACN4O,yBAAuB,EACvBC,iBAAe,EACfrM,YAAU,EACVsM,SAAO,GAENxH,EAAMxG,QAAQiB,KAAI,WAAmB8H,GAAK,QAArB1H,EAAK,EAALA,MAAOnC,EAAK,EAALA,MAAK,OAChC,kBAAC,EAAAyP,SAAQ,CAACvN,IAAK2H,GACb,kBAACkF,GAAA,EAAQ,CACP/O,MAAOA,EACPwG,GAAIrE,EACJ6M,UAAWzH,EAAMpF,MAAME,SAASF,GAChC4J,SAAUqC,EACV/P,WAAsB,qBAAV8D,IAEd,kBAACxC,EAAA,EAAW,KACC,QAAV,EAAApB,WAAU,OAAe,QAAf,EAAV,EAAYmR,qBAAa,OAAzB,EAA2BC,UAClB,wBAAVxN,EACE,kBAACkN,GAA0B,MAE3B,kBAACzL,EAAA,EAAU,CAAChF,UAAU,yBACpB,kBAACiF,EAAA,EAAc,CAAC1F,QAAQ,iBACrBoR,GAAiBpN,MAKf,wBAAVA,GACC,kBAAC,EAAAsN,SAAQ,KACP,kBAAC7P,EAAA,EAAI,CAACR,UAAWwQ,EAAAA,EAAAA,OACf,kBAAChQ,EAAA,EAAI,CACHiQ,OAAO,SACPC,KAAK,0OACL1Q,UAAWwQ,EAAAA,EAAAA,EACXG,eAAa,GACd,gCAEC,kBAAC,MAAmB,CAACnR,UAAU,kBAK9B,IAInB,EAEA4Q,GAAoB1Q,UAAY,CAC9ByI,MAAOxI,IAAAA,MACP+B,QAAS/B,IAAAA,QACPA,IAAAA,MAAgB,CACdoD,MAAOpD,IAAAA,OACPiB,MAAOjB,IAAAA,WAKb,Y,+NC5DA,SArCsB,SAACuI,GACrB,OAAqCE,EAAAA,EAAAA,G,uWAAY,EAC/CxI,KAAM,eACHsI,IAFUoH,EAAW,EAAlBnH,MAAoBkC,EAAI,EAAJA,KAI5B,OACE,kBAACkF,GAAA,EAAS,KACR,kBAACA,GAAA,EAAS,CACR3O,MAAM,UACNiP,kBAAmBxF,EAAK0F,MACxBhD,UAAW1C,EAAK0F,OAAS1F,EAAKuG,QAAU,QAAU,UAClDxN,YAAU,GAEV,kBAAC4M,GAAA,IAAQ,QACPxQ,UAAU,cACV4H,GAAG,cACHzD,YAAY,6BACR2L,KAGR,kBAAC,EAAAe,SAAQ,KACP,kBAAC7P,EAAA,EAAI,CAACR,UAAWwQ,EAAAA,EAAAA,OACf,kBAAChQ,EAAA,EAAI,CACHiQ,OAAO,SACPC,KAAK,yTACLC,eAAa,EACb3Q,UAAWwQ,EAAAA,EAAAA,GACZ,4BAEC,kBAAC,MAAmB,CAAChR,UAAU,kBAM3C,EC7CO,IAAMqR,GAAoB,CAC/B,OACA,MACA,SACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,QACA,QACA,OACA,WACA,OACA,OACA,OACA,OACA,WACA,QACA,SACA,MACA,MACA,WACA,UACA,UACA,SACA,QACA,UACA,OACA,QACA,MACA,QACA,WACA,QACA,OACA,UACA,UACA,MACA,eACA,OACA,UACA,WACA,OACA,MACA,MACA,MACA,QACA,MACA,UACA,MACA,MACA,WACA,WACA,YACA,WACA,SACA,MACA,QACA,SACA,SACA,OACA,OACA,YACA,MACA,cACA,MACA,UACA,kBACA,SACA,QACA,SACA,QACA,OACA,UACA,YACA,YACA,OACA,QACA,WACA,UACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,WACA,UACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,SACA,UACA,WACA,YACA,SACA,OACA,YACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,QACA,OACA,WACA,YACA,cACA,UACA,UACA,UACA,QACA,SACA,OACA,WACA,UACA,SACA,aACA,OACA,gBACA,QACA,QACA,OACA,UACA,aACA,MACA,QACA,UACA,UACA,SACA,UACA,UACA,gBACA,UACA,UACA,gBACA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","sources":["webpack:///./src/components/form/CustomSubmitButtons.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/Routes/ImageManager/steps/repositories.js","webpack:///./src/Routes/ImageManager/steps/customPackage.js","webpack:///./src/Routes/ImageManager/steps/additionalCustomPackages.js","webpack:///./src/api/repositories/index.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/AdditionalCustomPackages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/form/constants/reservedUsernames.js","webpack:///./src/components/form/validators.js","webpack:///./src/components/form/CustomPackageTextArea.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js","webpack:///./src/components/form/WizardRepositoryTable.js","webpack:///./src/utils/apiWithToast.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../../../components/form/CustomSubmitButtons';\n\nexport default {\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../../constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional Red Hat packages',\n  name: 'packages',\n  nextStep: 'repositories',\n  substepOf: 'Content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Select, SelectOption, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  DEFAULT_RELEASE,\n  TEMPORARY_RELEASE,\n  temporaryReleases,\n  supportedReleases,\n} from '../../../constants';\nimport { getReleases } from '../../../utils';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useFeatureFlags } from '../../../utils';\n\nconst ReleaseLabel = () => {\n  const temporaryReleasesFlag = useFeatureFlags(\n    'fleet-management.temporary-releases'\n  );\n  const { change, getState } = useFormApi();\n  const release =\n    getState()?.values?.release ||\n    (temporaryReleasesFlag ? TEMPORARY_RELEASE : DEFAULT_RELEASE);\n  const releases =\n    getState()?.values?.release_options ||\n    (temporaryReleasesFlag\n      ? getReleases(release, [...supportedReleases, ...temporaryReleases])\n      : getReleases(release));\n  const [options, setOptions] = useState(releases);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(release);\n\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const onSelect = (_event, selection, isPlaceholder) => {\n    if (isPlaceholder) clearSelection();\n    else {\n      setSelected(selection);\n      setIsOpen(false);\n    }\n    change('release', selection);\n  };\n\n  const clearSelection = () => {\n    setSelected(release);\n    setIsOpen(false);\n    setOptions(releases);\n  };\n\n  return (\n    <Select\n      variant=\"single\"\n      width=\"100%\"\n      onToggle={onToggle}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      style={{ paddingLeft: 0, marginLeft: 0 }}\n    >\n      {options.map((item) => (\n        <SelectOption key={item.value} value={item.value}>\n          {item.label}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information about your image.</Text>,\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'release',\n      label: <ReleaseLabel />,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Flex, FlexItem, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { checkImageName } from '../../../api/images';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { nameValidator } from '../../../utils';\n\nconst helperText =\n  'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).';\n\nconst CharacterCount = () => {\n  const { getState } = useFormApi();\n  const description = getState().values?.description;\n  return <h1>{description?.length || 0}/250</h1>;\n};\n\nconst getImageSetDetailsSchema = () => ({\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      helperText: helperText,\n      validate: [\n        // Define async validator inline here, so that results are not cached\n        async (value = '') => {\n          // Do not fire validation request for empty name\n          if (value.length === 0) {\n            return undefined;\n          }\n          const resp = await checkImageName(value);\n          if (resp.ImageExists) {\n            // Async validator has to throw error, not return it\n            throw 'Name already exists';\n          }\n        },\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'description',\n      label: (\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Text component={'b'}>Description</Text>\n          </FlexItem>\n          <FlexItem>\n            <CharacterCount />\n          </FlexItem>\n        </Flex>\n      ),\n      placeholder: 'Add description',\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n});\n\nexport default getImageSetDetailsSchema;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        height: '25vh',\n      },\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'System registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to log into your system.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      helperText: (\n        <HelperText>\n          <HelperTextItem className=\"pf-u-mt-xs\" variant=\"indeterminate\">\n            Can only contain letters, numbers, hyphens ( - ), and underscores( _\n            ).\n          </HelperTextItem>\n        </HelperText>\n      ),\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n          message:\n            'Can only contain letters, numbers, hyphens ( - ), and underscores( _ ).',\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        { type: 'reservedUsernameValidator' },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport WizardRepositoryTable from '../../../components/form/WizardRepositoryTable';\n\nexport default (featureFlag, locationProp) => {\n  return {\n    title: 'Custom repositories',\n    name: 'repositories',\n    nextStep: ({ values }) =>\n      values?.['third-party-repositories']?.length > 0 ||\n      values?.['show-custom-packages'] ||\n      values?.['initial-custom-repositories']?.length > 0\n        ? featureFlag\n          ? 'additionalCustomPackages'\n          : 'customPackages'\n        : 'review',\n    substepOf: 'Content',\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'description',\n        label: (\n          <Text>\n            Choose from linked custom repositories from which to search and add\n            packages to this image.\n          </Text>\n        ),\n      },\n      {\n        component: 'custom-repo-table',\n        name: 'third-party-repositories',\n        label: <WizardRepositoryTable locationProp={locationProp} />,\n        initialValue: [],\n        clearedValue: [],\n        initializeOnMount: true,\n      },\n    ],\n  };\n};\n","import React, { useEffect } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport { releaseMapper } from '../../../constants';\n\nconst CustomRepoAlert = ({ variant, title }) => (\n  <Alert\n    className=\"pf-u-mt-lg\"\n    variant={variant}\n    isInline\n    title={title}\n    style={{ '--pf-c-content--h4--MarginTop': 0 }}\n  />\n);\n\nCustomRepoAlert.propTypes = {\n  variant: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst checkRepoNameMismatch = (\n  initRepos = [],\n  currentRepos = [],\n  currentPackages = []\n) => {\n  if (currentRepos.length === 0 && currentPackages.length === 0) {\n    return false;\n  }\n  if (currentRepos.length < initRepos.length) {\n    return true;\n  }\n  // Mismatch if any initial repo is no longer selected\n  return !initRepos.every((iRepo) =>\n    currentRepos.find((cRepo) => cRepo.name === iRepo.name)\n  );\n};\n\nconst CustomPackageLabel = () => {\n  const { getState, change } = useFormApi();\n  const addedRepos = getState()?.values?.['third-party-repositories'];\n  const initialRepos = getState()?.values?.['initial-custom-repositories'];\n  const customPackages = getState()?.values?.['custom-packages'];\n\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n\n  useEffect(() => {\n    change('validate-custom-repos', true);\n    change('show-custom-packages', true);\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <Text>\n          Add packages from{' '}\n          <Popover\n            style={{ visibility: 'visible' }}\n            position=\"bottom\"\n            headerContent=\"Custom Repositories\"\n            bodyContent={\n              <Stack>\n                {addedRepos.map(({ name }) => (\n                  <StackItem key={name}>\n                    <Text>{name}</Text>\n                  </StackItem>\n                ))}\n              </Stack>\n            }\n          >\n            <Button variant=\"link\" isInline>\n              {addedRepos.length} custom{' '}\n              {addedRepos.length === 1 ? 'repository' : 'repositories'}\n            </Button>\n          </Popover>{' '}\n          to your <b>{releaseName}</b> image.\n        </Text>\n      </TextContent>\n      {addedRepos.length === 0 && customPackages.length > 0 ? (\n        <CustomRepoAlert\n          variant=\"danger\"\n          title=\"No custom repositories linked. Clear custom packages or link a repository.\"\n        />\n      ) : checkRepoNameMismatch(initialRepos, addedRepos, customPackages) ? (\n        <CustomRepoAlert\n          variant=\"warning\"\n          title=\"Linked custom repositories were removed when these packages were added. Ensure the package list is still correct.\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default {\n  title: 'Additional custom packages',\n  name: 'customPackages',\n  nextStep: 'review',\n  substepOf: 'Content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <CustomPackageLabel />,\n    },\n    {\n      component: 'custom-package-text-area',\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'custom-packages',\n      initialValue: [],\n      clearedValue: [],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packageDetails',\n      label: (\n        <Text>\n          Specify individual packages by exact name and casing, with no\n          whitespace, one entry to a line, and can include hyphens ( - ).\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning',\n      label: (\n        <Text className=\"pf-u-warning-color-200\">\n          <ExclamationTriangleIcon className=\"pf-u-warning-color-100\" />\n          &nbsp; Packages names that do not have exact name and casing will not\n          be included in the image.\n        </Text>\n      ),\n    },\n  ],\n};\n","import React, { useEffect } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../../constants';\n\nconst CustomRepoAlert = ({ variant, title }) => (\n  <Alert\n    className=\"pf-u-mt-lg\"\n    variant={variant}\n    isInline\n    title={title}\n    style={{ '--pf-c-content--h4--MarginTop': 0 }}\n  />\n);\n\nCustomRepoAlert.propTypes = {\n  variant: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst checkRepoNameMismatch = (\n  initRepos = [],\n  currentRepos = [],\n  currentPackages = []\n) => {\n  if (currentRepos.length === 0 && currentPackages.length === 0) {\n    return false;\n  }\n  if (currentRepos.length < initRepos.length) {\n    return true;\n  }\n  // Mismatch if any initial repo is no longer selected\n  return !initRepos.every((iRepo) =>\n    currentRepos.find((cRepo) => cRepo.name === iRepo.name)\n  );\n};\n\nconst CustomPackageLabel = () => {\n  const { getState, change } = useFormApi();\n  const addedRepos = getState()?.values?.['third-party-repositories'];\n  const initialRepos = getState()?.values?.['initial-custom-repositories'];\n  const customPackages = getState()?.values?.['custom-packages'];\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n\n  useEffect(() => {\n    change('validate-custom-repos', true);\n    change('show-custom-packages', true);\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <Text>\n          Search and choose packages from linked{' '}\n          <Popover\n            style={{ visibility: 'visible' }}\n            position=\"bottom\"\n            headerContent=\"Custom Repositories\"\n            bodyContent={\n              <Stack>\n                {addedRepos.map(({ name }) => (\n                  <StackItem key={name}>\n                    <Text>{name}</Text>\n                  </StackItem>\n                ))}\n              </Stack>\n            }\n          >\n            <Button variant=\"link\" isInline>\n              custom {addedRepos.length === 1 ? 'repository' : 'repositories'}\n            </Button>\n          </Popover>{' '}\n          to add to your <b>{releaseName}</b> image.\n        </Text>\n      </TextContent>\n      {addedRepos.length === 0 && customPackages.length > 0 ? (\n        <CustomRepoAlert\n          variant=\"danger\"\n          title=\"No custom repositories linked. Clear custom packages or link a repository.\"\n        />\n      ) : checkRepoNameMismatch(initialRepos, addedRepos, customPackages) ? (\n        <CustomRepoAlert\n          variant=\"warning\"\n          title=\"Linked custom repositories were removed when these packages were added. Ensure the package list is still correct.\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default {\n  title: 'Additional custom packages',\n  name: 'additionalCustomPackages',\n  nextStep: 'review',\n  substepOf: 'Content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <CustomPackageLabel />,\n    },\n    {\n      component: 'additional-custom-packages',\n      name: 'custom-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getCustomRepositories = ({ imageID = '', query }) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/thirdpartyrepo?${imageID ? `imageID=${imageID}&` : ''}${q}`\n  );\n};\n\nexport const createCustomRepository = (payload) => {\n  return instance.post(`${EDGE_API}/thirdpartyrepo`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const editCustomRepository = (payload) => {\n  return instance.put(`${EDGE_API}/thirdpartyrepo/${payload.id}`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const removeCustomRepository = (id) =>\n  instance.delete(`${EDGE_API}/thirdpartyrepo/${id}`);\n\nexport const validateRepoName = (name) => {\n  return instance.get(`${EDGE_API}/thirdpartyrepo/checkName/${name}`);\n};\n","import React, { useState, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { getPackages } from '../../api/images';\nimport PropTypes from 'prop-types';\nimport {\n  TextContent,\n  Text,\n  Button,\n  DualListSelector,\n  DualListSelectorPane,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorControlsWrapper,\n  DualListSelectorControl,\n  HelperText,\n  HelperTextItem,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Divider,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { sortByDirection as sortedOptions } from '../../constants';\n\nconst EmptyText = ({ text }) => (\n  <Text className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    {text}\n  </Text>\n);\n\nEmptyText.propTypes = {\n  text: PropTypes.string,\n};\n\nconst NoResultsText = ({ heading, body }) => (\n  <TextContent className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    <Text component=\"h3\">{heading}</Text>\n    <Text component=\"small\">{body}</Text>\n  </TextContent>\n);\n\nNoResultsText.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n};\n\nconst mapPackagesToOptions = (pkgs) =>\n  pkgs.map((pkg) => ({\n    selected: false,\n    isVisible: true,\n    ...pkg,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [availableOptions, setAvailableOptions] = React.useState([]);\n  const [chosenOptions, setChosenOptions] = React.useState([]);\n  const [availableInputValue, setAvailableInputValue] = React.useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n  const [hasMoreResults, setHasMoreResults] = useState(false);\n  const [scrollTo, setScrollTo] = useState(null);\n  const [hasNoSearchResults, setHasNoSearchResults] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [exactMatch, setExactMatch] = useState(false);\n\n  useEffect(() => {\n    const loadedPackages = getState()?.values?.[input.name] || [];\n    setChosenOptions(sortedOptions(mapPackagesToOptions(loadedPackages)));\n\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"available search input\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackageSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  useEffect(() => {\n    scrollToAddedPackages();\n  }, [scrollTo]);\n\n  const handlePackageSearch = async () => {\n    if (availableInputValue === '') {\n      return;\n    }\n\n    const { data, meta } = await getPackages(\n      getState()?.values?.release || 'rhel-85',\n      getState()?.values?.architecture || defaultArch,\n      availableInputValue\n    );\n\n    if (!data) {\n      setHasNoSearchResults(true);\n      setHasMoreResults(false);\n      setAvailableOptions([]);\n      return;\n    }\n\n    if (meta.count > 100) {\n      setHasNoSearchResults(false);\n      setHasMoreResults(true);\n\n      let exactMatchIndex = null;\n      data.forEach(({ name }, index) => {\n        if (name === availableInputValue) {\n          exactMatchIndex = index;\n          return;\n        }\n      });\n\n      const isNotChosen = !chosenOptions.find(\n        (option) => option.name === data[exactMatchIndex].name\n      );\n\n      if (exactMatchIndex !== null && isNotChosen) {\n        setExactMatch(true);\n        setAvailableOptions(mapPackagesToOptions([data[exactMatchIndex]]));\n        return;\n      }\n\n      setExactMatch(false);\n      setAvailableOptions([]);\n      return;\n    } else {\n      setHasMoreResults(false);\n\n      setExactMatch(false);\n    }\n\n    const removeChosenPackages = data.filter(\n      (newPkg) =>\n        !chosenOptions.find((chosenPkg) => chosenPkg.name === newPkg.name)\n    );\n    setAvailableOptions(\n      sortedOptions(mapPackagesToOptions(removeChosenPackages))\n    );\n\n    setHasNoSearchResults(false);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  const scrollToAddedPackages = () => {\n    if (!scrollTo) {\n      return;\n    }\n\n    const destination = document.querySelector(\n      `.pf-m-${scrollTo.pane} .pf-c-dual-list-selector__menu`\n    );\n    scrollTo.pkgs.forEach((pkg) =>\n      document\n        .getElementById(`package-${pkg.name}`)\n        .closest('.pf-c-dual-list-selector__list-item-row')\n        .classList.add('pf-u-background-color-disabled-color-300')\n    );\n    setTimeout(() => {\n      scrollTo.pkgs.forEach((pkg) =>\n        document\n          .getElementById(`package-${pkg.name}`)\n          .closest('.pf-c-dual-list-selector__list-item-row')\n          .classList.remove('pf-u-background-color-disabled-color-300')\n      );\n    }, 400);\n    destination.scrollTop = scrollTo.scrollHeight;\n\n    setScrollTo(null);\n  };\n\n  const moveSelected = (fromAvailable) => {\n    const sourceOptions = fromAvailable ? availableOptions : chosenOptions;\n    let destinationOptions = fromAvailable ? chosenOptions : availableOptions;\n\n    const selectedOptions = [];\n    for (let i = 0; i < sourceOptions.length; i++) {\n      const option = sourceOptions[i];\n      if (option.selected && option.isVisible) {\n        selectedOptions.push(option);\n        sourceOptions.splice(i, 1);\n        option.selected = false;\n        i--;\n      }\n    }\n\n    destinationOptions = sortedOptions([\n      ...destinationOptions,\n      ...selectedOptions,\n    ]);\n\n    const packageHeight = 61;\n    const scrollHeight =\n      destinationOptions.findIndex(\n        (pkg) => pkg.name === selectedOptions[0].name\n      ) * packageHeight;\n\n    if (fromAvailable) {\n      setAvailableOptions(sortedOptions([...sourceOptions]));\n      setChosenOptions(destinationOptions);\n      change(input.name, destinationOptions);\n    } else {\n      setChosenOptions(sortedOptions([...sourceOptions]));\n      setAvailableOptions(destinationOptions);\n      change(input.name, [...sourceOptions]);\n    }\n    setScrollTo({\n      pkgs: selectedOptions,\n      pane: fromAvailable ? 'chosen' : 'available',\n      scrollHeight,\n    });\n    setExactMatch(false);\n  };\n\n  const moveAll = (fromAvailable) => {\n    if (fromAvailable) {\n      setChosenOptions(\n        sortedOptions([\n          ...availableOptions.filter((x) => x.isVisible),\n          ...chosenOptions,\n        ])\n      );\n      setAvailableOptions(\n        sortedOptions([...availableOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, [...availableOptions, ...chosenOptions]);\n    } else {\n      setAvailableOptions(\n        sortedOptions([\n          ...chosenOptions.filter((x) => x.isVisible),\n          ...availableOptions,\n        ])\n      );\n      setChosenOptions(\n        sortedOptions([...chosenOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, []);\n    }\n    setExactMatch(false);\n  };\n\n  const onOptionSelect = (_event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...chosenOptions];\n      newChosen[index].selected = !chosenOptions[index].selected;\n      setChosenOptions(sortedOptions(newChosen));\n    } else {\n      const newAvailable = [...availableOptions];\n      newAvailable[index].selected = !availableOptions[index].selected;\n      setAvailableOptions(sortedOptions(newAvailable));\n    }\n  };\n\n  const buildSearchInput = (isAvailable) => {\n    const onChange = (value) => {\n      setAvailableInputValue(value);\n      if (!isAvailable) {\n        const toFilter = [...chosenOptions];\n        toFilter.forEach((option) => {\n          option.isVisible =\n            value === '' ||\n            option.name.toLowerCase().includes(value.toLowerCase());\n        });\n      }\n    };\n\n    return (\n      <>\n        <InputGroup>\n          <TextInput\n            id={`${isAvailable ? 'available' : 'chosen'}-textinput`}\n            type=\"search\"\n            onChange={onChange}\n            placeholder=\"Search for packages\"\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            validated={\n              hasMoreResults && isAvailable && !searchFocused ? 'warning' : ''\n            }\n            aria-label={\n              isAvailable ? 'available search input' : 'chosen search input'\n            }\n            data-testid={\n              isAvailable ? 'available-search-input' : 'chosen-search-input'\n            }\n          />\n          {isAvailable ? (\n            <Button\n              onClick={handlePackageSearch}\n              isDisabled={!isAvailable}\n              variant=\"control\"\n              aria-label=\"search button for search input\"\n              data-testid=\"package-search\"\n            >\n              <SearchIcon />\n            </Button>\n          ) : (\n            <InputGroupText>\n              <SearchIcon className=\"pf-u-ml-xs pf-u-mr-xs\" />\n            </InputGroupText>\n          )}\n        </InputGroup>\n        {hasMoreResults && isAvailable && (\n          <HelperText>\n            <HelperTextItem variant=\"warning\">\n              Over 100 results found. Refine your search.\n            </HelperTextItem>\n          </HelperText>\n        )}\n      </>\n    );\n  };\n\n  const displayPackagesFrom = (options, isChosen) => {\n    return options.map((option, index) => {\n      return option.isVisible ? (\n        <DualListSelectorListItem\n          key={index}\n          isSelected={option.selected}\n          id={`composable-option-${index}`}\n          onOptionSelect={(e) => onOptionSelect(e, index, isChosen)}\n        >\n          <TextContent>\n            <span\n              id={`package-${option.name}`}\n              className=\"pf-c-dual-list-selector__item-text\"\n            >\n              {option.name}\n            </span>\n            <small>{option.summary}</small>\n          </TextContent>\n        </DualListSelectorListItem>\n      ) : null;\n    });\n  };\n\n  const selectedStatus = (options) => {\n    const totalItemNum = options.filter((x) => x.isVisible).length;\n    const selectedItemNum = options.filter(\n      (x) => x.selected && x.isVisible\n    ).length;\n    return selectedItemNum > 0\n      ? `${selectedItemNum} of ${totalItemNum} items selected`\n      : `${totalItemNum} ${totalItemNum > 1 ? 'items' : 'item'}`;\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        status={selectedStatus(availableOptions)}\n        searchInput={buildSearchInput(true)}\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"available-packages-list\"\n        >\n          {availableOptions.length > 0 && !exactMatch ? (\n            displayPackagesFrom(availableOptions, false)\n          ) : hasNoSearchResults ? (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          ) : hasMoreResults ? (\n            <>\n              {exactMatch && (\n                <HelperText>\n                  <HelperTextItem\n                    className=\"pf-u-ml-md pf-u-mt-md\"\n                    variant=\"indeterminate\"\n                  >\n                    Exact match\n                  </HelperTextItem>\n                </HelperText>\n              )}\n              {exactMatch && displayPackagesFrom(availableOptions, false)}\n              {exactMatch && (\n                <Divider\n                  className=\"pf-u-mt-md\"\n                  inset={{ default: 'insetMd' }}\n                />\n              )}\n              <NoResultsText\n                heading=\"Too many results to display\"\n                body=\"Please make the search more specific and try again\"\n              />\n            </>\n          ) : (\n            <EmptyText text=\"Search above to add additional packages to your image.\" />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!availableOptions.some((option) => option.selected)}\n          onClick={() => moveSelected(true)}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availableOptions.length === 0}\n          onClick={() => moveAll(true)}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={chosenOptions.length === 0}\n          onClick={() => moveAll(false)}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelected(false)}\n          isDisabled={!chosenOptions.some((option) => option.selected)}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        status={selectedStatus(chosenOptions)}\n        searchInput={buildSearchInput(false)}\n        isChosen\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"chosen-packages-list\"\n        >\n          {chosenOptions.length === 0 ? (\n            <EmptyText text=\"No packages added.\" />\n          ) : chosenOptions.filter((option) => option.isVisible).length > 0 ? (\n            displayPackagesFrom(chosenOptions, true)\n          ) : (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useState, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { postRpmsNames } from '../../api/images';\nimport PropTypes from 'prop-types';\nimport {\n  TextContent,\n  Text,\n  Button,\n  DualListSelector,\n  DualListSelectorPane,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorControlsWrapper,\n  DualListSelectorControl,\n  HelperText,\n  HelperTextItem,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Divider,\n} from '@patternfly/react-core';\nimport {\n  ArrowRightIcon,\n  AngleDoubleLeftIcon,\n  AngleLeftIcon,\n  AngleDoubleRightIcon,\n  AngleRightIcon,\n} from '@patternfly/react-icons';\nimport { sortByDirection as sortedOptions } from '../../constants';\n\nconst EmptyText = ({ text }) => (\n  <Text className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    {text}\n  </Text>\n);\n\nEmptyText.propTypes = {\n  text: PropTypes.string,\n};\n\nconst NoResultsText = ({ heading, body }) => (\n  <TextContent className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    <Text component=\"h3\">{heading}</Text>\n    <Text component=\"small\">{body}</Text>\n  </TextContent>\n);\n\nNoResultsText.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n};\n\nconst mapPackagesToOptions = (pkgs) =>\n  pkgs.map((pkg) => ({\n    selected: false,\n    isVisible: true,\n    name: pkg.package_name || pkg.name,\n    summary: pkg.summary,\n  }));\n\nconst AdditionalCustomPackages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [availableOptions, setAvailableOptions] = React.useState([]);\n  const [chosenOptions, setChosenOptions] = React.useState([]);\n  const [availableInputValue, setAvailableInputValue] = React.useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n  const [hasMoreResults, setHasMoreResults] = useState(false);\n  const [scrollTo, setScrollTo] = useState(null);\n  const [hasNoSearchResults, setHasNoSearchResults] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [exactMatch, setExactMatch] = useState(false);\n\n  useEffect(() => {\n    const loadedPackages = getState()?.values?.[input.name] || [];\n    setChosenOptions(sortedOptions(mapPackagesToOptions(loadedPackages)));\n\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"available search input\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackageSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  useEffect(() => {\n    scrollToAddedPackages();\n  }, [scrollTo]);\n\n  const handlePackageSearch = async () => {\n    if (availableInputValue === '') {\n      return;\n    }\n\n    const data = await postRpmsNames(\n      (getState()?.values?.['third-party-repositories'] || [])?.map(\n        ({ URL }) => URL\n      ),\n      availableInputValue\n    );\n\n    setHasMoreResults(false);\n    setExactMatch(false);\n    setHasNoSearchResults(false);\n\n    if (!data) {\n      setHasNoSearchResults(true);\n      setAvailableOptions([]);\n      return;\n    }\n\n    if (data.length > 100) {\n      setHasNoSearchResults(false);\n      setHasMoreResults(true);\n\n      let exactMatchIndex = null;\n      data.forEach(({ package_name }, index) => {\n        if (package_name === availableInputValue) {\n          exactMatchIndex = index;\n          return;\n        }\n      });\n\n      const isNotChosen = !chosenOptions.find(\n        (option) => option.name === data[exactMatchIndex].name\n      );\n      if (exactMatchIndex !== null && isNotChosen) {\n        setExactMatch(true);\n        setAvailableOptions(mapPackagesToOptions([data[exactMatchIndex]]));\n        return;\n      }\n\n      setAvailableOptions([]);\n      return;\n    }\n\n    const removeChosenPackages = data.filter(\n      (newPkg) =>\n        !chosenOptions.find((chosenPkg) => chosenPkg.name === newPkg.name)\n    );\n    setAvailableOptions(\n      sortedOptions(mapPackagesToOptions(removeChosenPackages))\n    );\n\n    setHasNoSearchResults(false);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  const scrollToAddedPackages = () => {\n    if (!scrollTo) {\n      return;\n    }\n\n    const destination = document.querySelector(\n      `.pf-m-${scrollTo.pane} .pf-c-dual-list-selector__menu`\n    );\n    scrollTo.pkgs.forEach((pkg) =>\n      document\n        .getElementById(`package-${pkg.name}`)\n        .closest('.pf-c-dual-list-selector__list-item-row')\n        .classList.add('pf-u-background-color-disabled-color-300')\n    );\n    setTimeout(() => {\n      scrollTo.pkgs.forEach((pkg) =>\n        document\n          .getElementById(`package-${pkg.name}`)\n          .closest('.pf-c-dual-list-selector__list-item-row')\n          .classList.remove('pf-u-background-color-disabled-color-300')\n      );\n    }, 400);\n    destination.scrollTop = scrollTo.scrollHeight;\n\n    setScrollTo(null);\n  };\n\n  const moveSelected = (fromAvailable) => {\n    const sourceOptions = fromAvailable ? availableOptions : chosenOptions;\n    let destinationOptions = fromAvailable ? chosenOptions : availableOptions;\n\n    const selectedOptions = [];\n    for (let i = 0; i < sourceOptions.length; i++) {\n      const option = sourceOptions[i];\n      if (option.selected && option.isVisible) {\n        selectedOptions.push(option);\n        sourceOptions.splice(i, 1);\n        option.selected = false;\n        i--;\n      }\n    }\n\n    destinationOptions = sortedOptions([\n      ...destinationOptions,\n      ...selectedOptions,\n    ]);\n\n    const packageHeight = 61;\n    const scrollHeight =\n      destinationOptions.findIndex(\n        (pkg) => pkg.name === selectedOptions[0].name\n      ) * packageHeight;\n\n    if (fromAvailable) {\n      setAvailableOptions(sortedOptions([...sourceOptions]));\n      setChosenOptions(destinationOptions);\n      change(input.name, destinationOptions);\n    } else {\n      setChosenOptions(sortedOptions([...sourceOptions]));\n      setAvailableOptions(destinationOptions);\n      change(input.name, [...sourceOptions]);\n    }\n    setScrollTo({\n      pkgs: selectedOptions,\n      pane: fromAvailable ? 'chosen' : 'available',\n      scrollHeight,\n    });\n    setExactMatch(false);\n  };\n\n  const moveAll = (fromAvailable) => {\n    if (fromAvailable) {\n      setChosenOptions(\n        sortedOptions([\n          ...availableOptions.filter((x) => x.isVisible),\n          ...chosenOptions,\n        ])\n      );\n      setAvailableOptions(\n        sortedOptions([...availableOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, [...availableOptions, ...chosenOptions]);\n    } else {\n      setAvailableOptions(\n        sortedOptions([\n          ...chosenOptions.filter((x) => x.isVisible),\n          ...availableOptions,\n        ])\n      );\n      setChosenOptions(\n        sortedOptions([...chosenOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, []);\n    }\n    setExactMatch(false);\n  };\n\n  const onOptionSelect = (_event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...chosenOptions];\n      newChosen[index].selected = !chosenOptions[index].selected;\n      setChosenOptions(sortedOptions(newChosen));\n    } else {\n      const newAvailable = [...availableOptions];\n      newAvailable[index].selected = !availableOptions[index].selected;\n      setAvailableOptions(sortedOptions(newAvailable));\n    }\n  };\n\n  const buildSearchInput = (isAvailable) => {\n    const onChange = (value) => {\n      setAvailableInputValue(value);\n      if (!isAvailable) {\n        const toFilter = [...chosenOptions];\n        toFilter.forEach((option) => {\n          option.isVisible =\n            value === '' ||\n            option.name.toLowerCase().includes(value.toLowerCase());\n        });\n      }\n    };\n\n    return (\n      <>\n        <InputGroup>\n          <TextInput\n            id={`${isAvailable ? 'available' : 'chosen'}-textinput`}\n            type=\"arrow\"\n            onChange={onChange}\n            placeholder=\"Search for packages\"\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            validated={\n              hasMoreResults && isAvailable && !searchFocused ? 'warning' : ''\n            }\n            aria-label={\n              isAvailable ? 'available search input' : 'chosen search input'\n            }\n            data-testid={\n              isAvailable ? 'available-search-input' : 'chosen-search-input'\n            }\n          />\n          {isAvailable ? (\n            <Button\n              onClick={handlePackageSearch}\n              isDisabled={!isAvailable}\n              variant=\"control\"\n              aria-label=\"search button for search input\"\n              data-testid=\"package-search\"\n            >\n              <ArrowRightIcon />\n            </Button>\n          ) : (\n            <InputGroupText>\n              <ArrowRightIcon className=\"pf-u-ml-xs pf-u-mr-xs\" />\n            </InputGroupText>\n          )}\n        </InputGroup>\n        {hasMoreResults && isAvailable && (\n          <HelperText>\n            <HelperTextItem variant=\"warning\">\n              Over 100 results found. Refine your search.\n            </HelperTextItem>\n          </HelperText>\n        )}\n      </>\n    );\n  };\n\n  const displayPackagesFrom = (options, isChosen) => {\n    return options.map((option, index) => {\n      return option.isVisible ? (\n        <DualListSelectorListItem\n          key={index}\n          isSelected={option.selected}\n          id={`composable-option-${index}`}\n          onOptionSelect={(e) => onOptionSelect(e, index, isChosen)}\n        >\n          <TextContent>\n            <span\n              id={`package-${option.name}`}\n              className=\"pf-c-dual-list-selector__item-text\"\n            >\n              {option.name}\n            </span>\n            <small>{option.summary}</small>\n          </TextContent>\n        </DualListSelectorListItem>\n      ) : null;\n    });\n  };\n\n  const selectedStatus = (options) => {\n    const totalItemNum = options.filter((x) => x.isVisible).length;\n    const selectedItemNum = options.filter(\n      (x) => x.selected && x.isVisible\n    ).length;\n    return selectedItemNum > 0\n      ? `${selectedItemNum} of ${totalItemNum} items selected`\n      : `${totalItemNum} ${totalItemNum > 1 ? 'items' : 'item'}`;\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        status={selectedStatus(availableOptions)}\n        searchInput={buildSearchInput(true)}\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"available-packages-list\"\n        >\n          {availableOptions.length > 0 && !exactMatch ? (\n            displayPackagesFrom(availableOptions, false)\n          ) : hasNoSearchResults ? (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          ) : hasMoreResults ? (\n            <>\n              {exactMatch && (\n                <HelperText>\n                  <HelperTextItem\n                    className=\"pf-u-ml-md pf-u-mt-md\"\n                    variant=\"indeterminate\"\n                  >\n                    Exact match\n                  </HelperTextItem>\n                </HelperText>\n              )}\n              {exactMatch && displayPackagesFrom(availableOptions, false)}\n              {exactMatch && (\n                <Divider\n                  className=\"pf-u-mt-md\"\n                  inset={{ default: 'insetMd' }}\n                />\n              )}\n\n              <NoResultsText\n                heading=\"Too many results to display\"\n                body=\"Please make the search more specific and try again\"\n              />\n            </>\n          ) : (\n            <EmptyText text=\"Search above to add additional packages to your image.\" />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!availableOptions.some((option) => option.selected)}\n          onClick={() => moveSelected(true)}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availableOptions.length === 0}\n          onClick={() => moveAll(true)}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={chosenOptions.length === 0}\n          onClick={() => moveAll(false)}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelected(false)}\n          isDisabled={!chosenOptions.some((option) => option.selected)}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        status={selectedStatus(chosenOptions)}\n        searchInput={buildSearchInput(false)}\n        isChosen\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"chosen-packages-list\"\n        >\n          {chosenOptions.length === 0 ? (\n            <EmptyText text=\"No packages added.\" />\n          ) : chosenOptions.filter((option) => option.isVisible).length > 0 ? (\n            displayPackagesFrom(chosenOptions, true)\n          ) : (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nAdditionalCustomPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default AdditionalCustomPackages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { Fragment, useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\">\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing systems. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <Fragment key={index}>\n          <Checkbox\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </TextContent>\n          {value === 'rhel-edge-installer' && (\n            <Fragment>\n              <Text component={TextVariants.small}>\n                <Text\n                  target=\"_blank\"\n                  href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#edge-how-to-compose-and-deploy-a-rhel-for-edge-image_introducing-rhel-for-edge-images\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            </Fragment>\n          )}\n        </Fragment>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/assembly_using-secure-communications-between-two-systems-with-openssh_configuring-basic-system-settings#generating-ssh-key-pairs_assembly_using-secure-communications-between-two-systems-with-openssh\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","export const reservedUsernames = [\n  'root',\n  'bin',\n  'daemon',\n  'sys',\n  'adm',\n  'tty',\n  'disk',\n  'lp',\n  'mem',\n  'kmem',\n  'wheel',\n  'cdrom',\n  'sync',\n  'shutdown',\n  'halt',\n  'mail',\n  'news',\n  'uucp',\n  'operator',\n  'games',\n  'gopher',\n  'ftp',\n  'man',\n  'oprofile',\n  'pkiuser',\n  'dialout',\n  'floppy',\n  'games',\n  'slocate',\n  'utmp',\n  'squid',\n  'pvm',\n  'named',\n  'postgres',\n  'mysql',\n  'nscd',\n  'rpcuser',\n  'console',\n  'rpc',\n  'amandabackup',\n  'tape',\n  'netdump',\n  'utempter',\n  'vdsm',\n  'kvm',\n  'rpm',\n  'ntp',\n  'video',\n  'dip',\n  'mailman',\n  'gdm',\n  'xfs',\n  'pppusers',\n  'popusers',\n  'slipusers',\n  'mailnull',\n  'apache',\n  'wnn',\n  'smmsp',\n  'puppet',\n  'tomcat',\n  'lock',\n  'ldap',\n  'frontpage',\n  'nut',\n  'beagleindex',\n  'tss',\n  'piranha',\n  'prelude-manager',\n  'snortd',\n  'audio',\n  'condor',\n  'nslcd',\n  'wine',\n  'pegasus',\n  'webalizer',\n  'haldaemon',\n  'vcsa',\n  'avahi',\n  'realtime',\n  'tcpdump',\n  'privoxy',\n  'sshd',\n  'radvd',\n  'cyrus',\n  'saslauth',\n  'arpwatch',\n  'fax',\n  'nocpulse',\n  'desktop',\n  'dbus',\n  'jonas',\n  'clamav',\n  'screen',\n  'quaggavt',\n  'sabayon',\n  'polkituser',\n  'wbpriv',\n  'postfix',\n  'postdrop',\n  'majordomo',\n  'quagga',\n  'exim',\n  'distcache',\n  'radiusd',\n  'hsqldb',\n  'dovecot',\n  'ident',\n  'users',\n  'qemu',\n  'ovirt',\n  'rhevm',\n  'jetty',\n  'saned',\n  'vhostmd',\n  'usbmuxd',\n  'bacula',\n  'cimsrvr',\n  'mock',\n  'ricci',\n  'luci',\n  'activemq',\n  'cassandra',\n  'stap-server',\n  'stapusr',\n  'stapsys',\n  'stapdev',\n  'swift',\n  'glance',\n  'nova',\n  'keystone',\n  'quantum',\n  'cinder',\n  'ceilometer',\n  'ceph',\n  'avahi-autoipd',\n  'pulse',\n  'rtkit',\n  'abrt',\n  'retrace',\n  'ovirtagent',\n  'ats',\n  'dhcpd',\n  'myproxy',\n  'sanlock',\n  'aeolus',\n  'wallaby',\n  'katello',\n  'elasticsearch',\n  'mongodb',\n  'wildfly',\n  'jbosson-agent',\n  'jbosson',\n  'heat',\n  'haproxy',\n  'hacluster',\n  'haclient',\n  'systemd-journal',\n  'systemd-network',\n  'systemd-resolve',\n  'gnats',\n  'listar',\n  'nobody',\n  '',\n];\n","import { reservedUsernames } from './constants/reservedUsernames';\n\nexport const reservedUsernameValidator = () => (value) =>\n  reservedUsernames.includes(value)\n    ? 'This is a username reserved for the system'\n    : undefined;\n","import React, { useState } from 'react';\nimport { FormGroup, TextArea } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst CustomPackageTextArea = (props) => {\n  const { input } = useFieldApi(props);\n  const [value, setValue] = useState(\n    input.value.map((pkg) => pkg.name).join('\\n')\n  );\n\n  const onChange = (newValue) => {\n    // Split text area value on whitespace or commas to get package names\n    const packageNames = newValue.split(/[,\\s]+/g).reduce((acc, name) => {\n      return name !== '' ? [...acc, { name }] : acc;\n    }, []);\n    // Store both the formatted array and the original text\n    input.onChange(packageNames);\n    setValue(newValue);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    // Allow newlines in text area component\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <FormGroup label=\"Packages\" type=\"string\">\n      <TextArea\n        aria-label=\"custom-package-wizard-step\"\n        placeholder=\"Enter or paste packages from linked repositories, one entry per line.&#13;ExamplePackage&#13;example-package&#13;examplepackage\"\n        value={value}\n        onChange={onChange}\n        onKeyDown={handleSearchOnEnter}\n        style={{\n          paddingRight: '32px',\n          height: '25vh',\n        }}\n      />\n    </FormGroup>\n  );\n};\n\nexport default CustomPackageTextArea;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport AdditionalCustomPackages from './form/AdditionalCustomPackages';\nimport WizardRepositoryTable from './form/WizardRepositoryTable';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport { reservedUsernameValidator } from './form/validators';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport CustomPackageTextArea from './form/CustomPackageTextArea';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'custom-repo-table': {\n          component: WizardRepositoryTable,\n        },\n        'custom-package-text-area': {\n          component: CustomPackageTextArea,\n        },\n        'additional-custom-packages': {\n          component: AdditionalCustomPackages,\n        },\n        ...customComponentMapper,\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (\n          values['validate-custom-repos'] &&\n          values['custom-packages']?.length > 0 &&\n          values['third-party-repositories']?.length === 0\n        ) {\n          errors['custom-packages'] = 'No custom repositories linked';\n        }\n        return errors;\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n        reservedUsernameValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12}>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <Grid key={name}>\n          <GridItem span={3}>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9}>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { imageTypeMapper, releaseMapper } from '../../Routes/../constants';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: String(getState().initialValues.version + 1) },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = () => {\n    let outputs = [\n      { name: 'Release', value: releaseMapper[getState().values.release] },\n      {\n        name: 'Output Type',\n        value: imageTypeMapper['rhel-edge-commit'],\n      },\n    ];\n    if (getState().values.imageType.includes('rhel-edge-installer')) {\n      outputs.push({ name: '', value: imageTypeMapper['rhel-edge-installer'] });\n    }\n    return outputs;\n  };\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const RHELPackageBefore = getState().initialValues['selected-packages'] || [];\n  const RHELPackageAfter = getState().values['selected-packages'] || [];\n  const customPackageBefore = getState().initialValues[\n    'third-party-repositories'\n  ].length\n    ? getState().initialValues['custom-packages']\n    : [];\n  const customPackageAfter = getState().values['third-party-repositories']\n    .length\n    ? getState().values['custom-packages']\n    : [];\n\n  const calcPkgDiff = (arr1 = [], arr2 = []) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      {\n        name: isUpdate ? 'Custom Updated' : 'Custom Added',\n        value: String(calcPkgDiff(customPackageAfter, customPackageBefore)),\n      },\n      {\n        name: isUpdate ? 'RHEL Updated' : 'RHEL Added',\n        value: String(calcPkgDiff(RHELPackageAfter, RHELPackageBefore)),\n      },\n    ];\n    return pkgs;\n  };\n\n  return (\n    <Fragment>\n      {/* {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )} */}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create image</Text> to start the build process.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output()}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect } from 'react';\nimport GeneralTable from '../general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../Empty';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { getCustomRepositories } from '../../api/repositories';\nimport useApi from '../../hooks/useApi';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { truncateString } from '../../utils';\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst WizardRepositoryTable = (props) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const isUpdateWizard = getState()?.values?.isUpdate;\n  const imageID = getState()?.values?.imageID;\n  const customRepos = getState()?.values?.['third-party-repositories'];\n  const [response, fetchRepos] = useApi({\n    api: ({ query }) =>\n      getCustomRepositories({\n        imageID: isUpdateWizard ? imageID.toString() : '',\n        query,\n      }),\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n\n  const getRepoIds = (checked) => {\n    const checkedRepos = checked?.map((repo) => ({\n      id: repo?.id,\n      name: repo?.name,\n      URL: repo?.URL,\n      uuid: repo?.uuid,\n    }));\n    input.onChange(checkedRepos);\n\n    checkedRepos.length\n      ? change('show-custom-packages', true)\n      : change('show-custom-packages', false);\n  };\n\n  useEffect(() => {\n    change('validate-custom-repos', false);\n    change('third-party-repositories', customRepos);\n  }, []);\n  const buildRows = ({ data }) => {\n    return data.map(({ ID, Name, URL, uuid }) => ({\n      rowInfo: { id: ID, name: Name, URL: URL, uuid: uuid },\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                <span>{truncateString(Name, 50)}</span>\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {URL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    }));\n  };\n  const locationProp = props?.label?.props?.locationProp;\n  return (\n    <>\n      {!isLoading && !data?.count > 0 ? (\n        <EmptyState\n          icon=\"repository\"\n          title=\"No custom repositories available\"\n          body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n          primaryAction={{\n            text: 'Custom repositories',\n            href: paths.repositories,\n          }}\n        />\n      ) : (\n        <GeneralTable\n          apiFilterSort={true}\n          locationProp={locationProp}\n          isUseApi={true}\n          loadTableData={fetchRepos}\n          filters={filters}\n          tableData={{\n            count: data?.count,\n            data,\n            isLoading,\n            hasError,\n          }}\n          columnNames={[{ title: 'Name', type: 'name', sort: false }]}\n          rows={isLoading ? [] : buildRows(data)}\n          defaultSort={{ index: 0, direction: 'desc' }}\n          hasCheckbox={true}\n          selectedItems={getRepoIds}\n          initSelectedItems={input.value}\n        />\n      )}\n    </>\n  );\n};\nWizardRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  closeModal: PropTypes.func,\n  locationProp: PropTypes.object,\n  label: PropTypes.object,\n  props: PropTypes.func,\n};\n\nexport default WizardRepositoryTable;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages, notificationProp) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasInfo) {\n        if (notificationProp) {\n          notificationProp.hasInfo(statusMessages.onInfo);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              ...statusMessages.onInfo,\n            }),\n          });\n        }\n      }\n      if (hasSuccess) {\n        if (notificationProp) {\n          notificationProp.hasSuccess(statusMessages.onSuccess);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'success',\n              ...statusMessages.onSuccess,\n            }),\n          });\n        }\n      }\n      return response;\n    } catch (err) {\n      if (notificationProp) {\n        notificationProp.err(statusMessages.onError, err);\n      } else {\n        dispatch({\n          ...addNotification({\n            variant: 'danger',\n            ...statusMessages.onError,\n            // Add error message from API, if present\n            description: err?.Title\n              ? `${statusMessages.onError.description}: ${err.Title}`\n              : statusMessages.onError.description,\n          }),\n        });\n      }\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n"],"names":["CustomButtons","buttonLabels","cancel","submit","back","useState","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","Button","variant","type","isDisabled","valid","getState","validating","onClick","onSubmit","values","className","onCancel","propTypes","PropTypes","name","title","buttons","fields","component","PackagesLabel","release","useFormApi","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","substepOf","componentTypes","label","initialValue","clearedValue","ReleaseLabel","temporaryReleasesFlag","useFeatureFlags","change","TEMPORARY_RELEASE","DEFAULT_RELEASE","releases","release_options","getReleases","supportedReleases","temporaryReleases","options","setOptions","isOpen","setIsOpen","selected","setSelected","Select","width","onToggle","onSelect","_event","selection","isPlaceholder","selections","style","paddingLeft","marginLeft","map","item","SelectOption","key","value","imageType","includes","validate","validatorTypes","isRequired","Object","entries","imageTypeMapper","CharacterCount","description","length","placeholder","helperText","checkImageName","ImageExists","threshold","nameValidator","paddingRight","height","Flex","justifyContent","default","FlexItem","resizeOrientation","HelperText","HelperTextItem","pattern","message","featureFlag","locationProp","WizardRepositoryTable","initializeOnMount","CustomRepoAlert","Alert","isInline","CustomPackageLabel","addedRepos","initialRepos","customPackages","useEffect","Popover","visibility","position","headerContent","bodyContent","Stack","StackItem","initRepos","currentRepos","currentPackages","every","iRepo","find","cRepo","checkRepoNameMismatch","getCustomRepositories","imageID","query","q","getTableParams","instance","EDGE_API","createCustomRepository","payload","Name","URL","baseURL","editCustomRepository","id","removeCustomRepository","validateRepoName","EmptyText","text","NoResultsText","heading","body","mapPackagesToOptions","pkgs","pkg","isVisible","Packages","defaultArch","props","input","useFieldApi","React","availableOptions","setAvailableOptions","chosenOptions","setChosenOptions","availableInputValue","setAvailableInputValue","enterPressed","setEnterPressed","hasMoreResults","setHasMoreResults","scrollTo","setScrollTo","hasNoSearchResults","setHasNoSearchResults","searchFocused","setSearchFocused","exactMatch","setExactMatch","loadedPackages","sortedOptions","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","handlePackageSearch","scrollToAddedPackages","getPackages","architecture","data","meta","count","exactMatchIndex","forEach","index","isNotChosen","option","removeChosenPackages","filter","newPkg","chosenPkg","e","stopPropagation","destination","pane","getElementById","closest","classList","add","setTimeout","remove","scrollTop","scrollHeight","moveSelected","fromAvailable","sourceOptions","destinationOptions","selectedOptions","i","push","splice","findIndex","moveAll","x","buildSearchInput","isAvailable","InputGroup","TextInput","onChange","toLowerCase","onFocus","onBlur","validated","InputGroupText","displayPackagesFrom","isChosen","DualListSelectorListItem","isSelected","onOptionSelect","newChosen","newAvailable","summary","selectedStatus","totalItemNum","selectedItemNum","DualListSelector","DualListSelectorPane","status","searchInput","DualListSelectorList","Divider","inset","DualListSelectorControlsWrapper","DualListSelectorControl","some","tooltipContent","package_name","AdditionalCustomPackages","postRpmsNames","registrationCredsValidator","state","checkbox","errs","password","sshKey","toggleCheckbox","useCallback","checked","event","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextArea","WarningInstallerHelperText","hasIcon","outputHelperText","ImageOutputCheckbox","Fragment","initialValues","isUpdate","TextVariants","target","href","isVisitedLink","touched","reservedUsernames","reservedUsernameValidator","join","setValue","newValue","packageNames","split","reduce","acc","onKeyDown","CreateImageWizard","schema","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","CustomPackageTextArea","errors","validatorMapper","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","outputs","details","String","version","registration","credentials","RHELPackageBefore","RHELPackageAfter","customPackageBefore","customPackageAfter","calcPkgDiff","arr1","arr2","filters","isUpdateWizard","customRepos","useApi","api","toString","tableReload","response","fetchRepos","isLoading","hasError","icon","primaryAction","paths","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","sort","rows","ID","rowInfo","uuid","cells","truncateString","rel","defaultSort","direction","hasCheckbox","selectedItems","checkedRepos","repo","initSelectedItems","closeModal","dispatch","statusMessages","notificationProp","hasSuccess","onSuccess","hasInfo","onInfo","onError","fetchData","addNotification","err","Title"],"sourceRoot":""}