{"version":3,"file":"js/2456.a48050a7d15af215388c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperText.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/HelperText/HelperTextItem.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/HelperText/helper-text.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/AsyncComponent/index.js","webpack:///./src/components/SearchInputApi.js","webpack:///./src/Routes/Devices/AddDeviceModal.js","webpack:///./src/Routes/Devices/Inventory.js","webpack:///./src/Routes/Groups/CreateGroupModal.js","webpack:///./src/store/action-types.js","webpack:///./src/store/actions.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/keyBy.js","webpack:///./node_modules/lodash/map.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nexport const HelperText = (_a) => {\n    var { children, className, component = 'div', id, isLiveRegion = false } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"id\", \"isLiveRegion\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ id: id, className: css(styles.helperText, className) }, (isLiveRegion && { 'aria-live': 'polite' }), props), children));\n};\nHelperText.displayName = 'HelperText';\n//# sourceMappingURL=HelperText.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/HelperText/helper-text';\nimport { css } from '@patternfly/react-styles';\nimport MinusIcon from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/esm/icons/check-circle-icon';\nimport ExclamationCircleIcon from '@patternfly/react-icons/dist/esm/icons/exclamation-circle-icon';\nconst variantStyle = {\n    default: '',\n    indeterminate: styles.modifiers.indeterminate,\n    warning: styles.modifiers.warning,\n    success: styles.modifiers.success,\n    error: styles.modifiers.error\n};\nexport const HelperTextItem = (_a) => {\n    var { children, className, component = 'div', variant = 'default', icon, isDynamic = false, hasIcon = isDynamic, id, screenReaderText = `${variant} status` } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"variant\", \"icon\", \"isDynamic\", \"hasIcon\", \"id\", \"screenReaderText\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({ className: css(styles.helperTextItem, variantStyle[variant], isDynamic && styles.modifiers.dynamic, className), id: id }, props),\n        icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true }, icon)),\n        hasIcon && !icon && (React.createElement(\"span\", { className: css(styles.helperTextItemIcon), \"aria-hidden\": true },\n            (variant === 'default' || variant === 'indeterminate') && React.createElement(MinusIcon, null),\n            variant === 'warning' && React.createElement(ExclamationTriangleIcon, null),\n            variant === 'success' && React.createElement(CheckCircleIcon, null),\n            variant === 'error' && React.createElement(ExclamationCircleIcon, null))),\n        React.createElement(\"span\", { className: css(styles.helperTextItemText) },\n            children,\n            isDynamic && React.createElement(\"span\", { className: \"pf-u-screen-reader\" },\n                \": \",\n                screenReaderText,\n                \";\"))));\n};\nHelperTextItem.displayName = 'HelperTextItem';\n//# sourceMappingURL=HelperTextItem.js.map","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","import './helper-text.css';\nexport default {\n  \"helperText\": \"pf-c-helper-text\",\n  \"helperTextItem\": \"pf-c-helper-text__item\",\n  \"helperTextItemIcon\": \"pf-c-helper-text__item-icon\",\n  \"helperTextItemText\": \"pf-c-helper-text__item-text\",\n  \"modifiers\": {\n    \"indeterminate\": \"pf-m-indeterminate\",\n    \"warning\": \"pf-m-warning\",\n    \"success\": \"pf-m-success\",\n    \"error\": \"pf-m-error\",\n    \"dynamic\": \"pf-m-dynamic\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { ScalprumComponent } from '@scalprum/react-core';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport classNames from 'classnames';\nvar BaseAsyncComponent = function (_a) {\n    var appName = _a.appName, scope = _a.scope, module = _a.module, _b = _a.fallback, fallback = _b === void 0 ? (_jsx(Bullseye, { children: _jsx(Spinner, { size: \"xl\" }) })) : _b, innerRef = _a.innerRef, className = _a.className, _c = _a.component, Cmp = _c === void 0 ? 'section' : _c, props = __rest(_a, [\"appName\", \"scope\", \"module\", \"fallback\", \"innerRef\", \"className\", \"component\"]);\n    var SCProps = __assign({ className: className, appName: appName, module: module, scope: scope !== null && scope !== void 0 ? scope : appName, ErrorComponent: fallback, ref: innerRef, fallback: fallback }, props);\n    return (_jsx(Cmp, __assign({ className: classNames(className, appName) }, { children: _jsx(ScalprumComponent, __assign({}, SCProps)) })));\n};\nvar AsynComponent = React.forwardRef(function (props, ref) { return _jsx(BaseAsyncComponent, __assign({ innerRef: ref }, props)); });\nexport default AsynComponent;\n//# sourceMappingURL=index.js.map","import React, { useState } from 'react';\nimport {\n  HelperText,\n  HelperTextItem,\n  Select,\n  SelectOption,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useApi from '../hooks/useApi';\nimport { getGroups, getInventoryGroups } from '../api/groups';\nimport { debounce } from 'lodash';\nimport { useFeatureFlags } from '../utils';\nimport { FEATURE_PARITY_INVENTORY_GROUPS } from '../constants/features';\n\nconst SelectInput = (props) => {\n  useFieldApi(props);\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  const { change } = useFormApi();\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(null);\n  const [{ data, isLoading }, fetchGroups] = useApi({\n    api: inventoryGroupsEnabled ? getInventoryGroups : getGroups,\n  });\n  const [searchTerm, setSearchTerm] = useState('');\n\n  const onToggle = (isOpen) => {\n    setIsOpen(isOpen);\n  };\n\n  const updateSelection = (value) => {\n    // Update state when an option has been selected.\n    setSelected(value);\n    setIsOpen(false);\n    change('group', value);\n  };\n\n  const onSelect = (_event, selection) => {\n    if (_event) updateSelection(selection);\n  };\n\n  const clearSelection = () => {\n    setSearchTerm('');\n    fetchGroups();\n    updateSelection(null);\n  };\n\n  const onFilter = (_event, value) => {\n    /* This handler is called on input changes as well as when children change.\n       _event is null when the children change. Only update searchTerm state\n       and fetch results from the API only if there was an actual input change.\n    */\n    if (_event && value != searchTerm) {\n      setSearchTerm(value);\n      fetchGroups({ name: encodeURIComponent(value) });\n    }\n  };\n\n  const options = (inventoryGroupsEnabled ? data?.results : data?.data) || [];\n  const totalCount = (inventoryGroupsEnabled ? data?.total : data?.count) || 0;\n\n  return (\n    <>\n      <HelperText>\n        {!isLoading && !selected && isOpen && totalCount > options.length ? (\n          <HelperTextItem variant=\"warning\" className=\"pf-u-font-weight-bold\">\n            Over {options.length} results found. Refine your search.\n          </HelperTextItem>\n        ) : (\n          <HelperTextItem className=\"pf-u-font-weight-bold\">\n            Select a group\n          </HelperTextItem>\n        )}\n      </HelperText>\n      <Select\n        variant=\"typeahead\"\n        typeAheadAriaLabel=\"Select a group\"\n        onToggle={onToggle}\n        onSelect={onSelect}\n        onClear={clearSelection}\n        selections={selected ? selected : searchTerm}\n        isOpen={isOpen}\n        onFilter={debounce(onFilter, 300)}\n        aria-labelledby=\"typeahead-select-id-1\"\n        placeholderText=\"Type or click to select a group\"\n        noResultsFoundText={isLoading ? 'Loading...' : 'No results found'}\n        isInputValuePersisted={true}\n        maxHeight={'180px'}\n      >\n        {isLoading\n          ? []\n          : options?.map(({ id, name, DeviceGroup }) => (\n              // note: the schema is different when fetching groups from inventory or from edge-api\n              <SelectOption\n                key={inventoryGroupsEnabled ? id : DeviceGroup.ID}\n                value={{\n                  toString: () =>\n                    inventoryGroupsEnabled ? name : DeviceGroup.Name,\n                  groupId: inventoryGroupsEnabled ? id : DeviceGroup.ID,\n                }}\n              />\n            ))}\n      </Select>\n    </>\n  );\n};\n\nexport default SelectInput;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport SearchInputApi from '../../components/SearchInputApi';\nimport apiWithToast from '../../utils/apiWithToast';\nimport {\n  addDevicesToGroup,\n  addDevicesToInventoryGroup,\n} from '../../api/groups';\nimport { useDispatch } from 'react-redux';\nimport { Button, Text } from '@patternfly/react-core';\nimport { useFeatureFlags } from '../../utils';\nimport { FEATURE_PARITY_INVENTORY_GROUPS } from '../../constants/features';\n\nconst CreateGroupButton = ({ closeModal }) => (\n  <>\n    <Text>Or</Text>\n    <Button variant=\"secondary\" className=\"pf-u-w-50\" onClick={closeModal}>\n      Create Group\n    </Button>\n  </>\n);\n\nCreateGroupButton.propTypes = {\n  closeModal: PropTypes.func,\n};\n\nconst createDescription = (deviceIds) => {\n  const systemText =\n    deviceIds.length > 1 ? `${deviceIds.length} systems` : deviceIds[0].name;\n  return (\n    <Text>\n      Select a group to add <strong>{systemText} </strong> or create a new one.\n    </Text>\n  );\n};\n\nconst createSchema = (deviceIds) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: createDescription(deviceIds),\n    },\n    {\n      component: 'search-input',\n      name: 'group',\n      label: 'Select a group',\n      isRequired: true,\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n    { component: 'create-group-btn', name: 'create-group-btn' },\n  ],\n});\n\nconst AddDeviceModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  setIsCreateGroupModalOpen,\n  reloadData,\n  deviceIds,\n}) => {\n  const dispatch = useDispatch();\n\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  const handleAddDevices = (values) => {\n    const { group } = values;\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${group.toString()} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to add system to group' },\n    };\n\n    let addDevicesToGroupFunc;\n    if (inventoryGroupsEnabled) {\n      addDevicesToGroupFunc = () =>\n        addDevicesToInventoryGroup(group.groupId, deviceIds);\n    } else {\n      addDevicesToGroupFunc = () =>\n        addDevicesToGroup(parseInt(group.groupId), deviceIds);\n    }\n    apiWithToast(dispatch, addDevicesToGroupFunc, statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Add to group\"\n      submitLabel=\"Add\"\n      additionalMappers={{\n        'search-input': {\n          component: SearchInputApi,\n        },\n        'create-group-btn': {\n          component: CreateGroupButton,\n          closeModal: () => {\n            setIsCreateGroupModalOpen(true);\n            setIsModalOpen(false);\n          },\n        },\n      }}\n      schema={createSchema(deviceIds)}\n      onSubmit={handleAddDevices}\n      reloadData={reloadData}\n    />\n  );\n};\n\nexport default AddDeviceModal;\n\nAddDeviceModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  setIsCreateGroupModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  deviceIds: PropTypes.array,\n};\n","import React, { useEffect, useState, Suspense } from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport DeviceTable from './DeviceTable';\nimport AddDeviceModal from './AddDeviceModal';\nimport RemoveDeviceModal from './RemoveDeviceModal';\nimport CreateGroupModal from '../Groups/CreateGroupModal';\nimport useApi from '../../hooks/useApi';\nimport { getInventory } from '../../api/devices';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { editDisplayName, deleteEntity } from '../../store/actions';\nimport { useDispatch } from 'react-redux';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useFeatureFlags } from '../../utils';\nimport {\n  FEATURE_HIDE_GROUP_ACTIONS,\n  FEATURE_PARITY_INVENTORY_GROUPS,\n} from '../../constants/features';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(/* webpackChunkName: \"UpdateDeviceModal\" */ './UpdateDeviceModal')\n);\n\nconst TextInputModal = (props) => (\n  <AsyncComponent appName=\"inventory\" module=\"./TextInputModal\" {...props} />\n);\n\nconst DeleteModal = (props) => (\n  <AsyncComponent appName=\"inventory\" module=\"./DeleteModal\" {...props} />\n);\n\nconst Inventory = ({\n  historyProp,\n  navigateProp,\n  locationProp,\n  showHeaderProp,\n  notificationProp,\n  urlName,\n}) => {\n  const chrome = useChrome();\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const { pathname } = locationProp\n    ? locationProp()\n    : useLocation\n    ? useLocation()\n    : null;\n  const [response, fetchDevices] = useApi({\n    api: getInventory,\n    tableReload: true,\n  });\n  const showHeader = showHeaderProp === undefined ? true : showHeaderProp;\n  const { data, isLoading, hasError } = response;\n  const [isAddDeviceModalOpen, setIsAddDeviceModalOpen] = useState(false);\n  const [isRemoveDeviceModalOpen, setIsRemoveDeviceModalOpen] = useState(false);\n  const [isEditNameModalOpen, setIsEditNameModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deviceId, setDeviceId] = useState([]);\n  const [checkedDeviceIds, setCheckedDeviceIds] = useState([]);\n  const [isRowSelected, setIsRowSelected] = useState(false);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n  const [isCreateGroupModalOpen, setIsCreateGroupModalOpen] = useState(false);\n  const dispatch = useDispatch();\n\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  const handleAddDevicesToGroup = (ids, isRow) => {\n    setIsAddDeviceModalOpen(true);\n    isRow ? setDeviceId(ids) : setCheckedDeviceIds(ids);\n    setIsRowSelected(isRow);\n  };\n\n  const handleRemoveDevicesFromGroup = (ids, isRow) => {\n    setIsRemoveDeviceModalOpen(true);\n    isRow ? setDeviceId(ids) : setCheckedDeviceIds(ids);\n    setIsRowSelected(isRow);\n  };\n\n  const handleEditNameSystem = (ids, isRow) => {\n    setIsEditNameModalOpen(true);\n    isRow ? setDeviceId(ids) : setCheckedDeviceIds(ids);\n    setIsRowSelected(isRow);\n  };\n\n  const handleDeleteSystem = (ids, isRow) => {\n    setIsDeleteModalOpen(true);\n    isRow ? setDeviceId(ids) : setCheckedDeviceIds(ids);\n    setIsRowSelected(isRow);\n  };\n\n  const canBeUpdated = () => {\n    let canBeUpdated = false;\n    if (checkedDeviceIds.length > 0) {\n      let initialImage = checkedDeviceIds[0].imageSetId;\n      for (let device of checkedDeviceIds) {\n        if (device.imageSetId !== initialImage) {\n          canBeUpdated = false;\n          break;\n        }\n        if (\n          (!canBeUpdated &&\n            device.updateImageData &&\n            device.deviceStatus === 'updateAvailable') ||\n          device.deviceStatus === 'unresponsive' ||\n          device.deviceStatus === 'error'\n        ) {\n          canBeUpdated = true;\n        }\n      }\n    }\n    return canBeUpdated;\n  };\n\n  const handleUpdateSelected = () => {\n    setUpdateModal((prevState) => ({\n      ...prevState,\n      deviceData: checkedDeviceIds.map((device) => ({\n        id: device.id,\n        display_name: device.display_name,\n        deviceStatus: device.deviceStatus,\n      })),\n      imageData: { imageName: checkedDeviceIds[0].imageName },\n      imageSetId: checkedDeviceIds[0].imageSetId,\n      isOpen: true,\n    }));\n  };\n\n  const reloadData = async () => {\n    await fetchDevices();\n    setHasModalSubmitted(true);\n  };\n  let classNameMain = '';\n  if (showHeaderProp !== undefined && showHeader) {\n    classNameMain =\n      'edge-devices pf-l-page__main-section pf-c-page__main-section';\n  } else if (!showHeader) {\n    classNameMain = 'pf-c-toolbar';\n  }\n\n  function handleOnSubmitEditName(value) {\n    const uuid = isRowSelected ? deviceId[0].UUID : checkedDeviceIds[0].UUID;\n    const name = isRowSelected ? deviceId[0].name : checkedDeviceIds[0].name;\n    const statusMessages = {\n      onSuccess: {\n        title: `Display name for entity with ID ${uuid} has been changed to ${value}`,\n      },\n      onError: { title: 'Error', description: 'Failed to update device name' },\n    };\n    if (notificationProp) {\n      apiWithToast(\n        dispatch,\n        () => editDisplayName(uuid, value, name),\n        statusMessages,\n        notificationProp\n      );\n    } else {\n      dispatch(editDisplayName(uuid, value, name));\n    }\n    setIsEditNameModalOpen(false);\n  }\n\n  function handleOnConfirmDeleteSystem() {\n    const systemInstance = isRowSelected ? deviceId[0] : checkedDeviceIds[0];\n\n    let displayName = systemInstance.display_name;\n    let removeSystems = [systemInstance.UUID];\n    const statusInitialMessages = {\n      onWarning: {\n        title: 'Delete operation initiated',\n        description: `Removal of ${displayName} started.`,\n      },\n      onError: {\n        title: 'Error',\n        description: 'Failed to initial delete device',\n      },\n    };\n    const statusMessages = {\n      onSuccess: {\n        title: 'Delete operation finished',\n        description: `${displayName} has been successfully removed.`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete device' },\n    };\n\n    if (notificationProp) {\n      apiWithToast(\n        dispatch,\n        () =>\n          addNotification({\n            id: 'remove-initiated',\n            variant: 'warning',\n          }),\n        statusInitialMessages,\n        notificationProp\n      );\n      apiWithToast(\n        dispatch,\n        () => deleteEntity(removeSystems, displayName),\n        statusMessages,\n        notificationProp\n      );\n    } else {\n      dispatch(\n        addNotification({\n          id: 'remove-initiated',\n          variant: 'warning',\n          title: 'Delete operation initiated',\n          description: `Removal of ${displayName} started.`,\n          dismissable: false,\n        })\n      );\n      dispatch(deleteEntity(removeSystems, displayName));\n    }\n    setIsDeleteModalOpen(false);\n  }\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.('Systems - Inventory | Edge management');\n  }, [chrome]);\n\n  const hideGroupsActions = useFeatureFlags(FEATURE_HIDE_GROUP_ACTIONS);\n  const kebabMenuItems = [];\n  if (!hideGroupsActions) {\n    const groupsKebabMenuItems = [\n      {\n        isDisabled: inventoryGroupsEnabled\n          ? !(checkedDeviceIds.length > 0) ||\n            checkedDeviceIds.filter((device) => device.deviceGroups?.length > 0)\n              .length > 0 // The action menu item is disabled if one of the systems items belongs to a group\n          : !(checkedDeviceIds.length > 0),\n        title: 'Add to group',\n        onClick: () =>\n          handleAddDevicesToGroup(\n            checkedDeviceIds.map((device) => ({\n              ID: device.deviceID,\n              name: device.display_name,\n              UUID: device.id,\n            })),\n            false\n          ),\n      },\n    ];\n\n    if (inventoryGroupsEnabled) {\n      groupsKebabMenuItems.push({\n        isDisabled:\n          !(checkedDeviceIds.length > 0) || // disable if no system checked\n          checkedDeviceIds.filter(\n            // disable if any checked systems has no groups assigned\n            (device) =>\n              device.deviceGroups === undefined ||\n              device.deviceGroups.length === 0\n          ).length > 0 ||\n          checkedDeviceIds.reduce((acc, device) => {\n            // disable if the checked systems has different groups assigned\n            const groupIDS = device.deviceGroups\n              ? device.deviceGroups.map((group) => group.ID)\n              : [];\n            const newGroupIDS = groupIDS.filter(\n              (groupID) => !acc.includes(groupID)\n            );\n            acc.push(...newGroupIDS);\n            return acc;\n          }, []).length !== 1,\n        title: 'Remove from group',\n        onClick: () =>\n          handleRemoveDevicesFromGroup(\n            checkedDeviceIds.map((device) => ({\n              ID: device.deviceID,\n              name: device.display_name,\n              UUID: device.id,\n              deviceGroups: device.deviceGroups,\n            })),\n            false\n          ),\n      });\n    }\n    kebabMenuItems.push(...groupsKebabMenuItems);\n  }\n\n  return (\n    <>\n      {showHeader && (\n        <PageHeader className=\"pf-m-light\">\n          <PageHeaderTitle title=\"Systems\" />\n        </PageHeader>\n      )}\n      {showHeader}\n      <section className={classNameMain}>\n        <DeviceTable\n          historyProp={historyProp}\n          navigateProp={navigateProp}\n          locationProp={locationProp}\n          isSystemsView={true}\n          data={data?.data?.devices}\n          count={data?.count}\n          isLoading={isLoading}\n          hasError={hasError}\n          setUpdateModal={setUpdateModal}\n          updateModal={updateModal}\n          handleAddDevicesToGroup={handleAddDevicesToGroup}\n          handleRemoveDevicesFromGroup={handleRemoveDevicesFromGroup}\n          handleEditNameSystem={handleEditNameSystem}\n          handleDeleteSystem={handleDeleteSystem}\n          handleUpdateSelected={handleUpdateSelected}\n          hasCheckbox={true}\n          selectedItems={setCheckedDeviceIds}\n          selectedItemsUpdateable={canBeUpdated()}\n          kebabItems={kebabMenuItems.length > 0 ? kebabMenuItems : undefined}\n          hasModalSubmitted={hasModalSubmitted}\n          setHasModalSubmitted={setHasModalSubmitted}\n          fetchDevices={fetchDevices}\n          urlName={urlName}\n        />\n      </section>\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateModal((prevState) => {\n                console.log('Click modal');\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            notificationProp={notificationProp}\n            refreshTable={reloadData}\n          />\n        </Suspense>\n      )}\n      {isAddDeviceModalOpen && (\n        <AddDeviceModal\n          isModalOpen={isAddDeviceModalOpen}\n          setIsModalOpen={setIsAddDeviceModalOpen}\n          setIsCreateGroupModalOpen={setIsCreateGroupModalOpen}\n          reloadData={reloadData}\n          deviceIds={isRowSelected ? deviceId : checkedDeviceIds}\n        />\n      )}\n      {isCreateGroupModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateGroupModalOpen}\n          setIsModalOpen={setIsCreateGroupModalOpen}\n          reloadData={reloadData}\n          deviceIds={isRowSelected ? deviceId : checkedDeviceIds}\n        />\n      )}\n      {isRemoveDeviceModalOpen && (\n        <RemoveDeviceModal\n          isModalOpen={isRemoveDeviceModalOpen}\n          setIsModalOpen={setIsRemoveDeviceModalOpen}\n          reloadData={reloadData}\n          deviceInfo={isRowSelected ? deviceId : checkedDeviceIds}\n        />\n      )}\n      {isEditNameModalOpen && (\n        <TextInputModal\n          isOpen={isEditNameModalOpen}\n          title=\"Edit display name\"\n          value={isRowSelected ? deviceId[0].name : checkedDeviceIds[0].name}\n          ariaLabel=\"Host inventory display name\"\n          modalOuiaId=\"edit-display-name-modal\"\n          cancelOuiaId=\"cancel-edit-display-name\"\n          confirmOuiaId=\"confirm-edit-display-name\"\n          inputOuiaId=\"input-edit-display-name\"\n          onCancel={() => setIsEditNameModalOpen(false)}\n          onSubmit={handleOnSubmitEditName}\n          className=\"sentry-mask data-hj-suppress\"\n        />\n      )}\n      {isDeleteModalOpen && (\n        <DeleteModal\n          className=\"sentry-mask data-hj-suppress\"\n          handleModalToggle={setIsDeleteModalOpen}\n          isModalOpen={isDeleteModalOpen}\n          currentSytems={isRowSelected ? deviceId[0] : checkedDeviceIds[0]}\n          onConfirm={handleOnConfirmDeleteSystem}\n        />\n      )}\n    </>\n  );\n};\n\nInventory.propTypes = {\n  historyProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  showHeaderProp: PropTypes.bool,\n  notificationProp: PropTypes.object,\n  urlName: PropTypes.string,\n};\n\nexport default Inventory;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport {\n  createGroup,\n  createInventoryGroup,\n  addDevicesToGroup,\n  validateGroupName,\n  validateInventoryGroupName,\n  addDevicesToInventoryGroup,\n} from '../../api/groups';\nimport { nameValidator, useFeatureFlags } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport { FEATURE_PARITY_INVENTORY_GROUPS } from '../../constants/features';\n\nconst asyncGroupNameValidation = async (value = '') => {\n  // do not fire validation request for empty name\n  if (value.length === 0) {\n    return undefined;\n  }\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    // async validator has to throw error, not return it\n    throw 'Group name already exists';\n  }\n};\n\nconst asyncInventoryGroupNameValidation = async (value = '') => {\n  // do not fire validation request for empty name\n  if (value.length === 0) {\n    return undefined;\n  }\n  const resp = await validateInventoryGroupName(value);\n  if (resp.results.length > 0 && resp.results[0].name === value) {\n    // async validator has to throw error, not return it\n    throw 'Group name already exists';\n  }\n};\n\nconst validatorMapper = {\n  groupName: () => asyncGroupNameValidation,\n};\n\nconst inventoryValidatorMapper = {\n  groupName: () => asyncInventoryGroupNameValidation,\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        // async validator has to be first in the list\n        { type: 'groupName' },\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n    },\n  ],\n};\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  deviceIds,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  const handleCreateGroup = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${values.name} has been created successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to create group' },\n    };\n\n    let createGroupFunc;\n    if (inventoryGroupsEnabled) {\n      createGroupFunc = () => createInventoryGroup(values);\n    } else {\n      createGroupFunc = () => createGroup(values);\n    }\n    return apiWithToast(dispatch, createGroupFunc, statusMessages);\n  };\n\n  const handleAddDevicesToNewGroup = async (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to add system to group' },\n    };\n\n    let addDevicesToGroupFunc;\n    if (inventoryGroupsEnabled) {\n      const { id } = await handleCreateGroup(values);\n      addDevicesToGroupFunc = () => addDevicesToInventoryGroup(id, deviceIds);\n    } else {\n      const { ID } = await handleCreateGroup(values);\n      addDevicesToGroupFunc = () => addDevicesToGroup(parseInt(ID), deviceIds);\n    }\n    apiWithToast(dispatch, addDevicesToGroupFunc, statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={createGroupSchema}\n      onSubmit={deviceIds ? handleAddDevicesToNewGroup : handleCreateGroup}\n      reloadData={reloadData}\n      validatorMapper={\n        inventoryGroupsEnabled ? inventoryValidatorMapper : validatorMapper\n      }\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  deviceIds: PropTypes.array,\n};\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nexport const LOAD_DEVICE_SUMMARY = 'LOAD_DEVICE_SUMMARY';\nexport const LOAD_ACTIVE_IMAGES = 'LOAD_ACTIVE_IMAGES';\nexport const LOAD_EDGE_IMAGES = 'LOAD_EDGE_IMAGES';\nexport const LOAD_EDGE_IMAGE_SETS = 'LOAD_EDGE_IMAGE_SETS';\nexport const LOAD_EDGE_IMAGE_PACKAGES = 'LOAD_EDGE_IMAGE_PACKAGES';\nexport const LOAD_GROUPS = 'LOAD_GROUPS';\nexport const LOAD_GROUP_DETAIL = 'LOAD_GROUP_DETAIL';\nexport const LOAD_TRESHOLD = 'LOAD_TRESHOLD';\nexport const LOAD_DEVICES_INFO = 'LOAD_DEVICES_INFO';\nexport const LOAD_CANARIES_INFO = 'LOAD_CANARIES_INFO';\nexport const LOAD_GROUP_DEVICES_INFO = 'LOAD_GROUP_DEVICES_INFO';\nexport const LOAD_IMAGE_STATUS = 'LOAD_IMAGE_STATUS';\nexport const LOAD_IMAGE_DETAIL = 'LOAD_IMAGE_DETAIL';\nexport const LOAD_IMAGE_SET_DETAIL = 'LOAD_IMAGE_SET_DETAIL';\nexport const CREATE_NEW_IMAGE = 'CREATE_NEW_IMAGE';\nexport const CREATE_NEW_IMAGE_RESET = `${CREATE_NEW_IMAGE}_RESET`;\nexport const POLLING_IMAGES = 'POLLING_IMAGES';\nexport const LOAD_DEVICE_TABLE = 'LOAD_DEVICE_TABLE';\nexport const UPDATE_DISPLAY_NAME = 'UPDATE_DISPLAY_NAME';\nexport const REMOVE_ENTITY = 'REMOVE_ENTITY';\n\nconst asyncActions = flatMap(\n  [\n    LOAD_EDGE_IMAGES,\n    LOAD_EDGE_IMAGE_SETS,\n    LOAD_EDGE_IMAGE_PACKAGES,\n    LOAD_ACTIVE_IMAGES,\n    LOAD_GROUPS,\n    LOAD_GROUP_DETAIL,\n    LOAD_TRESHOLD,\n    LOAD_DEVICES_INFO,\n    LOAD_CANARIES_INFO,\n    LOAD_GROUP_DEVICES_INFO,\n    LOAD_IMAGE_STATUS,\n    LOAD_IMAGE_DETAIL,\n    LOAD_IMAGE_SET_DETAIL,\n    CREATE_NEW_IMAGE,\n    LOAD_DEVICE_TABLE,\n    UPDATE_DISPLAY_NAME,\n    REMOVE_ENTITY,\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\nexport const ACTION_TYPES = keyBy(asyncActions, (k) => k);\n\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const PRE_SELECT_ENTITY = 'PRE_SELECT_ENTITY';\nexport const CLEAN_ENTITIES = 'CLEAN_ENTITIES';\n","import {\n  ACTION_TYPES,\n  LOAD_TRESHOLD,\n  LOAD_DEVICES_INFO,\n  LOAD_CANARIES_INFO,\n  LOAD_GROUP_DETAIL,\n  LOAD_GROUP_DEVICES_INFO,\n  SELECT_ENTITY,\n  PRE_SELECT_ENTITY,\n  CLEAN_ENTITIES,\n  LOAD_ACTIVE_IMAGES,\n  LOAD_EDGE_IMAGES,\n  LOAD_EDGE_IMAGE_SETS,\n  LOAD_EDGE_IMAGE_PACKAGES,\n  LOAD_DEVICE_SUMMARY,\n  LOAD_IMAGE_STATUS,\n  LOAD_IMAGE_DETAIL,\n  LOAD_IMAGE_SET_DETAIL,\n  CREATE_NEW_IMAGE,\n  POLLING_IMAGES,\n  LOAD_DEVICE_TABLE,\n} from './action-types';\n\nimport {\n  fetchImageStatus,\n  getImageById,\n  fetchEdgeImages,\n  fetchEdgeImageSets,\n  getImagePackageMetadata,\n  createImage,\n  getImageSet,\n  fetchActiveImages,\n} from '../api/images';\nimport { getInventory } from '../api/devices';\nimport { hosts } from '../api';\nimport { deleteSystemsById } from '../utils';\n\nexport const loadThreshold = () => ({\n  type: LOAD_TRESHOLD,\n  payload: () => {},\n});\n\nexport const loadDevicesInfo = () => ({\n  type: LOAD_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const loadCanariesInfo = () => ({\n  type: LOAD_CANARIES_INFO,\n  payload: () => {},\n});\n\nexport const loadGroupsDetail = () => ({\n  type: LOAD_GROUP_DETAIL,\n  payload: () => {},\n});\n\nexport const loadGroupDevicesInfo = () => ({\n  type: LOAD_GROUP_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const selectEntity = (id, selected) => ({\n  type: SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const preSelectEntity = (id, selected) => ({\n  type: PRE_SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const cleanEntities = () => ({\n  type: CLEAN_ENTITIES,\n});\n\nexport const loadImages = (dispatch, pagination) => {\n  dispatch({\n    type: LOAD_ACTIVE_IMAGES,\n    payload: fetchActiveImages(pagination),\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show images data',\n          description: 'Failed receiving images from image-builder',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadDeviceSummary = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_SUMMARY,\n    payload: () => {},\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show system summary data',\n          description: 'Failed receiving system summary data from inventory',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadImageStatus = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_STATUS,\n    payload: fetchImageStatus({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const loadImageDetail = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_DETAIL,\n    payload: getImageById({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const createNewImage = (dispatch, payload, callback) => {\n  dispatch({\n    type: CREATE_NEW_IMAGE,\n    payload: createImage(payload),\n  })\n    .then(callback)\n    .catch(() => null);\n};\n\nexport const loadEdgeImages = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGES,\n    payload: fetchEdgeImages(query),\n  }).catch(() => null);\n};\n\nexport const loadEdgeImageSets = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_SETS,\n    payload: fetchEdgeImageSets(query),\n  }).catch(() => null);\n};\n\nexport const setPolling = (toStart, interval) => {\n  const subAction = toStart ? 'START' : 'END';\n  const payload = toStart ? { interval } : {};\n  return {\n    type: `${POLLING_IMAGES}_${subAction}`,\n    ...payload,\n  };\n};\n\nexport const addImageToPoll = ({ id, name }) => {\n  return {\n    type: `${POLLING_IMAGES}_ADD`,\n    payload: {\n      name,\n      id,\n    },\n  };\n};\n\nexport const removeImagesToPoll = (ids) => {\n  return {\n    type: `${POLLING_IMAGES}_REMOVE`,\n    ids,\n  };\n};\n\nexport const loadImageSetDetail = (dispatch, urlParam, query) => {\n  dispatch({\n    type: LOAD_IMAGE_SET_DETAIL,\n    payload: getImageSet({ id: urlParam, q: query }),\n  }).catch(() => null);\n};\n\nexport const loadImagePackageMetadata = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_PACKAGES,\n    payload: getImagePackageMetadata(imageId),\n  }).catch(() => null);\n};\n\nexport const loadDeviceTable = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_TABLE,\n    payload: getInventory(),\n  }).catch(() => null);\n};\n\nexport const editDisplayName = (id, value, origValue) => ({\n  type: ACTION_TYPES.UPDATE_DISPLAY_NAME,\n  payload: hosts.apiHostPatchHostById([id], { display_name: value }),\n  meta: {\n    id,\n    value,\n    origValue,\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: `Display name for entity with ID ${id} has been changed to ${value}`,\n        dismissable: true,\n      },\n    },\n  },\n});\n\nexport const deleteEntity = (systems, displayName) => ({\n  type: ACTION_TYPES.REMOVE_ENTITY,\n  payload: deleteSystemsById(systems),\n  meta: {\n    notifications: {\n      fulfilled: {\n        variant: 'success',\n        title: 'Delete operation finished',\n        description: `${displayName} has been successfully removed.`,\n        dismissable: true,\n      },\n    },\n    systems,\n  },\n});\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["HelperText","_a","children","className","component","id","isLiveRegion","props","__rest","Component","Object","assign","displayName","variantStyle","default","indeterminate","warning","success","error","HelperTextItem","variant","icon","isDynamic","hasIcon","screenReaderText","MinusIconConfig","name","height","width","svgPath","yOffset","xOffset","MinusIcon","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","BaseAsyncComponent","appName","scope","module","_b","fallback","Bullseye","Spinner","size","innerRef","_c","Cmp","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","SCProps","ErrorComponent","ref","ScalprumComponent","useFieldApi","inventoryGroupsEnabled","useFeatureFlags","FEATURE_PARITY_INVENTORY_GROUPS","change","useFormApi","useState","isOpen","setIsOpen","selected","setSelected","useApi","api","getInventoryGroups","getGroups","data","isLoading","fetchGroups","searchTerm","setSearchTerm","updateSelection","value","options","results","totalCount","total","count","Select","typeAheadAriaLabel","onToggle","onSelect","_event","selection","onClear","selections","onFilter","encodeURIComponent","placeholderText","noResultsFoundText","isInputValuePersisted","maxHeight","map","DeviceGroup","SelectOption","key","ID","toString","Name","groupId","CreateGroupButton","closeModal","Text","Button","onClick","propTypes","PropTypes","createDescription","deviceIds","systemText","createSchema","fields","componentTypes","label","isRequired","validate","type","validatorTypes","AddDeviceModal","isModalOpen","setIsModalOpen","setIsCreateGroupModalOpen","reloadData","dispatch","useDispatch","Modal","title","submitLabel","additionalMappers","SearchInputApi","schema","onSubmit","values","addDevicesToGroupFunc","group","statusMessages","onSuccess","description","onError","addDevicesToInventoryGroup","addDevicesToGroup","parseInt","apiWithToast","UpdateDeviceModal","React","TextInputModal","AsyncComponent","DeleteModal","Inventory","historyProp","navigateProp","locationProp","showHeaderProp","notificationProp","urlName","chrome","useChrome","history","useHistory","pathname","useLocation","getInventory","tableReload","response","fetchDevices","showHeader","undefined","hasError","isAddDeviceModalOpen","setIsAddDeviceModalOpen","isRemoveDeviceModalOpen","setIsRemoveDeviceModalOpen","isEditNameModalOpen","setIsEditNameModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","deviceId","setDeviceId","checkedDeviceIds","setCheckedDeviceIds","isRowSelected","setIsRowSelected","hasModalSubmitted","setHasModalSubmitted","isCreateGroupModalOpen","deviceData","imageData","updateModal","setUpdateModal","handleAddDevicesToGroup","ids","isRow","handleRemoveDevicesFromGroup","classNameMain","useEffect","updateDocumentTitle","kebabMenuItems","FEATURE_HIDE_GROUP_ACTIONS","groupsKebabMenuItems","isDisabled","filter","device","deviceGroups","deviceID","display_name","UUID","push","reduce","acc","newGroupIDS","groupID","includes","PageHeader","PageHeaderTitle","DeviceTable","isSystemsView","devices","handleEditNameSystem","handleDeleteSystem","handleUpdateSelected","prevState","deviceStatus","imageName","imageSetId","hasCheckbox","selectedItems","selectedItemsUpdateable","canBeUpdated","initialImage","updateImageData","kebabItems","Suspense","navigateBack","console","log","refreshTable","CreateGroupModal","RemoveDeviceModal","deviceInfo","ariaLabel","modalOuiaId","cancelOuiaId","confirmOuiaId","inputOuiaId","onCancel","uuid","editDisplayName","handleModalToggle","currentSytems","onConfirm","systemInstance","removeSystems","statusInitialMessages","onWarning","addNotification","deleteEntity","dismissable","asyncGroupNameValidation","validateGroupName","isValid","asyncInventoryGroupNameValidation","validateInventoryGroupName","resp","validatorMapper","groupName","inventoryValidatorMapper","createGroupSchema","helperText","autoFocus","threshold","nameValidator","handleCreateGroup","createGroupFunc","createInventoryGroup","createGroup","handleAddDevicesToNewGroup","LOAD_DEVICE_SUMMARY","LOAD_ACTIVE_IMAGES","LOAD_EDGE_IMAGES","LOAD_EDGE_IMAGE_SETS","LOAD_EDGE_IMAGE_PACKAGES","LOAD_GROUPS","LOAD_GROUP_DETAIL","LOAD_TRESHOLD","LOAD_DEVICES_INFO","LOAD_CANARIES_INFO","LOAD_GROUP_DEVICES_INFO","LOAD_IMAGE_STATUS","LOAD_IMAGE_DETAIL","LOAD_IMAGE_SET_DETAIL","CREATE_NEW_IMAGE","POLLING_IMAGES","LOAD_DEVICE_TABLE","asyncActions","flatMap","a","ACTION_TYPES","keyBy","k","loadImageDetail","imageId","payload","getImageById","createNewImage","callback","createImage","then","loadEdgeImageSets","query","fetchEdgeImageSets","addImageToPoll","origValue","hosts","meta","notifications","fulfilled","systems","deleteSystemsById","baseEach","isArrayLike","exports","collection","iteratee","index","result","Array","baseFlatten","baseAssignValue","createAggregator","arrayMap","baseIteratee","baseMap","isArray"],"sourceRoot":""}