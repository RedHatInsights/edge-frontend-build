{"version":3,"file":"js/Groups.3ff9ea2affb343b93d7b.js","mappings":"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","sources":["webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/GroupTable.js","webpack:///./src/Routes/Groups/Groups.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/constants/features.js","webpack:///./src/utils/apiWithToast.js","webpack:///./node_modules/lodash/_baseFlatten.js","webpack:///./node_modules/lodash/_isFlattenable.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React, { useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Bullseye, Spinner, Tooltip } from '@patternfly/react-core';\nimport { useFeatureFlags } from '../../utils';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateDeviceModal\" */ '../Devices/UpdateDeviceModal'\n  )\n);\n\nconst filters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  // {\n  //   label: 'Image',\n  //   type: 'text',\n  // },\n];\n\nconst columns = [\n  { title: 'Name', type: 'name', sort: true },\n  { title: 'Systems', type: 'name', sort: false },\n  { title: 'Image', type: 'name', sort: false },\n];\n\nconst GroupTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  handleCreateModal,\n  handleRenameModal,\n  handleDeleteModal,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n  fetchGroups,\n}) => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n\n  const actionResolver = (rowData) => {\n    if (!rowData?.rowInfo) return [];\n    const { id, title, devices, devicesImageInfo } = rowData.rowInfo;\n    const hasUpdate = devicesImageInfo?.some((image) => image.UpdateAvailable);\n\n    return (\n      id && [\n        {\n          title: 'Rename',\n          onClick: () => handleRenameModal(id, title),\n        },\n        {\n          title: 'Delete',\n          onClick: () => handleDeleteModal(id, title),\n        },\n        {\n          title: 'Update',\n          onClick: () =>\n            setUpdateModal((prevState) => ({\n              ...prevState,\n              deviceData: devices.map((device) => ({\n                id: device.UUID,\n                display_name: device.Name,\n              })),\n              imageId: devices.find((device) => device?.ImageID).ImageID,\n              isOpen: true,\n            })),\n          isDisabled:\n            devices.length > 0\n              ? !(rowData?.rowInfo?.hasValidUpdate && hasUpdate)\n              : true,\n        },\n      ]\n    );\n  };\n\n  const buildRows = data?.map((rowData) => {\n    const { ID, Name, Devices } = rowData.DeviceGroup;\n    let { DevicesImageInfo } = rowData;\n    if (!DevicesImageInfo) {\n      DevicesImageInfo = [];\n    }\n    const systems = Devices ?? [];\n    const image = (\n      <div>\n        <Tooltip\n          content={\n            <div>\n              {DevicesImageInfo.map((device, index) => (\n                <p key={index}>{device.Name}</p>\n              ))}\n            </div>\n          }\n        >\n          <span>Multiple images</span>\n        </Tooltip>\n      </div>\n    );\n\n    return {\n      rowInfo: {\n        id: ID,\n        title: Name,\n        image:\n          DevicesImageInfo.length === 0\n            ? '-'\n            : DevicesImageInfo.length > 1\n            ? 'Multiple images'\n            : DevicesImageInfo[0]?.Name,\n        devicesImageInfo: rowData.DevicesImageInfo,\n        devices: Devices,\n        hasValidUpdate: rowData?.DeviceGroup?.ValidUpdate,\n      },\n      cells: [\n        {\n          title: <Link to={`${paths.fleetManagement}/${ID}`}>{Name}</Link>,\n        },\n        {\n          title: systems.length,\n        },\n        {\n          title:\n            DevicesImageInfo.length === 0\n              ? '-'\n              : DevicesImageInfo.length > 1\n              ? image\n              : DevicesImageInfo[0]?.Name,\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchGroups}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columns}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        emptyFilterState={{\n          title: 'No matching groups found',\n          body: 'To continue, edit your filter settings and try again',\n        }}\n        toolbarButtons={\n          hideCreateGroupsEnabled\n            ? []\n            : [\n                {\n                  title: 'Create group',\n                  click: handleCreateModal,\n                },\n              ]\n        }\n        hasModalSubmitted={hasModalSubmitted}\n        setHasModalSubmitted={setHasModalSubmitted}\n      />\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateModal((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            refreshTable={async () => {\n              await fetchGroups();\n              setHasModalSubmitted(true);\n            }}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nGroupTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  closeModal: PropTypes.func,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  handleRenameModal: PropTypes.func,\n  handleDeleteModal: PropTypes.func,\n  handleCreateModal: PropTypes.func,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  fetchGroups: PropTypes.func,\n};\n\nexport default GroupTable;\n","import React, { useEffect, useState } from 'react';\nimport { Flex } from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport GroupTable from './GroupTable';\nimport Empty from '../../components/Empty';\nimport { getGroups } from '../../api/groups';\nimport CreateGroupModal from './CreateGroupModal';\nimport RenameGroupModal from './RenameGroupModal';\nimport DeleteGroupModal from './DeleteGroupModal';\nimport useApi from '../../hooks/useApi';\nimport { useLocation } from 'react-router-dom';\nimport { emptyStateNoFilters, useFeatureFlags } from '../../utils';\n\nconst Groups = () => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n  const { search } = useLocation();\n  const [response, fetchGroups] = useApi({\n    api: getGroups,\n    tableReload: true,\n  });\n  const chrome = useChrome();\n  const { data, isLoading, hasError } = response;\n\n  const [modalState, setModalState] = useState({ id: null, name: '' });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const handleRenameModal = (id, name) => {\n    setModalState({ id, name });\n    setIsRenameModalOpen(true);\n  };\n\n  const handleDeleteModal = (id, name) => {\n    setModalState({ id, name });\n    setIsDeleteModalOpen(true);\n  };\n\n  const reloadData = async () => {\n    await fetchGroups();\n    setHasModalSubmitted(true);\n  };\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.('Groups - Inventory | Edge management');\n  }, [chrome]);\n\n  return (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Groups\" />\n      </PageHeader>\n      <section className=\"edge-groups pf-l-page__main-section pf-c-page__main-section\">\n        {!emptyStateNoFilters(isLoading, data?.count, search) ? (\n          <GroupTable\n            data={data?.data || []}\n            count={data?.count}\n            isLoading={isLoading}\n            hasError={hasError}\n            handleRenameModal={handleRenameModal}\n            handleDeleteModal={handleDeleteModal}\n            handleCreateModal={() => setIsCreateModalOpen(true)}\n            hasModalSubmitted={hasModalSubmitted}\n            setHasModalSubmitted={setHasModalSubmitted}\n            fetchGroups={fetchGroups}\n          />\n        ) : (\n          <Flex justifyContent={{ default: 'justifyContentCenter' }}>\n            {hideCreateGroupsEnabled}?{}:\n            <Empty\n              icon=\"plus\"\n              title=\"Create a system group\"\n              body=\"Create system groups to help manage your systems more effectively.\"\n              primaryAction={{\n                text: 'Create group',\n                click: () => setIsCreateModalOpen(true),\n              }}\n              secondaryActions={[\n                {\n                  type: 'link',\n                  title: 'Learn more about system groups',\n                  link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/working_with_systems_in_the_edge_management_application/index',\n                },\n              ]}\n            />\n            {}\n          </Flex>\n        )}\n      </section>\n\n      {isCreateModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateModalOpen}\n          setIsModalOpen={setIsCreateModalOpen}\n          reloadData={reloadData}\n        />\n      )}\n      {isRenameModalOpen && (\n        <RenameGroupModal\n          isModalOpen={isRenameModalOpen}\n          setIsModalOpen={setIsRenameModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n      {isDeleteModalOpen && (\n        <DeleteGroupModal\n          isModalOpen={isDeleteModalOpen}\n          setIsModalOpen={setIsDeleteModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","export const FEATURE_PARITY_INVENTORY_GROUPS =\n  'edgeParity.inventory-groups-enabled';\n\nexport const FEATURE_HIDE_GROUP_ACTIONS = 'edge-management.hide_groups_actions';\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages, notificationProp) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n  const hasWarning = statusMessages?.onWarning;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasInfo) {\n        if (notificationProp) {\n          notificationProp.hasInfo(statusMessages.onInfo);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              ...statusMessages.onInfo,\n            }),\n          });\n        }\n      }\n      if (hasSuccess) {\n        if (notificationProp) {\n          notificationProp.hasSuccess(statusMessages.onSuccess);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'success',\n              ...statusMessages.onSuccess,\n            }),\n          });\n        }\n      }\n      if (hasWarning) {\n        if (notificationProp) {\n          notificationProp.hasWarning(statusMessages.onWarning);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'warning',\n              ...statusMessages.onWarning,\n            }),\n          });\n        }\n      }\n      return response;\n    } catch (err) {\n      if (notificationProp) {\n        notificationProp.err(statusMessages.onError, err);\n      } else {\n        dispatch({\n          ...addNotification({\n            variant: 'danger',\n            ...statusMessages.onError,\n            // Add error message from API, if present\n            description: err?.Title\n              ? `${statusMessages.onError.description}: ${err.Title}`\n              : statusMessages.onError.description,\n          }),\n        });\n      }\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}"],"names":["description","name","schema","fields","component","componentTypes","label","validate","type","validatorTypes","WarningIcon","color","warningColor","DeleteGroupModal","isModalOpen","setIsModalOpen","reloadData","modalState","id","dispatch","useDispatch","isOpen","closeModal","title","titleIconVariant","variant","submitLabel","onSubmit","statusMessages","onSuccess","onError","apiWithToast","deleteGroupById","propTypes","PropTypes","UpdateDeviceModal","React","filters","columns","sort","GroupTable","data","count","isLoading","hasError","handleCreateModal","handleRenameModal","handleDeleteModal","hasModalSubmitted","setHasModalSubmitted","fetchGroups","hideCreateGroupsEnabled","useFeatureFlags","history","useHistory","pathname","useLocation","useState","deviceData","imageData","updateModal","setUpdateModal","buildRows","map","rowData","DeviceGroup","ID","Name","Devices","DevicesImageInfo","systems","image","Tooltip","content","device","index","key","rowInfo","length","devicesImageInfo","devices","hasValidUpdate","ValidUpdate","cells","to","paths","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","rows","actionResolver","hasUpdate","some","UpdateAvailable","onClick","prevState","UUID","display_name","imageId","find","ImageID","isDisabled","areActionsDisabled","defaultSort","direction","emptyFilterState","body","toolbarButtons","click","Suspense","fallback","Bullseye","Spinner","navigateBack","push","refreshTable","search","useApi","api","getGroups","tableReload","response","chrome","useChrome","setModalState","isCreateModalOpen","setIsCreateModalOpen","isRenameModalOpen","setIsRenameModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","useEffect","updateDocumentTitle","PageHeader","className","PageHeaderTitle","emptyStateNoFilters","Flex","justifyContent","default","Empty","icon","primaryAction","text","secondaryActions","link","CreateGroupModal","RenameGroupModal","asyncGroupNameValidation","value","validateGroupName","isValid","createGroupSchema","helperText","isRequired","threshold","nameValidator","initialValues","values","updateGroupById","FEATURE_PARITY_INVENTORY_GROUPS","FEATURE_HIDE_GROUP_ACTIONS","notificationProp","hasSuccess","hasInfo","onInfo","hasWarning","onWarning","fetchData","addNotification","err","Title","arrayPush","isFlattenable","module","exports","baseFlatten","array","depth","predicate","isStrict","result","Symbol","isArguments","isArray","spreadableSymbol","isConcatSpreadable","undefined","_objectWithoutProperties","source","excluded","i","target","Object","getOwnPropertySymbols","sourceSymbolKeys","indexOf","prototype","propertyIsEnumerable","call"],"sourceRoot":""}