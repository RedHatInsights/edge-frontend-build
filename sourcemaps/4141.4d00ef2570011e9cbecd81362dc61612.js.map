{"version":3,"file":"js/4141.eb18b23daf1c090612b5.js","mappings":"kKAAIA,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EAKWQ,EAAkB,SAAUC,GAAgB,MAAO,CAC1DC,KAAM,KACNC,QAASlB,EAAS,CAAEmB,GAJb,+BAAgC,IAAIC,MAAOC,UAAYC,KAAKC,SAASC,SAAS,IAAIC,MAAM,IAIzCT,GACtD,EACOU,EAAqB,SAAUC,GAAS,MAAO,CACtDV,KAAM,KACNC,QAASS,EACT,EACOC,EAAqB,WAAc,MAAO,CACjDX,KAAM,KACN,C,wMCnBEY,EAAeC,IAAAA,MAAW,kBAC9B,4HAEC,IASGC,EAASD,IAAAA,MAAW,kBACxB,uNAAiE,IAG7DE,EAAeF,IAAAA,MAAW,kBAC9B,iOAEC,IAGGG,EAAYH,IAAAA,MAAW,kBAC3B,2OAAwE,IAGpEI,EAAeJ,IAAAA,MAAW,kBAC9B,wLAA8E,IAG1EK,EAASL,IAAAA,MAAW,kBACxB,wLAAuE,IAGnEM,EAAcN,IAAAA,MAAW,kBAC7B,mPAEC,IAGGO,EAAeP,IAAAA,MAAW,kBAC9B,6MAEC,IAGGQ,EAAoBR,IAAAA,MAAW,kBACnC,uDAEC,IAGUS,EAAS,WACpB,OACET,IAAAA,cAACU,EAAAA,SAAQ,CACPC,SACEX,IAAAA,cAACY,EAAAA,EAAQ,KACPZ,IAAAA,cAACa,EAAAA,EAAO,CAACC,KAAK,SAIlBd,IAAAA,cAACe,EAAAA,GAAM,KACLf,IAAAA,cAACgB,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAMC,EAAAA,EAAMC,OAAQC,UAAWpB,IAC5CD,IAAAA,cAACgB,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAMC,EAAAA,EAAMG,aAAcD,UAAWnB,IAIlDF,IAAAA,cAACgB,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAMC,EAAAA,EAAMI,gBAAiBF,UAAWpB,IACrDD,IAAAA,cAACgB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAMC,EAAAA,EAAMK,sBACZH,UAAWnB,IAEbF,IAAAA,cAACgB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAMC,EAAAA,EAAMM,4BACZJ,UAAWtB,IAEbC,IAAAA,cAACgB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAMC,EAAAA,EAAMO,kCACZL,UAAWjB,IAEbJ,IAAAA,cAACgB,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAMC,EAAAA,EAAMQ,UAAWN,UAAWlB,IAC/CH,IAAAA,cAACgB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAMC,EAAAA,EAAMS,sBACZP,UAAWjB,IAEbJ,IAAAA,cAACgB,EAAAA,GAAK,CAACE,KAAMC,EAAAA,EAAMU,gBAAiBR,UAAWtB,IAC/CC,IAAAA,cAACgB,EAAAA,GAAK,CAACE,KAAMC,EAAAA,EAAMW,qBAAsBT,UAAWtB,IACpDC,IAAAA,cAACgB,EAAAA,GAAK,CAACE,KAAMC,EAAAA,EAAMY,0BAA2BV,UAAWf,IACzDN,IAAAA,cAACgB,EAAAA,GAAK,CAACE,KAAMC,EAAAA,EAAMa,mBAAoBX,UAAWf,IAClDN,IAAAA,cAACgB,EAAAA,GAAK,CAACE,KAAMC,EAAAA,EAAMc,aAAcZ,UAAWhB,IAE5CL,IAAAA,cAACgB,EAAAA,GAAK,CAACC,OAAK,EAACC,KAAMC,EAAAA,EAAMe,aAAcb,UAAWd,IAElDP,IAAAA,cAACgB,EAAAA,GAAK,CACJC,OAAK,EACLC,KAAMC,EAAAA,EAAMgB,kBACZd,UAAWb,IAEbR,IAAAA,cAACgB,EAAAA,GAAK,KACJhB,IAAAA,cAACoC,EAAAA,GAAQ,CAACC,GAAIlB,EAAAA,EAAMI,oBAK9B,E,0GCvCA,EAvEkB,WAChB,OACEvB,IAAAA,cAACsC,EAAAA,EAAK,CACJC,MAAO,CAAEC,QAAS,QAClBC,QAAQ,EACRC,QAAQ,QACRC,QAAS,kBAAOC,OAAOC,SAASC,KAAO,WAAHC,OAAcH,OAAOC,SAASG,KAAM,EACxE,aAAW,aACXC,OACEjD,IAAAA,cAAA,MAAIkD,UAAU,yFAAwF,mEAIxGC,OACEnD,IAAAA,cAACoD,EAAAA,EAAc,CACbb,MAAO,CACLc,QAAS,OACTC,eAAgB,SAChBC,MAAO,OACPC,cAAe,SACfC,WAAY,IAGdzD,IAAAA,cAAC0D,EAAAA,GAAM,CACLC,IAAI,cACJtC,UAAU,IACV6B,UAAU,aACVR,QAAQ,UACRkB,OAAO,SACPd,KAAK,kFACN,eAGD9C,IAAAA,cAAC0D,EAAAA,GAAM,CACLrC,UAAU,IACVsC,IAAI,mBACJT,UAAU,aACVR,QAAQ,YACRkB,OAAO,SACPd,KAAK,oCACN,4BAGD9C,IAAAA,cAAC0D,EAAAA,GAAM,CACLrC,UAAU,IACVsC,IAAI,UACJjB,QAAQ,OACRI,KAAI,WAAAC,OAAaH,OAAOC,SAASG,OAClC,YAKLa,MAAM,gDACNN,MAAM,SAENvD,IAAAA,cAAA,OACEuC,MAAO,CAAEuB,OAAQ,SAAUT,QAAS,SACpCU,IAAKC,EACLT,MAAM,QACNU,IAAI,cAENjE,IAAAA,cAAA,KAAGkD,UAAU,gDAA+C,4LAOlE,ECjBA,EA9CY,SAACgB,GACX,IAAQC,GAAgBC,EAAAA,EAAAA,YAAWC,EAAAA,GAA3BF,YACRG,GAAgCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAxCI,EAAQF,EAAA,GAAEG,EAAWH,EAAA,GACtBI,GAAUC,EAAAA,EAAAA,MAChBC,GAA4BP,EAAAA,EAAAA,UAAS,MAAKQ,GAAAN,EAAAA,EAAAA,GAAAK,EAAA,GAAnCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GA0BxB,OAzBAG,EAAAA,EAAAA,YAAU,WACRC,SAASC,OAAOC,YAAY,oBAE5BF,SAASC,OAAOE,GAAG,kBAAkB,SAACC,GAAK,OACzCX,EAAQY,KAAK,IAADzC,OAAKwC,EAAME,OAAQ,IAGjC,IAAMC,EAAavB,IAAcwB,SAAS,CACxCC,cAAeC,EAAAA,KAYjB,OAVAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACOhB,SAASC,OAAOgB,KAAKC,UAAS,OACpC1B,GAAY,GAAM,wBAAAsB,EAAAK,OAAA,GAAAN,EAAA,IAFpBF,IAKAA,EAAAA,EAAAA,GAAAC,IAAAA,MAAC,SAAAQ,IAAA,IAAAC,EAAA,OAAAT,IAAAA,MAAA,SAAAU,GAAA,cAAAA,EAAAP,KAAAO,EAAAN,MAAA,cAAAM,EAAAN,KAAA,EACoBhB,SAASC,OAAOgB,KAAKC,UAAS,OAA3CG,EAAIC,EAAAC,KACVzB,EAAUuB,EAAKG,aAAaC,iBAAiBC,aAAa,wBAAAJ,EAAAH,OAAA,GAAAC,EAAA,IAF5DT,GAKO,WACLJ,GACF,CACF,GAAG,IAGD1F,IAAAA,cAAC8G,EAAAA,SAAQ,KACP9G,IAAAA,cAAC+G,EAAAA,GAAkB,MAClB/B,GAAUN,EACT1E,IAAAA,cAACS,EAAM,CAACuG,WAAY9C,IACP,OAAXc,EACFhF,IAAAA,cAACY,EAAAA,EAAQ,KACPZ,IAAAA,cAACa,EAAAA,EAAO,CAACC,KAAK,QAGhBd,IAAAA,cAACiH,EAAS,MAIlB,E,mCC7CMC,EAAW,SAAHC,GAAsB,IAAhBC,EAASD,EAATC,UAEZC,GAAWC,EAAAA,EAAAA,UAAQ,kBAAOF,GAAYG,EAAAA,EAAAA,GAAKC,MAAUD,EAAAA,EAAAA,IAAM,GAAG,IACpE,OACEvH,IAAAA,cAACqE,EAAAA,EAAgBoD,SAAQ,CACvBC,MAAO,CACLvD,YAAa,kBAAMkD,CAAQ,IAG7BrH,IAAAA,cAACyH,EAAAA,SAAQ,CAACE,MAAON,EAASO,YACxB5H,IAAAA,cAAC6H,EAAAA,GAAM,CAACC,UAAUC,EAAAA,EAAAA,GAAYnF,OAAOC,SAASmF,SAAU,IACtDhI,IAAAA,cAACiI,EAAG,QAKd,EAEAf,EAASgB,UAAY,CACnBd,UAAWe,IAAAA,MAGb,WC3BAC,EAAAA,EAAAA,GAAWpI,IAAAA,cAACqI,EAAY,MAAKC,SAASC,eAAe,Q,gDCJ9C,IAAMC,EAAS,CACpBpH,OAAQ,UACRE,aAAc,gBACdmH,aAAc,6BACdC,SAAU,YACVnH,gBAAiB,oBACjBC,sBAAuB,6BACvBC,4BAA6B,+CAC7BC,kCACE,sDACFC,UAAW,aACXgH,kBAAmB,4CACnB9G,gBAAiB,uBACjBC,qBAAsB,gCACtBF,sBAAuB,8BACvBgH,8BAA+B,uCAC/B3G,aAAc,iBACdD,mBAAoB,0BACpBD,0BAA2B,mDAC3BG,aAAc,gBACdC,kBAAmB,sBACnB0G,2BAA4B,4B,2HCnBxBC,EAAiB,WAAkB,IAAjBC,EAAOtK,UAAAC,OAAA,QAAAsK,IAAAvK,UAAA,GAAAA,UAAA,GAAG,CAAC,EACjC,OAAOsK,aAAO,EAAPA,EAAS1J,MAAM0J,aAAO,EAAPA,EAASE,WAAWF,aAAO,EAAPA,EAASG,UACrD,EAIaH,EACX,WADkB,IACjBI,EAAQ1K,UAAAC,OAAA,QAAAsK,IAAAvK,UAAA,GAAAA,UAAA,GAAG,CAAC,EAAC,OACd,SAAA0I,GAAA,IAAGiC,EAAQjC,EAARiC,SAAQ,OACX,SAACjD,GAAI,OACL,SAACkD,GACC,IAAQlK,EAAwBkK,EAAxBlK,KAAMC,EAAkBiK,EAAlBjK,QAASkK,EAASD,EAATC,KACvB,GARkB,SAACnK,GAAI,OAAKA,EAAKoK,SAAS,IAADxG,OANtB,WAM4C,CAQ3DyG,CAAcrK,IAAS2J,EAAe1J,GAAU,CAClD,IAAQC,EAAoCD,EAApCC,GAAI4J,EAAgC7J,EAAhC6J,QAASC,EAAuB9J,EAAvB8J,UAAWO,EAAYrK,EAAZqK,QAChC,GAAIN,EAAS9J,GACX,OAiBF,OAfA8J,EAAS9J,IAAM,OACfqK,YAAW,WACTN,EAAS,CACPjK,KAAME,EACND,QAAS6J,IAAUU,MAAK,SAACC,GACvBT,EAAS9J,IAAM,EACf,IAAAwK,EAAgCX,EAAUU,GAAKE,GAAArF,EAAAA,EAAAA,GAAAoF,EAAA,GAAxCE,EAAUD,EAAA,GAAEE,EAASF,EAAA,KACRL,aAAO,EAAPA,EAAUO,KAAc,IAChCC,SAAQ,SAACZ,GAAM,OAAKA,EAAOD,EAAS,IAC5CW,GACFX,EAASC,EAEb,MACA,OAAO,kBAAM,IAAI,GACrB,GAAG,KAEL,CAEA,GAAIP,EAAeQ,aAAI,EAAJA,EAAMP,SAAU,CACjC,IAAAmB,EAA4CZ,EAAKP,QAAzC1J,EAAE6K,EAAF7K,GAAI4J,EAAOiB,EAAPjB,QAASC,EAASgB,EAAThB,UAAWO,EAAOS,EAAPT,QAChCL,EAAS,CACPjK,KAAM,GAAF4D,OAAK1D,EAAE,YACXD,QAAS,CACPC,GAAAA,EACA4J,QAAAA,EACAC,UAAAA,EACAO,QAAAA,IAGN,CAEAtD,EAAKkD,EACP,CAAC,IC7CUhF,GAAkB8F,EAAAA,EAAAA,eAAc,CAC3ChG,YAAa,WAAO,IAGf,SAASoD,IAAoB,QAAA6C,EAAA3L,UAAAC,OAAZ2L,EAAU,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAVF,EAAUE,GAAA9L,UAAA8L,GAChC,OAAO,IAAIC,EAAAA,GAAgB,CAAC,EAAG,CAC7BC,KACAC,EAAAA,EAAAA,IAAwB,CACtBC,oBAAqB,CAAC,SAAU,WAElC5B,KAAShG,OACNsH,GAEP,C,kCCjBIO,EAAI,EAAQ,OAEdC,EAAQ,EAAaD,EAAExC,WACDwC,EAAEE,W","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/Routes.js","webpack:///./src/components/AuthModal.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./src/constants/routeMapper.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js","webpack:///./node_modules/react-dom/client.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport React, { Suspense } from 'react';\nimport { routes as paths } from './constants/routeMapper';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst DeviceDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"DeviceDetail\" */ './Routes/DeviceDetail/DeviceDetail'\n  )\n);\n\n// const Canaries = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"Canaries\" */ './Routes/Canaries/Canaries'\n//   )\n// );\n\nconst Groups = React.lazy(() =>\n  import(/* webpackChunkName: \"Groups\" */ './Routes/Groups/Groups')\n);\n\nconst GroupsDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetail\" */ './Routes/GroupsDetail/GroupsDetail'\n  )\n);\n\nconst Inventory = React.lazy(() =>\n  import(/* webpackChunkName: \"Inventory\" */ './Routes/Devices/Inventory')\n);\n\nconst UpdateSystem = React.lazy(() =>\n  import(/* webpackChunkName: \"UpdateSystem\" */ './Routes/Devices/UpdateSystem')\n);\n\nconst Images = React.lazy(() =>\n  import(/* webpackChunkName: \"Images\" */ './Routes/ImageManager/Images')\n);\n\nconst ImageDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"ImageDetail\" */ './Routes/ImageManagerDetail/ImageDetail'\n  )\n);\n\nconst Repositories = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"Repositories\" */ './Routes/Repositories/Repositories'\n  )\n);\n\nconst LearningResources = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"LearningResources\" */ './Routes/LearningResources/LearningResources'\n  )\n);\n\nexport const Routes = () => {\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <Switch>\n        <Route exact path={paths.groups} component={Groups} />\n        <Route exact path={paths.groupsDetail} component={GroupsDetail} />\n\n        {/* <Route path={paths.deviceDetail} component={DeviceDetail} /> */}\n        {/* <Route path={paths.canaries} component={Canaries} /> */}\n        <Route exact path={paths.fleetManagement} component={Groups} />\n        <Route\n          exact\n          path={paths.fleetManagementDetail}\n          component={GroupsDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetail}\n          component={DeviceDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route exact path={paths.inventory} component={Inventory} />\n        <Route\n          exact\n          path={paths.inventoryDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route path={paths.inventoryDetail} component={DeviceDetail} />\n        <Route path={paths.inventoryDetailModal} component={DeviceDetail} />\n        <Route path={paths.manageImagesDetailVersion} component={ImageDetail} />\n        <Route path={paths.manageImagesDetail} component={ImageDetail} />\n        <Route path={paths.manageImages} component={Images} />\n\n        <Route exact path={paths.repositories} component={Repositories} />\n\n        <Route\n          exact\n          path={paths.learningResources}\n          component={LearningResources}\n        />\n        <Route>\n          <Redirect to={paths.fleetManagement} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalBoxFooter, Button } from '@patternfly/react-core';\nimport edgeIcon from '../../static/images/Icon-Red_Hat-Edge-A-Red-RGB.png';\n\nconst AuthModal = () => {\n  return (\n    <Modal\n      style={{ padding: '15px' }}\n      isOpen={true}\n      variant=\"small\"\n      onClose={() => (window.location.href = `https://${window.location.host}`)}\n      aria-label=\"auth-modal\"\n      header={\n        <h2 className=\"pf-u-pr-xl pf-u-pl-xl pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-bold\">\n          Edge management requires a valid Red Hat Satellite subscription\n        </h2>\n      }\n      footer={\n        <ModalBoxFooter\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            flexDirection: 'column',\n            paddingTop: 0,\n          }}\n        >\n          <Button\n            key=\"get-started\"\n            component=\"a\"\n            className=\"pf-u-mb-md\"\n            variant=\"primary\"\n            target=\"_blank\"\n            href=\"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux/try-it\"\n          >\n            Get started\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"interactive-demo\"\n            className=\"pf-u-mb-md\"\n            variant=\"secondary\"\n            target=\"_blank\"\n            href=\"https://red.ht/edgemanagementlab\"\n          >\n            Try the interactive demo\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"not-now\"\n            variant=\"link\"\n            href={`https://${window.location.host}`}\n          >\n            Not now\n          </Button>\n        </ModalBoxFooter>\n      }\n      title=\"Edge management requires a valid subscription\"\n      width=\"640px\"\n    >\n      <img\n        style={{ margin: '0 auto', display: 'block' }}\n        src={edgeIcon}\n        width=\"200px\"\n        alt=\"edge icon\"\n      />\n      <p className=\"pf-u-pr-xl pf-u-pl-xl pf-u-text-align-center\">\n        Securely manage and scale deployments at the edge with zero-touch\n        provisioning, system health visibility, and quick security remediations\n        and more with a Red Hat Satellite subscription\n      </p>\n    </Modal>\n  );\n};\n\nexport default AuthModal;\n","import React, { useEffect, Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RegistryContext } from './store';\nimport { Routes } from './Routes';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { NotificationPortal } from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport AuthModal from './components/AuthModal';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst App = (props) => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isLogged, setIsLogged] = useState(false);\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(null);\n  useEffect(() => {\n    insights.chrome.identifyApp('fleet-management');\n\n    insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    const registered = getRegistry().register({\n      notifications: notificationsReducer,\n    });\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setIsLogged(true);\n    })();\n\n    (async () => {\n      const data = await insights.chrome.auth.getUser();\n      setIsAuth(data.entitlements.smart_management.is_entitled);\n    })();\n\n    return () => {\n      registered();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {isAuth && isLogged ? (\n        <Routes childProps={props} />\n      ) : isAuth === null ? (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      ) : (\n        <AuthModal />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst AppEntry = ({ hasLogger }) => {\n  // Initialize reducer registry only at initial render.\n  const registry = useMemo(() => (hasLogger ? init(logger) : init()), []);\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(window.location.pathname, 1)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nAppEntry.propTypes = {\n  hasLogger: PropTypes.bool,\n};\n\nexport default AppEntry;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport InventoryApp from './AppEntry';\n\ncreateRoot(<InventoryApp />, document.getElementById('root'));\n","export const routes = {\n  groups: '/groups',\n  groupsDetail: '/groups/:uuid',\n  deviceDetail: '/groups/:uuid/:inventoryId',\n  canaries: '/canaries',\n  fleetManagement: '/fleet-management',\n  fleetManagementDetail: '/fleet-management/:groupId',\n  fleetManagementSystemDetail: '/fleet-management/:groupId/systems/:deviceId',\n  fleetManagementSystemDetailUpdate:\n    '/fleet-management/:groupId/systems/:deviceId/update',\n  inventory: '/inventory',\n  insightsInventory: '/insights/inventory/manage-edge-inventory',\n  inventoryDetail: '/inventory/:deviceId',\n  inventoryDetailModal: '/inventory/:deviceId/:modalId',\n  inventoryDetailUpdate: '/inventory/:deviceId/update',\n  insightsInventoryDetailUpdate: '/insights/inventory/:deviceId/update',\n  manageImages: '/manage-images',\n  manageImagesDetail: '/manage-images/:imageId',\n  manageImagesDetailVersion: '/manage-images/:imageId/versions/:imageVersionId',\n  repositories: '/repositories',\n  learningResources: '/learning-resources',\n  contentSourcesRepositories: '/preview/insights/content',\n};\n","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","removeNotification","index","clearNotifications","DeviceDetail","React","Groups","GroupsDetail","Inventory","UpdateSystem","Images","ImageDetail","Repositories","LearningResources","Routes","Suspense","fallback","Bullseye","Spinner","size","Switch","Route","exact","path","paths","groups","component","groupsDetail","fleetManagement","fleetManagementDetail","fleetManagementSystemDetail","fleetManagementSystemDetailUpdate","inventory","inventoryDetailUpdate","inventoryDetail","inventoryDetailModal","manageImagesDetailVersion","manageImagesDetail","manageImages","repositories","learningResources","Redirect","to","Modal","style","padding","isOpen","variant","onClose","window","location","href","concat","host","header","className","footer","ModalBoxFooter","display","justifyContent","width","flexDirection","paddingTop","Button","key","target","title","margin","src","edgeIcon","alt","props","getRegistry","useContext","RegistryContext","_useState","useState","_useState2","_slicedToArray","isLogged","setIsLogged","history","useHistory","_useState3","_useState4","isAuth","setIsAuth","useEffect","insights","chrome","identifyApp","on","event","push","navId","registered","register","notifications","notificationsReducer","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","auth","getUser","stop","_callee2","data","_context2","sent","entitlements","smart_management","is_entitled","Fragment","NotificationPortal","childProps","AuthModal","AppEntry","_ref","hasLogger","registry","useMemo","init","logger","Provider","value","store","getStore","Router","basename","getBaseName","pathname","App","propTypes","PropTypes","createRoot","InventoryApp","document","getElementById","routes","deviceDetail","canaries","insightsInventory","insightsInventoryDetailUpdate","contentSourcesRepositories","hasPollingData","polling","undefined","fetcher","condition","pollHash","dispatch","action","meta","endsWith","ofPollingType","onEvent","setTimeout","then","resp","_condition","_condition2","toContinue","stateName","forEach","_meta$polling","createContext","_len","middleware","Array","_key","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey","m","exports","hydrateRoot"],"sourceRoot":""}