{"version":3,"file":"js/5874.1668023730786.b5517ddc7de0ebc0def7.js","mappings":"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AmBrF,EAAKuF,MACxB7C,UAAW1C,EAAKuF,OAASvF,EAAKoG,QAAU,QAAU,UAClDjN,YAAU,GAEV,kBAACqM,GAAA,IAAQ,QACP/P,UAAU,cACVsH,GAAG,cACHrD,YAAY,6BACRoL,KAGR,kBAAC,EAAAe,SAAQ,KACP,kBAACrP,EAAA,EAAI,CAACR,UAAWgQ,EAAAA,EAAAA,OACf,kBAACxP,EAAA,EAAI,CACHyP,OAAO,SACPC,KAAK,yTACLC,eAAa,EACbnQ,UAAWgQ,EAAAA,EAAAA,GAAe,4BAG1B,kBAAC,MAAmB,CAACvQ,UAAU,kBAM3C,EC7CO,IAAM4Q,GAAoB,CAC/B,OACA,MACA,SACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,QACA,QACA,OACA,WACA,OACA,OACA,OACA,OACA,WACA,QACA,SACA,MACA,MACA,WACA,UACA,UACA,SACA,QACA,UACA,OACA,QACA,MACA,QACA,WACA,QACA,OACA,UACA,UACA,MACA,eACA,OACA,UACA,WACA,OACA,MACA,MACA,MACA,QACA,MACA,UACA,MACA,MACA,WACA,WACA,YACA,WACA,SACA,MACA,QACA,SACA,SACA,OACA,OACA,YACA,MACA,cACA,MACA,UACA,kBACA,SACA,QACA,SACA,QACA,OACA,UACA,YACA,YACA,OACA,QACA,WACA,UACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,WACA,UACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,SACA,UACA,WACA,YACA,SACA,OACA,YACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,QACA,OACA,WACA,YACA,cACA,UACA,UACA,UACA,QACA,SACA,OACA,WACA,UACA,SACA,aACA,OACA,gBACA,QACA,QACA,OACA,UACA,aACA,MACA,QACA,UACA,UACA,SACA,UACA,UACA,gBACA,UACA,UACA,gBACA,UACA,OACA,UACA,YACA,WACA,kBACA,kBACA,kBACA,QACA,SACA,SACA,IClKWC,GAA4B,WAAH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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pficon-sort-common-asc-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/pficon-sort-common-desc-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/field-provider/field-provider.js","webpack:///./src/components/form/CustomSubmitButtons.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/Routes/ImageManager/steps/repositories.js","webpack:///./src/Routes/ImageManager/steps/customPackage.js","webpack:///./src/api/repositories/index.js","webpack:///./node_modules/@data-driven-forms/pf4-component-mapper/esm/dual-list-sort-button/dual-list-sort-button.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/form/constants/reservedUsernames.js","webpack:///./src/components/form/validators.js","webpack:///./src/components/form/CustomPackageTextArea.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js","webpack:///./src/components/form/WizardRepositoryTable.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const PficonSortCommonAscIconConfig = {\n  name: 'PficonSortCommonAscIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M256,768 L256,16 C256,7.2 248.9,0 240,0 L143.6,0 C134.8,0 128,7.2 128,16 L128,768 L17.1,767.8 C6.8,767.8 0,774.5 0,785.2 C0,791.1 1.2,792.2 3.7,795.3 L179.9,1019.3 C183,1022.3 187.4,1024 192,1024 C196.6,1024 200.6,1022.2 203.7,1019.3 L380.3,795.5 C389.1,784.3 381.1,768 366.9,768 L256,768 Z M528,768 C517.9,768 512,760.8 512,751.8 L512,656.2 C512,647.3 520.2,640 530.3,640 L1005.7,640 C1015.8,640 1024,647.2 1024,656.2 L1024,751.8 C1024,760.7 1015.8,768 1005.7,768 L528,768 Z M530.3,512 C520.1,512 512,503.8 512,493.7 L512,402.8 C512,392.7 520.2,384.5 530.3,384.5 L879.6,384.5 C889.7,384.5 897.9,392.7 897.9,402.8 L897.9,493.7 C897.9,503.8 889.7,512 879.6,512 L530.3,512 L530.3,512 Z M533,256 C521.3,256 512,247.9 512,238 L512,146 C512,136.1 521.4,128 533,128 L747,128 C758.6,128 768,136.1 768,146 L768,238 C768,247.9 758.6,256 747,256 L533,256 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PficonSortCommonAscIcon = createIcon(PficonSortCommonAscIconConfig);\n\nexport default PficonSortCommonAscIcon;","import { createIcon } from '../createIcon';\n\nexport const PficonSortCommonDescIconConfig = {\n  name: 'PficonSortCommonDescIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M256,768 L256,16 C256,7.2 248.9,0 240,0 L143.6,0 C134.8,0 128,7.2 128,16 L128,768 L17.1,767.8 C6.8,767.8 0,774.5 0,785.2 C0,791.1 1.2,792.2 3.7,795.3 L179.9,1019.3 C183,1022.3 187.4,1024 192,1024 C196.6,1024 200.6,1022.2 203.7,1019.3 L380.3,795.5 C389.1,784.3 381.1,768 366.9,768 L256,768 Z M528,128 L1005.7,128 C1015.8,128 1024,135.3 1024,144.2 L1024,239.8 C1024,248.8 1015.8,256 1005.7,256 L530.3,256 C520.2,256 512,248.7 512,239.8 L512,144.2 C512,135.2 517.9,128 528,128 L528,128 Z M530.3,384 L879.6,384 C889.7,384 897.9,392.2 897.9,402.3 L897.9,493.2 C897.9,503.3 889.7,511.5 879.6,511.5 L530.3,511.5 C520.2,511.5 512,503.3 512,493.2 L512,402.3 C512,392.2 520.1,384 530.3,384 L530.3,384 Z M533,640 L747,640 C758.6,640 768,648.1 768,658 L768,750 C768,759.9 758.6,768 747,768 L533,768 C521.4,768 512,759.9 512,750 L512,658 C512,648.1 521.3,640 533,640 L533,640 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PficonSortCommonDescIcon = createIcon(PficonSortCommonDescIconConfig);\n\nexport default PficonSortCommonDescIcon;","\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"Component\", \"render\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport useFieldApi from '../use-field-api';\n\nvar FieldProvider = function FieldProvider(_ref) {\n  var Component = _ref.Component,\n      render = _ref.render,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var fieldProviderProps = useFieldApi(props);\n\n  if (Component) {\n    return /*#__PURE__*/React.createElement(Component, fieldProviderProps);\n  }\n\n  if (render) {\n    return render(_objectSpread({}, fieldProviderProps));\n  }\n\n  throw new Error('Field provider is missing either Component or render prop.');\n};\n\nFieldProvider.propTypes = {\n  Component: PropTypes.oneOfType([PropTypes.node, PropTypes.element, PropTypes.func]),\n  render: PropTypes.func\n};\nexport default FieldProvider;","import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../../../components/form/CustomSubmitButtons';\n\nexport default {\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../../constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React, { useState } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Select, SelectOption, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  DEFAULT_RELEASE,\n  TEMPORARY_RELEASE,\n  temporaryReleases,\n  supportedReleases,\n} from '../../../constants';\nimport { getReleases } from '../../../utils';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { useFeatureFlags } from '../../../utils';\n\nconst ReleaseLabel = () => {\n  const temporaryReleasesFlag = useFeatureFlags(\n    'fleet-management.temporary-releases'\n  );\n  const { change, getState } = useFormApi();\n  const release =\n    getState()?.values?.release ||\n    (temporaryReleasesFlag ? TEMPORARY_RELEASE : DEFAULT_RELEASE);\n  const releases =\n    getState()?.values?.release_options ||\n    (temporaryReleasesFlag\n      ? getReleases(release, [...supportedReleases, ...temporaryReleases])\n      : getReleases(release));\n  const [options, setOptions] = useState(releases);\n  const [isOpen, setIsOpen] = useState(false);\n  const [selected, setSelected] = useState(release);\n\n  const onToggle = (isOpen) => setIsOpen(isOpen);\n\n  const onSelect = (_event, selection, isPlaceholder) => {\n    if (isPlaceholder) clearSelection();\n    else {\n      setSelected(selection);\n      setIsOpen(false);\n    }\n    change('release', selection);\n  };\n\n  const clearSelection = () => {\n    setSelected(release);\n    setIsOpen(false);\n    setOptions(releases);\n  };\n\n  return (\n    <Select\n      variant=\"single\"\n      width=\"100%\"\n      onToggle={onToggle}\n      onSelect={onSelect}\n      selections={selected}\n      isOpen={isOpen}\n      style={{ paddingLeft: 0, marginLeft: 0 }}\n    >\n      {options.map((item) => (\n        <SelectOption key={item.value} value={item.value}>\n          {item.label}\n        </SelectOption>\n      ))}\n    </Select>\n  );\n};\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : 'repositories',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information about your image.</Text>,\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'release',\n      label: <ReleaseLabel />,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Flex, FlexItem, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { checkImageName } from '../../../api/images';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { nameValidator } from '../../../utils';\n\nconst helperText =\n  'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).';\n\nconst CharacterCount = () => {\n  const { getState } = useFormApi();\n  const description = getState().values?.description;\n  return <h1>{description?.length || 0}/250</h1>;\n};\n\nconst getImageSetDetailsSchema = () => ({\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      helperText: helperText,\n      validate: [\n        // Define async validator inline here, so that results are not cached\n        async (value = '') => {\n          // Do not fire validation request for empty name\n          if (value.length === 0) {\n            return undefined;\n          }\n          const resp = await checkImageName(value);\n          if (resp.ImageExists) {\n            // Async validator has to throw error, not return it\n            throw 'Name already exists';\n          }\n        },\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'description',\n      label: (\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Text component={'b'}>Description</Text>\n          </FlexItem>\n          <FlexItem>\n            <CharacterCount />\n          </FlexItem>\n        </Flex>\n      ),\n      placeholder: 'Add description',\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n});\n\nexport default getImageSetDetailsSchema;\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        height: '25vh',\n      },\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'System registration',\n  name: 'registration',\n  nextStep: 'repositories',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to log into your system.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      helperText: (\n        <HelperText>\n          <HelperTextItem className=\"pf-u-mt-xs\" variant=\"indeterminate\">\n            Can only contain letters, numbers, hyphens ( - ), and underscores( _\n            ).\n          </HelperTextItem>\n        </HelperText>\n      ),\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n          message:\n            'Can only contain letters, numbers, hyphens ( - ), and underscores( _ ).',\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        { type: 'reservedUsernameValidator' },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport WizardRepositoryTable from '../../../components/form/WizardRepositoryTable';\n\nexport default {\n  title: 'Custom repositories',\n  name: 'repositories',\n  nextStep: ({ values }) =>\n    values?.['third-party-repositories']?.length > 0 ||\n    values?.['show-custom-packages'] ||\n    values?.['initial-custom-repositories']?.length > 0\n      ? 'customPackages'\n      : 'packages',\n\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Choose from linked custom repositories from which to search and add\n          packages to this image.\n        </Text>\n      ),\n    },\n    {\n      component: 'custom-repo-table',\n      name: 'third-party-repositories',\n      label: <WizardRepositoryTable />,\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React, { useEffect } from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  Alert,\n  Button,\n  Popover,\n  Stack,\n  StackItem,\n  Text,\n  TextContent,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport { releaseMapper } from '../../../constants';\n\nconst CustomRepoAlert = ({ variant, title }) => (\n  <Alert\n    className=\"pf-u-mt-lg\"\n    variant={variant}\n    isInline\n    title={title}\n    style={{ '--pf-c-content--h4--MarginTop': 0 }}\n  />\n);\n\nCustomRepoAlert.propTypes = {\n  variant: PropTypes.string,\n  title: PropTypes.string,\n};\n\nconst checkRepoNameMismatch = (\n  initRepos = [],\n  currentRepos = [],\n  currentPackages = []\n) => {\n  if (currentRepos.length === 0 && currentPackages.length === 0) {\n    return false;\n  }\n  if (currentRepos.length < initRepos.length) {\n    return true;\n  }\n  // Mismatch if any initial repo is no longer selected\n  return !initRepos.every((iRepo) =>\n    currentRepos.find((cRepo) => cRepo.name === iRepo.name)\n  );\n};\n\nconst CustomPackageLabel = () => {\n  const { getState, change } = useFormApi();\n  const addedRepos = getState()?.values?.['third-party-repositories'];\n  const initialRepos = getState()?.values?.['initial-custom-repositories'];\n  const customPackages = getState()?.values?.['custom-packages'];\n\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n\n  useEffect(() => {\n    change('validate-custom-repos', true);\n    change('show-custom-packages', true);\n  }, []);\n\n  return (\n    <>\n      <TextContent>\n        <Text>\n          Add packages from{' '}\n          <Popover\n            style={{ visibility: 'visible' }}\n            position=\"bottom\"\n            headerContent=\"Custom Repositories\"\n            bodyContent={\n              <Stack>\n                {addedRepos.map(({ name }) => (\n                  <StackItem key={name}>\n                    <Text>{name}</Text>\n                  </StackItem>\n                ))}\n              </Stack>\n            }\n          >\n            <Button variant=\"link\" isInline>\n              {addedRepos.length} custom{' '}\n              {addedRepos.length === 1 ? 'repository' : 'repositories'}\n            </Button>\n          </Popover>{' '}\n          to your <b>{releaseName}</b> image.\n        </Text>\n      </TextContent>\n      {addedRepos.length === 0 && customPackages.length > 0 ? (\n        <CustomRepoAlert\n          variant=\"danger\"\n          title=\"No custom repositories linked. Clear custom packages or link a repository.\"\n        />\n      ) : checkRepoNameMismatch(initialRepos, addedRepos, customPackages) ? (\n        <CustomRepoAlert\n          variant=\"warning\"\n          title=\"Linked custom repositories were removed when these packages were added. Ensure the package list is still correct.\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default {\n  title: 'Custom packages',\n  name: 'customPackages',\n  nextStep: 'packages',\n  substepOf: 'Add content',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <CustomPackageLabel />,\n    },\n    {\n      component: 'custom-package-text-area',\n      style: {\n        paddingRight: '32px',\n        height: '25vh',\n      },\n      name: 'custom-packages',\n      initialValue: [],\n      clearedValue: [],\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'packageDetails',\n      label: (\n        <Text>\n          Specify individual packages by exact name and casing, with no\n          whitespace, one entry to a line, and can include hyphens ( - ).\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning',\n      label: (\n        <Text className=\"pf-u-warning-color-200\">\n          <ExclamationTriangleIcon className=\"pf-u-warning-color-100\" />\n          &nbsp; Packages names that do not have exact name and casing will not\n          be included in the image.\n        </Text>\n      ),\n    },\n  ],\n};\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getCustomRepositories = ({ imageID = '', query }) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/thirdpartyrepo?${imageID ? `imageID=${imageID}&` : ''}${q}`\n  );\n};\n\nexport const createCustomRepository = (payload) => {\n  return instance.post(`${EDGE_API}/thirdpartyrepo`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const editCustomRepository = (payload) => {\n  return instance.put(`${EDGE_API}/thirdpartyrepo/${payload.id}`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const removeCustomRepository = (id) =>\n  instance.delete(`${EDGE_API}/thirdpartyrepo/${id}`);\n\nexport const validateRepoName = (name) => {\n  return instance.get(`${EDGE_API}/thirdpartyrepo/checkName/${name}`);\n};\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"position\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport { ButtonVariant } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport PficonSortCommonAscIcon from \"@patternfly/react-icons/dist/esm/icons/pficon-sort-common-asc-icon\";\nimport PficonSortCommonDescIcon from \"@patternfly/react-icons/dist/esm/icons/pficon-sort-common-desc-icon\";\nimport DualListContext from '../dual-list-context';\n\nvar DualListSortButton = function DualListSortButton(_ref) {\n  var position = _ref.position,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useContext = useContext(DualListContext),\n      sortConfig = _useContext.sortConfig,\n      setSortConfig = _useContext.setSortConfig;\n\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    variant: ButtonVariant.plain,\n    onClick: sortConfig[position] === 'asc' ? function () {\n      return setSortConfig(_objectSpread(_objectSpread({}, sortConfig), {}, _defineProperty({}, position, 'desc')));\n    } : function () {\n      return setSortConfig(_objectSpread(_objectSpread({}, sortConfig), {}, _defineProperty({}, position, 'asc')));\n    },\n    \"aria-label\": \"Sort\"\n  }, rest), sortConfig[position] === 'asc' ? /*#__PURE__*/React.createElement(PficonSortCommonAscIcon, null) : /*#__PURE__*/React.createElement(PficonSortCommonDescIcon, null));\n};\n\nDualListSortButton.propTypes = {\n  position: PropTypes.oneOf(['left', 'right'])\n};\nexport default DualListSortButton;","import React, { useState, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { getPackages } from '../../api/images';\nimport PropTypes from 'prop-types';\nimport {\n  TextContent,\n  Text,\n  Button,\n  DualListSelector,\n  DualListSelectorPane,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorControlsWrapper,\n  DualListSelectorControl,\n  HelperText,\n  HelperTextItem,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Divider,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { sortByDirection as sortedOptions } from '../../constants';\n\nconst EmptyText = ({ text }) => (\n  <Text className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    {text}\n  </Text>\n);\n\nEmptyText.propTypes = {\n  text: PropTypes.string,\n};\n\nconst NoResultsText = ({ heading, body }) => (\n  <TextContent className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    <Text component=\"h3\">{heading}</Text>\n    <Text component=\"small\">{body}</Text>\n  </TextContent>\n);\n\nNoResultsText.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n};\n\nconst mapPackagesToOptions = (pkgs) =>\n  pkgs.map((pkg) => ({\n    selected: false,\n    isVisible: true,\n    ...pkg,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [availableOptions, setAvailableOptions] = React.useState([]);\n  const [chosenOptions, setChosenOptions] = React.useState([]);\n  const [availableInputValue, setAvailableInputValue] = React.useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n  const [hasMoreResults, setHasMoreResults] = useState(false);\n  const [scrollTo, setScrollTo] = useState(null);\n  const [hasNoSearchResults, setHasNoSearchResults] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [exactMatch, setExactMatch] = useState(false);\n\n  useEffect(() => {\n    const loadedPackages = getState()?.values?.[input.name] || [];\n    setChosenOptions(sortedOptions(mapPackagesToOptions(loadedPackages)));\n\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"available search input\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackageSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  useEffect(() => {\n    scrollToAddedPackages();\n  }, [scrollTo]);\n\n  const handlePackageSearch = async () => {\n    if (availableInputValue === '') {\n      return;\n    }\n\n    const { data, meta } = await getPackages(\n      getState()?.values?.release || 'rhel-85',\n      getState()?.values?.architecture || defaultArch,\n      availableInputValue\n    );\n\n    if (!data) {\n      setHasNoSearchResults(true);\n      setHasMoreResults(false);\n      setAvailableOptions([]);\n      return;\n    }\n\n    if (meta.count > 100) {\n      setHasNoSearchResults(false);\n      setHasMoreResults(true);\n\n      let exactMatchIndex = null;\n      data.forEach(({ name }, index) => {\n        if (name === availableInputValue) {\n          exactMatchIndex = index;\n          return;\n        }\n      });\n\n      const isNotChosen = !chosenOptions.find(\n        (option) => option.name === data[exactMatchIndex].name\n      );\n\n      if (exactMatchIndex !== null && isNotChosen) {\n        setExactMatch(true);\n        setAvailableOptions(mapPackagesToOptions([data[exactMatchIndex]]));\n        return;\n      }\n\n      setExactMatch(false);\n      setAvailableOptions([]);\n      return;\n    } else {\n      setHasMoreResults(false);\n\n      setExactMatch(false);\n    }\n\n    const removeChosenPackages = data.filter(\n      (newPkg) =>\n        !chosenOptions.find((chosenPkg) => chosenPkg.name === newPkg.name)\n    );\n    setAvailableOptions(\n      sortedOptions(mapPackagesToOptions(removeChosenPackages))\n    );\n\n    setHasNoSearchResults(false);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  const scrollToAddedPackages = () => {\n    if (!scrollTo) {\n      return;\n    }\n\n    const destination = document.querySelector(\n      `.pf-m-${scrollTo.pane} .pf-c-dual-list-selector__menu`\n    );\n    scrollTo.pkgs.forEach((pkg) =>\n      document\n        .getElementById(`package-${pkg.name}`)\n        .closest('.pf-c-dual-list-selector__list-item-row')\n        .classList.add('pf-u-background-color-disabled-color-300')\n    );\n    setTimeout(() => {\n      scrollTo.pkgs.forEach((pkg) =>\n        document\n          .getElementById(`package-${pkg.name}`)\n          .closest('.pf-c-dual-list-selector__list-item-row')\n          .classList.remove('pf-u-background-color-disabled-color-300')\n      );\n    }, 400);\n    destination.scrollTop = scrollTo.scrollHeight;\n\n    setScrollTo(null);\n  };\n\n  const moveSelected = (fromAvailable) => {\n    const sourceOptions = fromAvailable ? availableOptions : chosenOptions;\n    let destinationOptions = fromAvailable ? chosenOptions : availableOptions;\n\n    const selectedOptions = [];\n    for (let i = 0; i < sourceOptions.length; i++) {\n      const option = sourceOptions[i];\n      if (option.selected && option.isVisible) {\n        selectedOptions.push(option);\n        sourceOptions.splice(i, 1);\n        option.selected = false;\n        i--;\n      }\n    }\n\n    destinationOptions = sortedOptions([\n      ...destinationOptions,\n      ...selectedOptions,\n    ]);\n\n    const packageHeight = 61;\n    const scrollHeight =\n      destinationOptions.findIndex(\n        (pkg) => pkg.name === selectedOptions[0].name\n      ) * packageHeight;\n\n    if (fromAvailable) {\n      setAvailableOptions(sortedOptions([...sourceOptions]));\n      setChosenOptions(destinationOptions);\n      change(input.name, destinationOptions);\n    } else {\n      setChosenOptions(sortedOptions([...sourceOptions]));\n      setAvailableOptions(destinationOptions);\n      change(input.name, [...sourceOptions]);\n    }\n    setScrollTo({\n      pkgs: selectedOptions,\n      pane: fromAvailable ? 'chosen' : 'available',\n      scrollHeight,\n    });\n    setExactMatch(false);\n  };\n\n  const moveAll = (fromAvailable) => {\n    if (fromAvailable) {\n      setChosenOptions(\n        sortedOptions([\n          ...availableOptions.filter((x) => x.isVisible),\n          ...chosenOptions,\n        ])\n      );\n      setAvailableOptions(\n        sortedOptions([...availableOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, [...availableOptions, ...chosenOptions]);\n    } else {\n      setAvailableOptions(\n        sortedOptions([\n          ...chosenOptions.filter((x) => x.isVisible),\n          ...availableOptions,\n        ])\n      );\n      setChosenOptions(\n        sortedOptions([...chosenOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, []);\n    }\n    setExactMatch(false);\n  };\n\n  const onOptionSelect = (_event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...chosenOptions];\n      newChosen[index].selected = !chosenOptions[index].selected;\n      setChosenOptions(sortedOptions(newChosen));\n    } else {\n      const newAvailable = [...availableOptions];\n      newAvailable[index].selected = !availableOptions[index].selected;\n      setAvailableOptions(sortedOptions(newAvailable));\n    }\n  };\n\n  const buildSearchInput = (isAvailable) => {\n    const onChange = (value) => {\n      setAvailableInputValue(value);\n      if (!isAvailable) {\n        const toFilter = [...chosenOptions];\n        toFilter.forEach((option) => {\n          option.isVisible =\n            value === '' ||\n            option.name.toLowerCase().includes(value.toLowerCase());\n        });\n      }\n    };\n\n    return (\n      <>\n        <InputGroup>\n          <TextInput\n            id={`${isAvailable ? 'available' : 'chosen'}-textinput`}\n            type=\"search\"\n            onChange={onChange}\n            placeholder=\"Search for packages\"\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            validated={\n              hasMoreResults && isAvailable && !searchFocused ? 'warning' : ''\n            }\n            aria-label={\n              isAvailable ? 'available search input' : 'chosen search input'\n            }\n            data-testid={\n              isAvailable ? 'available-search-input' : 'chosen-search-input'\n            }\n          />\n          {isAvailable ? (\n            <Button\n              onClick={handlePackageSearch}\n              isDisabled={!isAvailable}\n              variant=\"control\"\n              aria-label=\"search button for search input\"\n              data-testid=\"package-search\"\n            >\n              <SearchIcon />\n            </Button>\n          ) : (\n            <InputGroupText>\n              <SearchIcon className=\"pf-u-ml-xs pf-u-mr-xs\" />\n            </InputGroupText>\n          )}\n        </InputGroup>\n        {hasMoreResults && isAvailable && (\n          <HelperText>\n            <HelperTextItem variant=\"warning\">\n              Over 100 results found. Refine your search.\n            </HelperTextItem>\n          </HelperText>\n        )}\n      </>\n    );\n  };\n\n  const displayPackagesFrom = (options, isChosen) => {\n    return options.map((option, index) => {\n      return option.isVisible ? (\n        <DualListSelectorListItem\n          key={index}\n          isSelected={option.selected}\n          id={`composable-option-${index}`}\n          onOptionSelect={(e) => onOptionSelect(e, index, isChosen)}\n        >\n          <TextContent>\n            <span\n              id={`package-${option.name}`}\n              className=\"pf-c-dual-list-selector__item-text\"\n            >\n              {option.name}\n            </span>\n            <small>{option.summary}</small>\n          </TextContent>\n        </DualListSelectorListItem>\n      ) : null;\n    });\n  };\n\n  const selectedStatus = (options) => {\n    const totalItemNum = options.filter((x) => x.isVisible).length;\n    const selectedItemNum = options.filter(\n      (x) => x.selected && x.isVisible\n    ).length;\n    return selectedItemNum > 0\n      ? `${selectedItemNum} of ${totalItemNum} items selected`\n      : `${totalItemNum} ${totalItemNum > 1 ? 'items' : 'item'}`;\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        status={selectedStatus(availableOptions)}\n        searchInput={buildSearchInput(true)}\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"available-packages-list\"\n        >\n          {availableOptions.length > 0 && !exactMatch ? (\n            displayPackagesFrom(availableOptions, false)\n          ) : hasNoSearchResults ? (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          ) : hasMoreResults ? (\n            <>\n              {exactMatch && (\n                <HelperText>\n                  <HelperTextItem\n                    className=\"pf-u-ml-md pf-u-mt-md\"\n                    variant=\"indeterminate\"\n                  >\n                    Exact match\n                  </HelperTextItem>\n                </HelperText>\n              )}\n              {exactMatch && displayPackagesFrom(availableOptions, false)}\n              {exactMatch && (\n                <Divider\n                  className=\"pf-u-mt-md\"\n                  inset={{ default: 'insetMd' }}\n                />\n              )}\n              <NoResultsText\n                heading=\"Too many results to display\"\n                body=\"Please make the search more specific and try again\"\n              />\n            </>\n          ) : (\n            <EmptyText text=\"Search above to add additional packages to your image.\" />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!availableOptions.some((option) => option.selected)}\n          onClick={() => moveSelected(true)}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availableOptions.length === 0}\n          onClick={() => moveAll(true)}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={chosenOptions.length === 0}\n          onClick={() => moveAll(false)}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelected(false)}\n          isDisabled={!chosenOptions.some((option) => option.selected)}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        status={selectedStatus(chosenOptions)}\n        searchInput={buildSearchInput(false)}\n        isChosen\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"chosen-packages-list\"\n        >\n          {chosenOptions.length === 0 ? (\n            <EmptyText text=\"No packages added.\" />\n          ) : chosenOptions.filter((option) => option.isVisible).length > 0 ? (\n            displayPackagesFrom(chosenOptions, true)\n          ) : (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { Fragment, useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\">\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing systems. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <Fragment key={index}>\n          <Checkbox\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </TextContent>\n          {value === 'rhel-edge-installer' && (\n            <Fragment>\n              <Text component={TextVariants.small}>\n                <Text\n                  target=\"_blank\"\n                  href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#edge-how-to-compose-and-deploy-a-rhel-for-edge-image_introducing-rhel-for-edge-images\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            </Fragment>\n          )}\n        </Fragment>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/assembly_using-secure-communications-between-two-systems-with-openssh_configuring-basic-system-settings#generating-ssh-key-pairs_assembly_using-secure-communications-between-two-systems-with-openssh\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","export const reservedUsernames = [\n  'root',\n  'bin',\n  'daemon',\n  'sys',\n  'adm',\n  'tty',\n  'disk',\n  'lp',\n  'mem',\n  'kmem',\n  'wheel',\n  'cdrom',\n  'sync',\n  'shutdown',\n  'halt',\n  'mail',\n  'news',\n  'uucp',\n  'operator',\n  'games',\n  'gopher',\n  'ftp',\n  'man',\n  'oprofile',\n  'pkiuser',\n  'dialout',\n  'floppy',\n  'games',\n  'slocate',\n  'utmp',\n  'squid',\n  'pvm',\n  'named',\n  'postgres',\n  'mysql',\n  'nscd',\n  'rpcuser',\n  'console',\n  'rpc',\n  'amandabackup',\n  'tape',\n  'netdump',\n  'utempter',\n  'vdsm',\n  'kvm',\n  'rpm',\n  'ntp',\n  'video',\n  'dip',\n  'mailman',\n  'gdm',\n  'xfs',\n  'pppusers',\n  'popusers',\n  'slipusers',\n  'mailnull',\n  'apache',\n  'wnn',\n  'smmsp',\n  'puppet',\n  'tomcat',\n  'lock',\n  'ldap',\n  'frontpage',\n  'nut',\n  'beagleindex',\n  'tss',\n  'piranha',\n  'prelude-manager',\n  'snortd',\n  'audio',\n  'condor',\n  'nslcd',\n  'wine',\n  'pegasus',\n  'webalizer',\n  'haldaemon',\n  'vcsa',\n  'avahi',\n  'realtime',\n  'tcpdump',\n  'privoxy',\n  'sshd',\n  'radvd',\n  'cyrus',\n  'saslauth',\n  'arpwatch',\n  'fax',\n  'nocpulse',\n  'desktop',\n  'dbus',\n  'jonas',\n  'clamav',\n  'screen',\n  'quaggavt',\n  'sabayon',\n  'polkituser',\n  'wbpriv',\n  'postfix',\n  'postdrop',\n  'majordomo',\n  'quagga',\n  'exim',\n  'distcache',\n  'radiusd',\n  'hsqldb',\n  'dovecot',\n  'ident',\n  'users',\n  'qemu',\n  'ovirt',\n  'rhevm',\n  'jetty',\n  'saned',\n  'vhostmd',\n  'usbmuxd',\n  'bacula',\n  'cimsrvr',\n  'mock',\n  'ricci',\n  'luci',\n  'activemq',\n  'cassandra',\n  'stap-server',\n  'stapusr',\n  'stapsys',\n  'stapdev',\n  'swift',\n  'glance',\n  'nova',\n  'keystone',\n  'quantum',\n  'cinder',\n  'ceilometer',\n  'ceph',\n  'avahi-autoipd',\n  'pulse',\n  'rtkit',\n  'abrt',\n  'retrace',\n  'ovirtagent',\n  'ats',\n  'dhcpd',\n  'myproxy',\n  'sanlock',\n  'aeolus',\n  'wallaby',\n  'katello',\n  'elasticsearch',\n  'mongodb',\n  'wildfly',\n  'jbosson-agent',\n  'jbosson',\n  'heat',\n  'haproxy',\n  'hacluster',\n  'haclient',\n  'systemd-journal',\n  'systemd-network',\n  'systemd-resolve',\n  'gnats',\n  'listar',\n  'nobody',\n  '',\n];\n","import { reservedUsernames } from './constants/reservedUsernames';\n\nexport const reservedUsernameValidator = () => (value) =>\n  reservedUsernames.includes(value)\n    ? 'This is a username reserved for the system'\n    : undefined;\n","import React, { useState } from 'react';\nimport { FormGroup, TextArea } from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nconst CustomPackageTextArea = (props) => {\n  const { input } = useFieldApi(props);\n  const [value, setValue] = useState(\n    input.value.map((pkg) => pkg.name).join('\\n')\n  );\n\n  const onChange = (newValue) => {\n    // Split text area value on whitespace or commas to get package names\n    const packageNames = newValue.split(/[,\\s]+/g).reduce((acc, name) => {\n      return name !== '' ? [...acc, { name }] : acc;\n    }, []);\n    // Store both the formatted array and the original text\n    input.onChange(packageNames);\n    setValue(newValue);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    // Allow newlines in text area component\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n    }\n  };\n\n  return (\n    <FormGroup label=\"Packages\" type=\"string\">\n      <TextArea\n        aria-label=\"custom-package-wizard-step\"\n        placeholder=\"Enter or paste packages from linked repositories, one entry per line.&#13;ExamplePackage&#13;example-package&#13;examplepackage\"\n        value={value}\n        onChange={onChange}\n        onKeyDown={handleSearchOnEnter}\n        style={{\n          paddingRight: '32px',\n          height: '25vh',\n        }}\n      />\n    </FormGroup>\n  );\n};\n\nexport default CustomPackageTextArea;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport WizardRepositoryTable from './form/WizardRepositoryTable';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport { reservedUsernameValidator } from './form/validators';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport CustomPackageTextArea from './form/CustomPackageTextArea';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        'custom-repo-table': {\n          component: WizardRepositoryTable,\n        },\n        'custom-package-text-area': {\n          component: CustomPackageTextArea,\n        },\n        ...customComponentMapper,\n      }}\n      validate={(values) => {\n        const errors = {};\n        if (\n          values['validate-custom-repos'] &&\n          values['custom-packages']?.length > 0 &&\n          values['third-party-repositories']?.length === 0\n        ) {\n          errors['custom-packages'] = 'No custom repositories linked';\n        }\n        return errors;\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n        reservedUsernameValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12}>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <Grid key={name}>\n          <GridItem span={3}>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9}>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { imageTypeMapper, releaseMapper } from '../../Routes/../constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: String(getState().initialValues.version + 1) },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = () => {\n    let outputs = [\n      { name: 'Release', value: releaseMapper[getState().values.release] },\n      {\n        name: 'Output Type',\n        value: imageTypeMapper['rhel-edge-commit'],\n      },\n    ];\n    if (getState().values.imageType.includes('rhel-edge-installer')) {\n      outputs.push({ name: '', value: imageTypeMapper['rhel-edge-installer'] });\n    }\n    return outputs;\n  };\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const RHELPackageBefore = getState().initialValues['selected-packages'] || [];\n  const RHELPackageAfter = getState().values['selected-packages'] || [];\n  const customPackageBefore = getState().initialValues['custom-packages'] || [];\n  const customPackageAfter = getState().values['custom-packages'] || [];\n\n  const calcPkgDiff = (arr1, arr2) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      {\n        name: isUpdate ? 'Custom Updated' : 'Custom Added',\n        value: String(calcPkgDiff(customPackageAfter, customPackageBefore)),\n      },\n      {\n        name: isUpdate ? 'RHEL Updated' : 'RHEL Added',\n        value: String(calcPkgDiff(RHELPackageAfter, RHELPackageBefore)),\n      },\n    ];\n    return pkgs;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create image</Text> to start the build process.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output()}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n","import React, { useEffect } from 'react';\nimport GeneralTable from '../general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../Empty';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { getCustomRepositories } from '../../api/repositories';\nimport useApi from '../../hooks/useApi';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { truncateString } from '../../utils';\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst WizardRepositoryTable = (props) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const isUpdateWizard = getState()?.values?.isUpdate;\n  const imageID = getState()?.values?.imageID;\n\n  const [response, fetchRepos] = useApi({\n    api: ({ query }) =>\n      getCustomRepositories({\n        imageID: isUpdateWizard ? imageID.toString() : '',\n        query,\n      }),\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n\n  const getRepoIds = (checked) => {\n    const checkedRepos = checked?.map((repo) => ({\n      id: repo?.id,\n      name: repo?.name,\n      URL: repo?.URL,\n    }));\n    input.onChange(checkedRepos);\n  };\n\n  useEffect(() => {\n    change('validate-custom-repos', false);\n  }, []);\n\n  const buildRows = ({ data }) => {\n    return data.map(({ ID, Name, URL }) => ({\n      rowInfo: { id: ID, name: Name, URL: URL },\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                <span>{truncateString(Name, 50)}</span>\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {URL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    }));\n  };\n\n  return (\n    <>\n      {!isLoading && !data?.count > 0 ? (\n        <EmptyState\n          icon=\"repository\"\n          title=\"No custom repositories available\"\n          body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n          primaryAction={{\n            text: 'Custom repositories',\n            href: paths['repositories'],\n          }}\n        />\n      ) : (\n        <GeneralTable\n          apiFilterSort={true}\n          isUseApi={true}\n          loadTableData={fetchRepos}\n          filters={filters}\n          tableData={{\n            count: data?.count,\n            data,\n            isLoading,\n            hasError,\n          }}\n          columnNames={[{ title: 'Name', type: 'name', sort: false }]}\n          rows={isLoading ? [] : buildRows(data)}\n          defaultSort={{ index: 0, direction: 'desc' }}\n          hasCheckbox={true}\n          selectedItems={getRepoIds}\n          initSelectedItems={input.value}\n        />\n      )}\n    </>\n  );\n};\nWizardRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  closeModal: PropTypes.func,\n};\n\nexport default WizardRepositoryTable;\n"],"names":["PficonSortCommonAscIconConfig","name","height","width","svgPath","yOffset","xOffset","PficonSortCommonAscIcon","PficonSortCommonDescIconConfig","PficonSortCommonDescIcon","exports","CustomButtons","buttonLabels","cancel","submit","back","useState","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","Button","variant","type","isDisabled","valid","getState","validating","onClick","onSubmit","values","className","onCancel","propTypes","PropTypes","title","buttons","fields","component","PackagesLabel","release","useFormApi","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","substepOf","componentTypes","label","initialValue","clearedValue","ReleaseLabel","temporaryReleasesFlag","useFeatureFlags","change","TEMPORARY_RELEASE","DEFAULT_RELEASE","releases","release_options","getReleases","supportedReleases","temporaryReleases","options","setOptions","isOpen","setIsOpen","selected","setSelected","Select","onToggle","onSelect","_event","selection","isPlaceholder","selections","style","paddingLeft","marginLeft","map","item","SelectOption","key","value","imageType","includes","validate","validatorTypes","isRequired","Object","entries","imageTypeMapper","CharacterCount","description","length","placeholder","helperText","checkImageName","ImageExists","threshold","nameValidator","paddingRight","Flex","justifyContent","default","FlexItem","resizeOrientation","HelperText","HelperTextItem","pattern","message","WizardRepositoryTable","CustomRepoAlert","Alert","isInline","CustomPackageLabel","addedRepos","initialRepos","customPackages","useEffect","Popover","visibility","position","headerContent","bodyContent","Stack","StackItem","initRepos","currentRepos","currentPackages","every","iRepo","find","cRepo","checkRepoNameMismatch","getCustomRepositories","imageID","query","q","getTableParams","instance","EDGE_API","createCustomRepository","payload","Name","URL","baseURL","editCustomRepository","id","removeCustomRepository","validateRepoName","EmptyText","text","NoResultsText","heading","body","mapPackagesToOptions","pkgs","pkg","isVisible","Packages","defaultArch","props","input","useFieldApi","React","availableOptions","setAvailableOptions","chosenOptions","setChosenOptions","availableInputValue","setAvailableInputValue","enterPressed","setEnterPressed","hasMoreResults","setHasMoreResults","scrollTo","setScrollTo","hasNoSearchResults","setHasNoSearchResults","searchFocused","setSearchFocused","exactMatch","setExactMatch","loadedPackages","sortedOptions","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","handlePackageSearch","scrollToAddedPackages","getPackages","architecture","data","meta","count","exactMatchIndex","forEach","index","isNotChosen","option","removeChosenPackages","filter","newPkg","chosenPkg","e","stopPropagation","destination","pane","getElementById","closest","classList","add","setTimeout","remove","scrollTop","scrollHeight","moveSelected","fromAvailable","sourceOptions","destinationOptions","selectedOptions","i","push","splice","findIndex","moveAll","x","buildSearchInput","isAvailable","InputGroup","TextInput","onChange","toLowerCase","onFocus","onBlur","validated","InputGroupText","displayPackagesFrom","isChosen","DualListSelectorListItem","isSelected","onOptionSelect","newChosen","newAvailable","summary","selectedStatus","totalItemNum","selectedItemNum","DualListSelector","DualListSelectorPane","status","searchInput","DualListSelectorList","Divider","inset","DualListSelectorControlsWrapper","DualListSelectorControl","some","tooltipContent","registrationCredsValidator","state","checkbox","errs","password","sshKey","toggleCheckbox","useCallback","checked","event","currentTarget","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextArea","WarningInstallerHelperText","hasIcon","outputHelperText","ImageOutputCheckbox","Fragment","initialValues","isUpdate","TextVariants","target","href","isVisitedLink","touched","reservedUsernames","reservedUsernameValidator","join","setValue","newValue","packageNames","split","reduce","acc","onKeyDown","CreateImageWizard","schema","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","CustomPackageTextArea","errors","validatorMapper","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","outputs","details","String","version","registration","credentials","RHELPackageBefore","RHELPackageAfter","customPackageBefore","customPackageAfter","calcPkgDiff","arr1","arr2","filters","isUpdateWizard","useApi","api","toString","tableReload","response","fetchRepos","icon","primaryAction","paths","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","sort","rows","ID","rowInfo","cells","truncateString","rel","defaultSort","direction","hasCheckbox","selectedItems","checkedRepos","repo","initSelectedItems","closeModal"],"sourceRoot":""}