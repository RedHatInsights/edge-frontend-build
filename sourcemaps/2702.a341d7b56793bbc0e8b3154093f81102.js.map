{"version":3,"file":"js/2702.1654117724631.5fe050b458d5eb81d83d.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/components/AuthModal.js","webpack:///./src/App.js","webpack:///./src/constants.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js"],"sourcesContent":["import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport React, { Suspense } from 'react';\nimport { routes as paths } from '../package.json';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\nimport { useFeatureFlags } from './constants';\n// const Groups = React.lazy(() =>\n//   import(/* webpackChunkName: \"GroupsPage\" */ './Routes/Groups/Groups')\n// );\n// const GroupsDetail = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/GroupsDetail/GroupsDetail'\n//   )\n// );\n\nconst DeviceDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/DeviceDetail/DeviceDetail'\n  )\n);\n\n// const Canaries = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Canaries/Canaries'\n//   )\n// );\n\nconst Groups = React.lazy(() =>\n  import(/* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Groups/Groups')\n);\n\nconst GroupsDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/GroupsDetail/GroupsDetail'\n  )\n);\n\nconst Inventory = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/Devices/Inventory'\n  )\n);\n\nconst Images = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetailPage\" */ './Routes/ImageManager/Images'\n  )\n);\n\nconst ImageDetail = React.lazy(() =>\n  import('./Routes/ImageManagerDetail/ImageDetail')\n);\n\nconst Repositories = React.lazy(() =>\n  import('./Routes/Repositories/Repositories')\n);\n\nconst LearningResources = React.lazy(() =>\n  import('./Routes/LearningResources/LearningResources')\n);\n\nexport const Routes = () => {\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <Switch>\n        <Route exact path={paths.groups} component={Groups} />\n        <Route exact path={paths['groups-detail']} component={GroupsDetail} />\n        {/* <Route path={paths['device-detail']} component={DeviceDetail} /> */}\n        {/* <Route path={paths.canaries} component={Canaries} /> */}\n        <Route exact path={paths['fleet-management']} component={Groups} />\n        <Route\n          exact\n          path={paths['fleet-management-detail']}\n          component={GroupsDetail}\n        />\n        <Route exact path={paths['inventory']} component={Inventory} />\n        <Route path={paths['inventory-detail']} component={DeviceDetail} />\n        <Route\n          path={paths['manage-images-detail-version']}\n          component={ImageDetail}\n        />\n        <Route path={paths['manage-images-detail']} component={ImageDetail} />\n        <Route path={paths['manage-images']} component={Images} />\n\n        {useFeatureFlags('fleet-management.custom-repos') && (\n          <Route exact path={paths['repositories']} component={Repositories} />\n        )}\n        <Route\n          exact\n          path={paths['learning-resources']}\n          component={LearningResources}\n        />\n        <Route>\n          <Redirect to={paths['fleet-management']} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalBoxFooter, Button } from '@patternfly/react-core';\nimport edgeIcon from '../../static/images/Icon-Red_Hat-Edge-A-Red-RGB.png';\n\nconst AuthModal = () => {\n  return (\n    <Modal\n      style={{ padding: '15px' }}\n      isOpen={true}\n      variant=\"small\"\n      onClose={() => (window.location.href = 'https://console.redhat.com/')}\n      aria-label=\"auth-modal\"\n      header={\n        <h2 className=\"pf-u-pr-xl pf-u-pl-xl pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-bold\">\n          Edge management requires a valid Smart Management subscription\n        </h2>\n      }\n      footer={\n        <ModalBoxFooter\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            flexDirection: 'column',\n            paddingTop: 0,\n          }}\n        >\n          <Button\n            key=\"get-started\"\n            component=\"a\"\n            className=\"pf-u-mb-md\"\n            variant=\"primary\"\n            target=\"_blank\"\n            href=\"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux/try-it\"\n          >\n            Get started\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"interactive-demo\"\n            className=\"pf-u-mb-md\"\n            variant=\"secondary\"\n            target=\"_blank\"\n            href=\"https://red.ht/edgemanagementlab\"\n          >\n            Try the interactive demo\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"not-now\"\n            variant=\"link\"\n            href=\"https://console.redhat.com/\"\n          >\n            Not now\n          </Button>\n        </ModalBoxFooter>\n      }\n      title=\"Edge management requires a valid subscription\"\n      width=\"640px\"\n    >\n      <img\n        style={{ margin: '0 auto', display: 'block' }}\n        src={edgeIcon}\n        width=\"200px\"\n        alt=\"edge icon\"\n      />\n      <p className=\"pf-u-pr-xl pf-u-pl-xl pf-u-text-align-center\">\n        Securely manage and scale deployments at the edge with zero-touch\n        provisioning, system health visibility, and quick security remediations\n        and more with a Red Hat Smart Management subscription\n      </p>\n    </Modal>\n  );\n};\n\nexport default AuthModal;\n","import React, { useEffect, Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RegistryContext } from './store';\nimport { Routes } from './Routes';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { NotificationPortal } from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport AuthModal from './components/AuthModal';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst App = (props) => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isLogged, setIsLogged] = useState(false);\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(null);\n  useEffect(() => {\n    insights.chrome.init();\n    // TODO change this to your appname\n    insights.chrome.identifyApp('fleet-management');\n\n    insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    const registered = getRegistry().register({\n      notifications: notificationsReducer,\n    });\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setIsLogged(true);\n    })();\n\n    (async () => {\n      const data = await insights.chrome.auth.getUser();\n      setIsAuth(data.entitlements.smart_management.is_entitled);\n    })();\n\n    return () => {\n      registered();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {isAuth && isLogged ? (\n        <Routes childProps={props} />\n      ) : isAuth === null ? (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      ) : (\n        <AuthModal />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  BellIcon,\n  PauseCircleIcon,\n  CircleNotchIcon,\n  UnknownIcon,\n} from '@patternfly/react-icons';\n\nimport dangerColor from '@patternfly/react-tokens/dist/esm/global_danger_color_100';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport successColor from '@patternfly/react-tokens/dist/esm/global_success_color_100';\nimport infoColor from '@patternfly/react-tokens/dist/esm/global_info_color_100';\n\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nimport { useFlag, useFlagsStatus } from '@unleash/proxy-client-react';\n\nexport const statusMapper = [\n  'done',\n  'error',\n  'pending',\n  'unknown',\n  'updating',\n  'warning',\n  'notification',\n];\n\nexport const statusToIcon = {\n  done: {\n    icon: CheckCircleIcon,\n    color: successColor.value,\n    title: 'Fully adopted',\n  },\n  error: {\n    icon: ExclamationCircleIcon,\n    color: dangerColor.value,\n    title: 'Error while adopting',\n  },\n  pending: { icon: PauseCircleIcon, title: 'Pending adoption' },\n  updating: { icon: CircleNotchIcon, title: 'Updating' },\n  unknown: { icon: UnknownIcon, title: 'Unknown state' },\n  warning: {\n    icon: ExclamationTriangleIcon,\n    color: warningColor.value,\n    title: 'Warning while adopting',\n  },\n  notification: {\n    icon: BellIcon,\n    color: infoColor.value,\n    title: 'Delivering',\n  },\n};\n\nexport const sortByDirection = (data, direction = 'asc') =>\n  data.sort((a, b) =>\n    direction === 'asc'\n      ? a.name.toLowerCase().localeCompare(b.name.toLowerCase())\n      : b.name.toLowerCase().localeCompare(a.name.toLowerCase())\n  );\n\nexport const isEmptyFilters = (activeFilters) =>\n  Object.values(activeFilters).find(\n    (item) => item?.value?.length > 0 || item?.length > 0\n  );\n\nexport const constructActiveFilters = (activeFilters, getLabel) =>\n  Object.entries(activeFilters).map(([key, { label, value } = {}]) => ({\n    category: label,\n    chipKey: key,\n    chips:\n      value?.length > 0\n        ? Array.isArray(value)\n          ? value.map((item) => ({\n              name: getLabel?.(item) || item,\n              value: item,\n            }))\n          : [\n              {\n                name: getLabel?.(value) || value,\n                value,\n              },\n            ]\n        : [],\n  }));\n\nexport const onDeleteFilter = (activeFilters, itemsToRemove) => {\n  const currItem = itemsToRemove[0];\n  return {\n    ...activeFilters,\n    [currItem?.chipKey]: {\n      ...(activeFilters[currItem?.chipKey] || {}),\n      value: Array.isArray(activeFilters[currItem?.chipKey]?.value)\n        ? activeFilters[currItem?.chipKey]?.value?.filter(\n            (item) => !currItem?.chips?.find(({ value }) => value === item)\n          )\n        : '',\n    },\n  };\n};\n\nexport const deviceSummaryMapper = [\n  'active',\n  'noReports',\n  'neverReported',\n  'orphaned',\n];\n\nexport const inventoryFields = {\n  system_profile: { host_type: 'edge' },\n};\n\nexport const imageDistributionMapper = {\n  'rhel-8.1': 'RHEL 8.1',\n  'rhel-8.2': 'RHEL 8.2',\n  'rhel-8.3': 'RHEL 8.3',\n};\n\nexport const imageArchMapper = {\n  x86_64: '64bit',\n  arm: 'Arm',\n};\n\nexport const nameValidator = {\n  type: validatorTypes.PATTERN,\n  pattern: /^[A-Za-z0-9]+[A-Za-z0-9_\\-\\s]*$/,\n  message:\n    'Name must start with alphanumeric characters and can contain underscore and hyphen characters.',\n};\n\nexport const mapUrlToObj = (url, keys) => {\n  const splitUrl = url.split('/');\n  const obj = {};\n\n  for (let i = 1; i < splitUrl.length; i++) {\n    if (splitUrl[i]) {\n      obj[keys[i - 1]] = splitUrl[i];\n    }\n  }\n\n  obj.buildUrl = function () {\n    return Object.values(this).reduce(\n      (acc, curr) => (typeof curr !== 'function' ? `${acc}/${curr}` : acc),\n      ''\n    );\n  };\n\n  return obj;\n};\n\n//urlString is the string added to the url search param\n//state is a boolean that adds or removes the urlString from the url\nexport const stateToUrlSearch = (urlString, state) => {\n  var searchArray = [];\n  const currentSearchArray =\n    location.search.length > 0\n      ? location.search.includes('&')\n        ? location.search.split('?')[1].split('&')\n        : location.search.split('?').slice(1)\n      : [];\n  if (state) {\n    currentSearchArray.includes(urlString)\n      ? currentSearchArray\n      : currentSearchArray.push(urlString);\n    searchArray = currentSearchArray;\n  } else {\n    searchArray = currentSearchArray.includes(urlString)\n      ? currentSearchArray.filter((e) => e !== urlString)\n      : currentSearchArray;\n  }\n\n  return searchArray.join('&');\n};\n\nexport const emptyStateNoFliters = (isLoading, count, history) =>\n  isLoading !== true &&\n  !count > 0 &&\n  !history.location.search.includes('has_filters=true');\n\nexport const canUpdateSelectedDevices = ({ deviceData, imageData }) =>\n  deviceData?.length > 0 && imageData\n    ? deviceData?.some(\n        (device) => device.imageSetId !== deviceData[0].imageSetId\n      )\n    : true;\n\nexport const useFeatureFlags = (flag) => {\n  const { flagsReady } = useFlagsStatus();\n  const isFlagEnabled = useFlag(flag);\n\n  return flagsReady ? isFlagEnabled : false;\n};\n\nexport const truncateString = (string, characterCount) =>\n  `${string.substring(0, characterCount[0])}...${string.substring(\n    string.length - characterCount[1],\n    string.length\n  )}`;\n","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n"],"names":["DeviceDetail","React","Groups","GroupsDetail","Inventory","Images","ImageDetail","Repositories","LearningResources","Routes","Suspense","fallback","Bullseye","Spinner","size","Switch","Route","exact","path","paths","component","useFeatureFlags","Redirect","to","Modal","style","padding","isOpen","variant","onClose","window","location","href","header","className","footer","ModalBoxFooter","display","justifyContent","width","flexDirection","paddingTop","Button","key","target","title","margin","src","edgeIcon","alt","props","getRegistry","useContext","RegistryContext","useState","isLogged","setIsLogged","history","useHistory","isAuth","setIsAuth","useEffect","insights","chrome","init","identifyApp","on","event","push","navId","registered","register","notifications","notificationsReducer","auth","getUser","data","entitlements","smart_management","is_entitled","Fragment","NotificationPortal","childProps","statusMapper","statusToIcon","done","icon","CheckCircleIcon","color","successColor","error","ExclamationCircleIcon","dangerColor","pending","PauseCircleIcon","updating","CircleNotchIcon","unknown","UnknownIcon","warning","ExclamationTriangleIcon","warningColor","notification","BellIcon","infoColor","sortByDirection","direction","sort","a","b","name","toLowerCase","localeCompare","nameValidator","type","validatorTypes","pattern","message","mapUrlToObj","url","keys","splitUrl","split","obj","i","length","buildUrl","Object","values","this","reduce","acc","curr","stateToUrlSearch","urlString","state","searchArray","currentSearchArray","search","includes","slice","filter","e","join","emptyStateNoFliters","isLoading","count","canUpdateSelectedDevices","deviceData","imageData","some","device","imageSetId","flag","flagsReady","useFlagsStatus","isFlagEnabled","useFlag","truncateString","string","characterCount","substring","hasPollingData","polling","id","fetcher","condition","ofPollingType","endsWith","pollHash","dispatch","next","action","payload","meta","onEvent","setTimeout","then","resp","toContinue","stateName","forEach","createContext","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}