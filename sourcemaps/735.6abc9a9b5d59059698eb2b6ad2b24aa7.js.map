{"version":3,"file":"js/735.a91eab9e06dce1b64f30.js","mappings":"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,UAAWsM,EAAAA,EAAAA,OACf,kBAAC9L,EAAA,EAAD,CACE+L,OAAO,SACPC,KAAK,uSACLC,eAAa,EACbzM,UAAWsM,EAAAA,EAAAA,GAJb,4BAOE,kBAAC,MAAD,CAAqB9M,UAAU,oBCrCpC,IAEMmN,GAAoB,CAC/B,OACA,MACA,SACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,QACA,QACA,OACA,WACA,OACA,OACA,OACA,OACA,WACA,QACA,SACA,MACA,MACA,WACA,UACA,UACA,SACA,QACA,UACA,OACA,QACA,MACA,QACA,WACA,QACA,OACA,UACA,UACA,MACA,eACA,OACA,UACA,WACA,OACA,MACA,MACA,MACA,QACA,MACA,UACA,MACA,MACA,WACA,WACA,YACA,WACA,SACA,MACA,QACA,SACA,SACA,OACA,OACA,YACA,MACA,cACA,MACA,UACA,kBACA,SACA,QACA,SACA,QACA,OACA,UACA,YACA,YACA,OACA,QACA,WACA,UACA,UACA,OACA,QACA,QACA,WACA,WACA,MACA,WACA,UACA,OACA,QACA,SACA,SACA,WACA,UACA,aACA,SACA,UACA,WACA,YACA,SACA,OACA,YACA,UACA,SACA,UACA,QACA,QACA,OACA,QACA,QACA,QACA,QACA,UACA,UACA,SACA,UACA,OACA,QACA,OACA,WACA,YACA,cACA,UACA,UACA,UACA,QACA,SACA,OACA,WACA,UACA,SACA,aACA,OACA,gBACA,QACA,QACA,OACA,UACA,aACA,MACA,QACA,UACA,UACA,SACA,UACA,UACA,gBACA,UACA,UACA,gBACA,UACA,OACA,UACA,YACA,WACA,kBACA,kBACA,kBACA,QACA,SACA,SACA,ICtKWC,GAA4B,kBAAM,SAACxL,GAAD,OAC7CuL,GAAkB5L,SAASK,GACvB,kDACAf,I,qlBCgBC,IAUDwM,GAAoB,SAAC,GAOrB,IANJC,EAMI,EANJA,OACAxN,EAKI,EALJA,SACAyN,EAII,EAJJA,QACAC,EAGI,EAHJA,sBACAb,EAEI,EAFJA,cACAxI,EACI,EADJA,YAEA,O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","sources":["webpack:///./src/components/form/CustomSubmitButtons.js","webpack:///./src/Routes/ImageManager/steps/review.js","webpack:///./src/Routes/ImageManager/steps/packages.js","webpack:///./src/Routes/ImageManager/steps/imageOutput.js","webpack:///./src/Routes/ImageManager/steps/imageSetDetails.js","webpack:///./src/Routes/ImageManager/steps/updateDetails.js","webpack:///./src/Routes/ImageManager/steps/registration.js","webpack:///./src/components/form/Packages.js","webpack:///./src/components/form/RegistrationCreds.js","webpack:///./src/components/form/ImageOutputCheckbox.js","webpack:///./src/components/form/SSHInputField.js","webpack:///./src/components/form/constants.js","webpack:///./src/components/form/validators.js","webpack:///./src/components/ImageCreator.js","webpack:///./src/components/ReviewSection.js","webpack:///./src/components/form/ReviewStep.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { FormSpy } from '@data-driven-forms/react-form-renderer';\nimport WizardContext from '@data-driven-forms/react-form-renderer/wizard-context';\nimport PropTypes from 'prop-types';\n\nconst CustomButtons = ({ buttonLabels: { cancel, submit, back } }) => {\n  const [isSaving, setIsSaving] = useState(false);\n  const { handlePrev, formOptions } = useContext(WizardContext);\n  return (\n    <FormSpy>\n      {() => (\n        <React.Fragment>\n          <Button\n            variant=\"primary\"\n            type=\"button\"\n            isDisabled={\n              !formOptions.valid ||\n              formOptions.getState().validating ||\n              isSaving\n            }\n            onClick={() => {\n              formOptions.onSubmit({\n                values: formOptions.getState().values,\n                setIsSaving,\n              });\n            }}\n          >\n            {submit}\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"secondary\"\n            onClick={handlePrev}\n            isDisabled={isSaving}\n          >\n            {back}\n          </Button>\n          <div className=\"pf-c-wizard__footer-cancel\">\n            <Button\n              type=\"button\"\n              variant=\"link\"\n              onClick={formOptions.onCancel}\n              isDisabled={isSaving}\n            >\n              {cancel}\n            </Button>\n          </div>\n        </React.Fragment>\n      )}\n    </FormSpy>\n  );\n};\n\nCustomButtons.propTypes = {\n  buttonLabels: PropTypes.shape({\n    cancel: PropTypes.node,\n    submit: PropTypes.node,\n    back: PropTypes.node,\n  }),\n  isSaving: PropTypes.bool,\n};\n\nexport default CustomButtons;\n","import CustomButtons from '../../../components/form/CustomSubmitButtons';\n\nexport default {\n  name: 'review',\n  title: 'Review',\n  buttons: CustomButtons,\n  fields: [\n    {\n      name: 'review',\n      component: 'review',\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, TextContent } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport { releaseMapper } from '../../ImageManagerDetail/constants';\n\nconst PackagesLabel = () => {\n  const { getState } = useFormApi();\n  const release = getState()?.values?.release;\n  const releaseName = release !== undefined ? releaseMapper[release] : '';\n  return (\n    <TextContent>\n      <Text>\n        Add packages to your <Text component=\"b\">{releaseName}</Text> image.\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default {\n  title: 'Additional packages',\n  name: 'packages',\n  nextStep: 'review',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'google-cloud-text-component',\n      label: <PackagesLabel />,\n    },\n    {\n      component: 'package-selector',\n      name: 'selected-packages',\n      label: 'Available options',\n      initialValue: [],\n      clearedValue: [],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n  DEFAULT_RELEASE,\n} from '../../ImageManagerDetail/constants';\n\nexport default {\n  title: 'Options',\n  name: 'imageOutput',\n  nextStep: ({ values }) =>\n    values?.imageType?.includes('rhel-edge-installer') || !values.imageType\n      ? 'registration'\n      : 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Enter some basic information about your image.</Text>,\n    },\n    {\n      component: componentTypes.SELECT,\n      name: 'release',\n      label: 'Release',\n      options: Object.entries(releaseMapper).map(([release, releaseLabel]) => ({\n        value: release,\n        label: releaseLabel,\n      })),\n      initialValue: DEFAULT_RELEASE,\n      validate: [{ type: validatorTypes.REQUIRED }],\n      isRequired: true,\n    },\n    {\n      component: 'image-output-checkbox',\n      name: 'imageType',\n      options: Object.entries(imageTypeMapper).map(\n        ([imageType, imageTypeLabel]) => ({\n          value: imageType,\n          label: imageTypeLabel,\n        })\n      ),\n      initialValue: ['rhel-edge-installer', 'rhel-edge-commit'],\n      clearedValue: [],\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Flex, FlexItem, Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { checkImageName } from '../../../api';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst helperText =\n  'Can only contain letters, numbers, spaces, hyphens(-), and underscores(_).';\n\nconst asyncImageNameValidation = (value) =>\n  checkImageName(value)\n    .then((result) => {\n      if (result.ImageExists) {\n        throw new Error('Name already exists');\n      }\n    })\n    .catch(({ message }) => {\n      throw message;\n    });\n\nconst CharacterCount = () => {\n  const { getState } = useFormApi();\n  const description = getState().values?.description;\n  return <h1>{description?.length || 0}/250</h1>;\n};\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>\n          Enter a name and description to easily identify your image later.\n        </Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Image name',\n      placeholder: 'Image name',\n      helperText: helperText,\n      validate: [\n        asyncImageNameValidation,\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-\\s]*$/,\n          message: helperText,\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n      ],\n      isRequired: true,\n    },\n    {\n      component: componentTypes.TEXTAREA,\n      style: {\n        paddingRight: '32px',\n      },\n      name: 'description',\n      label: (\n        <Flex justifyContent={{ default: 'justifyContentSpaceBetween' }}>\n          <FlexItem>\n            <Text component={'b'}>Description</Text>\n          </FlexItem>\n          <FlexItem>\n            <CharacterCount />\n          </FlexItem>\n        </Flex>\n      ),\n      placeholder: 'Add description',\n\n      resizeOrientation: 'vertical',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Details',\n  name: 'imageSetDetails',\n  nextStep: 'imageOutput',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: (\n        <Text>Enter a description to easily identify your image later.</Text>\n      ),\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'description',\n      label: 'Description',\n      placeholder: 'Add description',\n      validate: [{ type: validatorTypes.MAX_LENGTH, threshold: 250 }],\n    },\n  ],\n};\n","import React from 'react';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport { Text, HelperText, HelperTextItem } from '@patternfly/react-core';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\nexport default {\n  title: 'Device registration',\n  name: 'registration',\n  nextStep: 'packages',\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'description',\n      label: <Text>Use this to log into your device.</Text>,\n    },\n    {\n      component: componentTypes.TEXT_FIELD,\n      label: 'Username',\n      placeholder: 'Enter username',\n      helperText: (\n        <HelperText>\n          <HelperTextItem className=\"pf-u-mt-xs\" variant=\"indeterminate\">\n            Can only contain letters, numbers, spaces, hyphen ( - ), and\n            underscores( _ ).\n          </HelperTextItem>\n        </HelperText>\n      ),\n      name: 'username',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^[A-Za-z0-9]+[A-Za-z0-9_-]*$/,\n          message:\n            'Can only contain letters, numbers, spaces, hyphen ( - ), and underscores( _ ).',\n        },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        { type: 'reservedUsernameValidator' },\n      ],\n      isRequired: true,\n    },\n    {\n      component: 'ssh-input-field',\n      name: 'credentials',\n      validate: [\n        { type: validatorTypes.REQUIRED },\n        {\n          type: validatorTypes.PATTERN,\n          pattern: /^(ssh-(rsa|dss|ed25519)|ecdsa-sha2-nistp(256|384|521)) \\S+/,\n        },\n      ],\n      isRequired: true,\n    },\n  ],\n};\n","import React, { useState, useEffect } from 'react';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { getPackages } from '../../api';\nimport PropTypes from 'prop-types';\nimport {\n  TextContent,\n  Text,\n  Button,\n  DualListSelector,\n  DualListSelectorPane,\n  DualListSelectorList,\n  DualListSelectorListItem,\n  DualListSelectorControlsWrapper,\n  DualListSelectorControl,\n  HelperText,\n  HelperTextItem,\n  InputGroup,\n  InputGroupText,\n  TextInput,\n  Divider,\n} from '@patternfly/react-core';\nimport SearchIcon from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport AngleDoubleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport AngleLeftIcon from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport AngleDoubleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-double-right-icon';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport { sortByDirection as sortedOptions } from '../../constants';\n\nconst EmptyText = ({ text }) => (\n  <Text className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    {text}\n  </Text>\n);\n\nEmptyText.propTypes = {\n  text: PropTypes.string,\n};\n\nconst NoResultsText = ({ heading, body }) => (\n  <TextContent className=\"pf-u-text-align-center pf-u-pr-xl pf-u-pl-xl pf-u-pt-xl\">\n    <Text component=\"h3\">{heading}</Text>\n    <Text component=\"small\">{body}</Text>\n  </TextContent>\n);\n\nNoResultsText.propTypes = {\n  heading: PropTypes.string,\n  body: PropTypes.string,\n};\n\nconst mapPackagesToOptions = (pkgs) =>\n  pkgs.map((pkg) => ({\n    selected: false,\n    isVisible: true,\n    ...pkg,\n  }));\n\nconst Packages = ({ defaultArch, ...props }) => {\n  const { change, getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const [availableOptions, setAvailableOptions] = React.useState([]);\n  const [chosenOptions, setChosenOptions] = React.useState([]);\n  const [availableInputValue, setAvailableInputValue] = React.useState('');\n  const [enterPressed, setEnterPressed] = useState(false);\n  const [hasMoreResults, setHasMoreResults] = useState(false);\n  const [scrollTo, setScrollTo] = useState(null);\n  const [hasNoSearchResults, setHasNoSearchResults] = useState(false);\n  const [searchFocused, setSearchFocused] = useState(false);\n  const [exactMatch, setExactMatch] = useState(false);\n\n  useEffect(() => {\n    const loadedPackages = getState()?.values?.[input.name] || [];\n    setChosenOptions(sortedOptions(mapPackagesToOptions(loadedPackages)));\n\n    const availableSearchInput = document.querySelector(\n      '[aria-label=\"available search input\"]'\n    );\n\n    availableSearchInput?.addEventListener('keydown', handleSearchOnEnter);\n    return () =>\n      availableSearchInput.removeEventListener('keydown', handleSearchOnEnter);\n  }, []);\n\n  useEffect(() => {\n    if (enterPressed) {\n      handlePackageSearch();\n      setEnterPressed(false);\n    }\n  }, [enterPressed]);\n\n  useEffect(() => {\n    scrollToAddedPackages();\n  }, [scrollTo]);\n\n  const handlePackageSearch = async () => {\n    if (availableInputValue === '') {\n      return;\n    }\n\n    const { data, meta } = await getPackages(\n      getState()?.values?.release || 'rhel-84',\n      getState()?.values?.architecture || defaultArch,\n      availableInputValue\n    );\n\n    if (!data) {\n      setHasNoSearchResults(true);\n      setHasMoreResults(false);\n      setAvailableOptions([]);\n      return;\n    }\n\n    if (meta.count > 100) {\n      setHasNoSearchResults(false);\n      setHasMoreResults(true);\n\n      const isNotChosen = !chosenOptions.find(\n        (option) => option.name === data[0].name\n      );\n\n      if (data[0].name === availableInputValue && isNotChosen) {\n        setExactMatch(true);\n        setAvailableOptions(mapPackagesToOptions([data[0]]));\n        return;\n      }\n\n      setExactMatch(false);\n      setAvailableOptions([]);\n      return;\n    } else {\n      setHasMoreResults(false);\n\n      setExactMatch(false);\n    }\n\n    const removeChosenPackages = data.filter(\n      (newPkg) =>\n        !chosenOptions.find((chosenPkg) => chosenPkg.name === newPkg.name)\n    );\n    setAvailableOptions(\n      sortedOptions(mapPackagesToOptions(removeChosenPackages))\n    );\n\n    setHasNoSearchResults(false);\n  };\n\n  const handleSearchOnEnter = (e) => {\n    if (e.key === 'Enter') {\n      e.stopPropagation();\n      setEnterPressed(true);\n    }\n  };\n\n  const scrollToAddedPackages = () => {\n    if (!scrollTo) {\n      return;\n    }\n\n    const destination = document.querySelector(\n      `.pf-m-${scrollTo.pane} .pf-c-dual-list-selector__menu`\n    );\n    scrollTo.pkgs.forEach((pkg) =>\n      document\n        .getElementById(`package-${pkg.name}`)\n        .closest('.pf-c-dual-list-selector__list-item-row')\n        .classList.add('pf-u-background-color-disabled-color-300')\n    );\n    setTimeout(() => {\n      scrollTo.pkgs.forEach((pkg) =>\n        document\n          .getElementById(`package-${pkg.name}`)\n          .closest('.pf-c-dual-list-selector__list-item-row')\n          .classList.remove('pf-u-background-color-disabled-color-300')\n      );\n    }, 400);\n    destination.scrollTop = scrollTo.scrollHeight;\n\n    setScrollTo(null);\n  };\n\n  const moveSelected = (fromAvailable) => {\n    const sourceOptions = fromAvailable ? availableOptions : chosenOptions;\n    let destinationOptions = fromAvailable ? chosenOptions : availableOptions;\n\n    const selectedOptions = [];\n    for (let i = 0; i < sourceOptions.length; i++) {\n      const option = sourceOptions[i];\n      if (option.selected && option.isVisible) {\n        selectedOptions.push(option);\n        sourceOptions.splice(i, 1);\n        option.selected = false;\n        i--;\n      }\n    }\n\n    destinationOptions = sortedOptions([\n      ...destinationOptions,\n      ...selectedOptions,\n    ]);\n\n    const packageHeight = 61;\n    const scrollHeight =\n      destinationOptions.findIndex(\n        (pkg) => pkg.name === selectedOptions[0].name\n      ) * packageHeight;\n\n    if (fromAvailable) {\n      setAvailableOptions(sortedOptions([...sourceOptions]));\n      setChosenOptions(destinationOptions);\n      change(input.name, destinationOptions);\n    } else {\n      setChosenOptions(sortedOptions([...sourceOptions]));\n      setAvailableOptions(destinationOptions);\n      change(input.name, [...sourceOptions]);\n    }\n    setScrollTo({\n      pkgs: selectedOptions,\n      pane: fromAvailable ? 'chosen' : 'available',\n      scrollHeight,\n    });\n    setExactMatch(false);\n  };\n\n  const moveAll = (fromAvailable) => {\n    if (fromAvailable) {\n      setChosenOptions(\n        sortedOptions([\n          ...availableOptions.filter((x) => x.isVisible),\n          ...chosenOptions,\n        ])\n      );\n      setAvailableOptions(\n        sortedOptions([...availableOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, [...availableOptions, ...chosenOptions]);\n    } else {\n      setAvailableOptions(\n        sortedOptions([\n          ...chosenOptions.filter((x) => x.isVisible),\n          ...availableOptions,\n        ])\n      );\n      setChosenOptions(\n        sortedOptions([...chosenOptions.filter((x) => !x.isVisible)])\n      );\n      change(input.name, []);\n    }\n    setExactMatch(false);\n  };\n\n  const onOptionSelect = (_event, index, isChosen) => {\n    if (isChosen) {\n      const newChosen = [...chosenOptions];\n      newChosen[index].selected = !chosenOptions[index].selected;\n      setChosenOptions(sortedOptions(newChosen));\n    } else {\n      const newAvailable = [...availableOptions];\n      newAvailable[index].selected = !availableOptions[index].selected;\n      setAvailableOptions(sortedOptions(newAvailable));\n    }\n  };\n\n  const buildSearchInput = (isAvailable) => {\n    const onChange = (value) => {\n      setAvailableInputValue(value);\n      if (!isAvailable) {\n        const toFilter = [...chosenOptions];\n        toFilter.forEach((option) => {\n          option.isVisible =\n            value === '' ||\n            option.name.toLowerCase().includes(value.toLowerCase());\n        });\n      }\n    };\n\n    return (\n      <>\n        <InputGroup>\n          <TextInput\n            id={`${isAvailable ? 'available' : 'chosen'}-textinput`}\n            type=\"search\"\n            onChange={onChange}\n            placeholder=\"Search for packages\"\n            onFocus={() => setSearchFocused(true)}\n            onBlur={() => setSearchFocused(false)}\n            validated={\n              hasMoreResults && isAvailable && !searchFocused ? 'warning' : ''\n            }\n            aria-label={\n              isAvailable ? 'available search input' : 'chosen search input'\n            }\n            data-testid={\n              isAvailable ? 'available-search-input' : 'chosen-search-input'\n            }\n          />\n          {isAvailable ? (\n            <Button\n              onClick={handlePackageSearch}\n              isDisabled={!isAvailable}\n              variant=\"control\"\n              aria-label=\"search button for search input\"\n              data-testid=\"package-search\"\n            >\n              <SearchIcon />\n            </Button>\n          ) : (\n            <InputGroupText>\n              <SearchIcon className=\"pf-u-ml-xs pf-u-mr-xs\" />\n            </InputGroupText>\n          )}\n        </InputGroup>\n        {hasMoreResults && isAvailable && (\n          <HelperText>\n            <HelperTextItem variant=\"warning\">\n              Over 100 results found. Refine your search.\n            </HelperTextItem>\n          </HelperText>\n        )}\n      </>\n    );\n  };\n\n  const displayPackagesFrom = (options, isChosen) => {\n    return options.map((option, index) => {\n      return option.isVisible ? (\n        <DualListSelectorListItem\n          key={index}\n          isSelected={option.selected}\n          id={`composable-option-${index}`}\n          onOptionSelect={(e) => onOptionSelect(e, index, isChosen)}\n        >\n          <TextContent>\n            <span\n              id={`package-${option.name}`}\n              className=\"pf-c-dual-list-selector__item-text\"\n            >\n              {option.name}\n            </span>\n            <small>{option.summary}</small>\n          </TextContent>\n        </DualListSelectorListItem>\n      ) : null;\n    });\n  };\n\n  const selectedStatus = (options) => {\n    const totalItemNum = options.filter((x) => x.isVisible).length;\n    const selectedItemNum = options.filter(\n      (x) => x.selected && x.isVisible\n    ).length;\n    return selectedItemNum > 0\n      ? `${selectedItemNum} of ${totalItemNum} items selected`\n      : `${totalItemNum} ${totalItemNum > 1 ? 'items' : 'item'}`;\n  };\n\n  return (\n    <DualListSelector>\n      <DualListSelectorPane\n        title=\"Available packages\"\n        status={selectedStatus(availableOptions)}\n        searchInput={buildSearchInput(true)}\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"available-packages-list\"\n        >\n          {availableOptions.length > 0 && !exactMatch ? (\n            displayPackagesFrom(availableOptions, false)\n          ) : hasNoSearchResults ? (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          ) : hasMoreResults ? (\n            <>\n              {exactMatch && (\n                <HelperText>\n                  <HelperTextItem\n                    className=\"pf-u-ml-md pf-u-mt-md\"\n                    variant=\"indeterminate\"\n                  >\n                    Exact match\n                  </HelperTextItem>\n                </HelperText>\n              )}\n              {exactMatch && displayPackagesFrom(availableOptions, false)}\n              {exactMatch && (\n                <Divider\n                  className=\"pf-u-mt-md\"\n                  inset={{ default: 'insetMd' }}\n                />\n              )}\n              <NoResultsText\n                heading=\"Too many results to display\"\n                body=\"Please make the search more specific and try again\"\n              />\n            </>\n          ) : (\n            <EmptyText text=\"Search above to add additional packages to your image.\" />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n\n      <DualListSelectorControlsWrapper aria-label=\"Selector controls\">\n        <DualListSelectorControl\n          isDisabled={!availableOptions.some((option) => option.selected)}\n          onClick={() => moveSelected(true)}\n          aria-label=\"Add selected\"\n          tooltipContent=\"Add selected\"\n        >\n          <AngleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={availableOptions.length === 0}\n          onClick={() => moveAll(true)}\n          aria-label=\"Add all\"\n          tooltipContent=\"Add all\"\n        >\n          <AngleDoubleRightIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          isDisabled={chosenOptions.length === 0}\n          onClick={() => moveAll(false)}\n          aria-label=\"Remove all\"\n          tooltipContent=\"Remove all\"\n        >\n          <AngleDoubleLeftIcon />\n        </DualListSelectorControl>\n        <DualListSelectorControl\n          onClick={() => moveSelected(false)}\n          isDisabled={!chosenOptions.some((option) => option.selected)}\n          aria-label=\"Remove selected\"\n          tooltipContent=\"Remove selected\"\n        >\n          <AngleLeftIcon />\n        </DualListSelectorControl>\n      </DualListSelectorControlsWrapper>\n\n      <DualListSelectorPane\n        title=\"Chosen packages\"\n        status={selectedStatus(chosenOptions)}\n        searchInput={buildSearchInput(false)}\n        isChosen\n      >\n        <DualListSelectorList\n          style={{ height: '290px' }}\n          data-testid=\"chosen-packages-list\"\n        >\n          {chosenOptions.length === 0 ? (\n            <EmptyText text=\"No packages added.\" />\n          ) : chosenOptions.filter((option) => option.isVisible).length > 0 ? (\n            displayPackagesFrom(chosenOptions, true)\n          ) : (\n            <NoResultsText\n              heading=\"No Results Found\"\n              body=\"Adjust your search and try again\"\n            />\n          )}\n        </DualListSelectorList>\n      </DualListSelectorPane>\n    </DualListSelector>\n  );\n};\n\nPackages.propTypes = {\n  defaultArch: PropTypes.string,\n};\n\nexport default Packages;\n","import React, { useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextInput,\n  TextArea,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\n\nexport const registrationCredsValidator = () => (value, state) => {\n  if (value.length === 0) {\n    return { checkbox: 'select at least one validation method' };\n  }\n  let errs = {};\n  if (\n    value.includes('password') &&\n    (state['password'] === undefined || state['password'] === '')\n  ) {\n    errs = { ...errs, password: 'Required' };\n  }\n  if (\n    value.includes('sshKey') &&\n    (state['sshKey'] === undefined || state['sshKey'] === '')\n  ) {\n    errs = { ...errs, sshKey: 'Required' };\n  }\n  return errs;\n};\n\nconst RegistrationCreds = (props) => {\n  const { input, meta } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  const { input: passwordInput } = useFieldApi({ name: 'password' });\n  const { input: sshKeyInput } = useFieldApi({ name: 'sshKey' });\n\n  return (\n    <FormGroup\n      label=\"Select at least one to validate credentials\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      <Checkbox\n        label=\"Password\"\n        id=\"password\"\n        isChecked={input.value.includes('password')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('password') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['password'] !== undefined\n              ? meta.error['password']\n              : undefined\n          }\n        >\n          <TextInput type=\"password\" {...passwordInput} />\n        </FormGroup>\n      ) : null}\n      <Checkbox\n        label=\"SSH\"\n        id=\"sshKey\"\n        isChecked={input.value.includes('sshKey')}\n        onChange={toggleCheckbox}\n      />\n      {input.value.includes('sshKey') ? (\n        <FormGroup\n          helperTextInvalid={\n            meta.dirty && meta.error['sshKey'] !== undefined\n              ? meta.error['sshKey']\n              : undefined\n          }\n        >\n          <TextArea {...sshKeyInput} />\n        </FormGroup>\n      ) : null}\n    </FormGroup>\n  );\n};\n\nexport default RegistrationCreds;\n","import React, { Fragment, useCallback } from 'react';\nimport {\n  FormGroup,\n  Checkbox,\n  TextContent,\n  Text,\n  TextVariants,\n  HelperText,\n  HelperTextItem,\n} from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport PropTypes from 'prop-types';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\n\nconst WarningInstallerHelperText = () => (\n  <HelperText className=\"pf-u-ml-lg\" hasIcon>\n    <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n      Creating an installable version of your image increases the build time and\n      is not needed for updating existing devices. <br />\n      You can create an installable version of this image later if you continue\n      with this option\n    </HelperTextItem>\n  </HelperText>\n);\n\nconst outputHelperText = {\n  'rhel-edge-commit':\n    'An OSTree commit is always created when building an image.',\n  'rhel-edge-installer':\n    'An installable version of the image is typically created with a brand new image.',\n};\n\nconst ImageOutputCheckbox = (props) => {\n  const { getState } = useFormApi();\n  const { input } = useFieldApi(props);\n  const toggleCheckbox = useCallback(\n    (checked, event) => {\n      input.onChange(\n        checked\n          ? [...input.value, event.currentTarget.id]\n          : input.value.filter((item) => item !== event.currentTarget.id)\n      );\n    },\n    [input.onChange]\n  );\n\n  return (\n    <FormGroup\n      label=\"Output type\"\n      isHelperTextBeforeField\n      hasNoPaddingTop\n      isRequired\n      isStack\n    >\n      {props.options.map(({ value, label }, index) => (\n        <>\n          <Checkbox\n            key={index}\n            label={label}\n            id={value}\n            isChecked={input.value.includes(value)}\n            onChange={toggleCheckbox}\n            isDisabled={value === 'rhel-edge-commit'}\n          />\n          <TextContent>\n            {getState()?.initialValues?.isUpdate &&\n            value === 'rhel-edge-installer' ? (\n              <WarningInstallerHelperText />\n            ) : (\n              <HelperText className=\"pf-u-ml-lg pf-u-pb-sm\">\n                <HelperTextItem variant=\"indeterminate\">\n                  {outputHelperText[value]}\n                </HelperTextItem>\n              </HelperText>\n            )}\n          </TextContent>\n          {value === 'rhel-edge-installer' && (\n            <Fragment>\n              <Text component={TextVariants.small}>\n                <Text\n                  target=\"_blank\"\n                  href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/composing_installing_and_managing_rhel_for_edge_images/index#edge-how-to-compose-and-deploy-a-rhel-for-edge-image_introducing-rhel-for-edge-images\"\n                  component={TextVariants.a}\n                  isVisitedLink\n                >\n                  Learn more about image types.\n                  <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n                </Text>\n              </Text>\n            </Fragment>\n          )}\n        </>\n      ))}\n    </FormGroup>\n  );\n};\n\nImageOutputCheckbox.propTypes = {\n  input: PropTypes.array,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.string,\n      label: PropTypes.string,\n    })\n  ),\n};\n\nexport default ImageOutputCheckbox;\n","import React, { Fragment } from 'react';\nimport {\n  FormGroup,\n  TextArea,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport useFieldApi from '@data-driven-forms/react-form-renderer/use-field-api';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SSHInputField = (props) => {\n  const { input: sshKeyInput, meta } = useFieldApi({\n    name: 'credentials',\n    ...props,\n  });\n  return (\n    <FormGroup>\n      <FormGroup\n        label=\"SSH key\"\n        helperTextInvalid={meta.error}\n        validated={meta.error && meta.touched ? 'error' : 'default'}\n        isRequired\n      >\n        <TextArea\n          className=\"pf-u-h-25vh\"\n          id=\"credentials\"\n          placeholder=\"Paste your public SSH key\"\n          {...sshKeyInput}\n        />\n      </FormGroup>\n      <Fragment>\n        <Text component={TextVariants.small}>\n          <Text\n            target=\"_blank\"\n            href=\"https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-secure-communications-between-two-systems-with-openssh_configuring-basic-system-settings#generating-ssh-key-pairs_using-secure-communications-between-two-systems-with-openssh\"\n            isVisitedLink\n            component={TextVariants.a}\n          >\n            Learn more about SSH keys\n            <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>\n      </Fragment>\n    </FormGroup>\n  );\n};\n\nexport default SSHInputField;\n","import React from 'react';\n\nexport const InventoryContext = React.createContext({});\n\nexport const reservedUsernames = [\n  'root',\n  'bin',\n  'daemon',\n  'sys',\n  'adm',\n  'tty',\n  'disk',\n  'lp',\n  'mem',\n  'kmem',\n  'wheel',\n  'cdrom',\n  'sync',\n  'shutdown',\n  'halt',\n  'mail',\n  'news',\n  'uucp',\n  'operator',\n  'games',\n  'gopher',\n  'ftp',\n  'man',\n  'oprofile',\n  'pkiuser',\n  'dialout',\n  'floppy',\n  'games',\n  'slocate',\n  'utmp',\n  'squid',\n  'pvm',\n  'named',\n  'postgres',\n  'mysql',\n  'nscd',\n  'rpcuser',\n  'console',\n  'rpc',\n  'amandabackup',\n  'tape',\n  'netdump',\n  'utempter',\n  'vdsm',\n  'kvm',\n  'rpm',\n  'ntp',\n  'video',\n  'dip',\n  'mailman',\n  'gdm',\n  'xfs',\n  'pppusers',\n  'popusers',\n  'slipusers',\n  'mailnull',\n  'apache',\n  'wnn',\n  'smmsp',\n  'puppet',\n  'tomcat',\n  'lock',\n  'ldap',\n  'frontpage',\n  'nut',\n  'beagleindex',\n  'tss',\n  'piranha',\n  'prelude-manager',\n  'snortd',\n  'audio',\n  'condor',\n  'nslcd',\n  'wine',\n  'pegasus',\n  'webalizer',\n  'haldaemon',\n  'vcsa',\n  'avahi',\n  'realtime',\n  'tcpdump',\n  'privoxy',\n  'sshd',\n  'radvd',\n  'cyrus',\n  'saslauth',\n  'arpwatch',\n  'fax',\n  'nocpulse',\n  'desktop',\n  'dbus',\n  'jonas',\n  'clamav',\n  'screen',\n  'quaggavt',\n  'sabayon',\n  'polkituser',\n  'wbpriv',\n  'postfix',\n  'postdrop',\n  'majordomo',\n  'quagga',\n  'exim',\n  'distcache',\n  'radiusd',\n  'hsqldb',\n  'dovecot',\n  'ident',\n  'users',\n  'qemu',\n  'ovirt',\n  'rhevm',\n  'jetty',\n  'saned',\n  'vhostmd',\n  'usbmuxd',\n  'bacula',\n  'cimsrvr',\n  'mock',\n  'ricci',\n  'luci',\n  'activemq',\n  'cassandra',\n  'stap-server',\n  'stapusr',\n  'stapsys',\n  'stapdev',\n  'swift',\n  'glance',\n  'nova',\n  'keystone',\n  'quantum',\n  'cinder',\n  'ceilometer',\n  'ceph',\n  'avahi-autoipd',\n  'pulse',\n  'rtkit',\n  'abrt',\n  'retrace',\n  'ovirtagent',\n  'ats',\n  'dhcpd',\n  'myproxy',\n  'sanlock',\n  'aeolus',\n  'wallaby',\n  'katello',\n  'elasticsearch',\n  'mongodb',\n  'wildfly',\n  'jbosson-agent',\n  'jbosson',\n  'heat',\n  'haproxy',\n  'hacluster',\n  'haclient',\n  'systemd-journal',\n  'systemd-network',\n  'systemd-resolve',\n  'gnats',\n  'listar',\n  'nobody',\n  '',\n];\n","import { reservedUsernames } from './constants';\n\nexport const reservedUsernameValidator = () => (value) =>\n  reservedUsernames.includes(value)\n    ? 'This is a username reserved for the system'\n    : undefined;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport Pf4FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport { componentMapper } from '@data-driven-forms/pf4-component-mapper';\nimport { Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport Review from './form/ReviewStep';\nimport Packages from './form/Packages';\nimport RegistrationCreds from './form/RegistrationCreds';\nimport ImageOutputCheckbox from './form/ImageOutputCheckbox';\nimport SSHInputField from './form/SSHInputField';\nimport AsyncComponent from '@redhat-cloud-services/frontend-components/AsyncComponent';\nimport { registrationCredsValidator } from './form/RegistrationCreds';\nimport { reservedUsernameValidator } from './form/validators';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\n\n/**\n * Use this instead of CreateImageWizard once this PR is merged https://github.com/RedHatInsights/image-builder-frontend/pull/230\n * @returns Async component\n */\nexport const AsyncCreateImageWizard = (props) => (\n  <AsyncComponent\n    appName=\"image-builder\"\n    scope=\"image_builder\"\n    module=\"./ImageCreator\"\n    fallback={<Spinner />}\n    {...props}\n  />\n);\n\nconst CreateImageWizard = ({\n  schema,\n  onSubmit,\n  onClose,\n  customComponentMapper,\n  initialValues,\n  defaultArch,\n}) => {\n  return schema ? (\n    <FormRenderer\n      schema={schema}\n      className=\"image-builder\"\n      subscription={{ values: true }}\n      FormTemplate={(props) => (\n        <Pf4FormTemplate {...props} showFormControls={false} />\n      )}\n      onSubmit={(formValues) => onSubmit(formValues)}\n      initialValues={initialValues}\n      componentMapper={{\n        ...componentMapper,\n        // wizard: WrappedWizard,\n        'registration-creds': {\n          component: RegistrationCreds,\n        },\n        'image-output-checkbox': {\n          component: ImageOutputCheckbox,\n        },\n        'ssh-input-field': {\n          component: SSHInputField,\n        },\n        review: Review,\n        'package-selector': {\n          component: Packages,\n          defaultArch,\n        },\n        ...customComponentMapper,\n      }}\n      validatorMapper={{\n        ...validatorTypes,\n        registrationCredsValidator,\n        reservedUsernameValidator,\n      }}\n      onCancel={onClose}\n    />\n  ) : (\n    <Spinner />\n  );\n};\n\nCreateImageWizard.propTypes = {\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  onSubmit: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired,\n  customComponentMapper: PropTypes.shape({\n    [PropTypes.string]: PropTypes.oneOfType([\n      PropTypes.node,\n      PropTypes.shape({\n        component: PropTypes.node,\n      }),\n    ]),\n  }),\n  defaultArch: PropTypes.string,\n};\n\nexport default CreateImageWizard;\n","import React from 'react';\nimport {\n  Text,\n  Grid,\n  GridItem,\n  TextListItem,\n  TextVariants,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst ReviewSection = ({ title, data, testid }) => {\n  return (\n    <Grid className=\"pf-u-pb-xl\" data-testid={testid} hasGutter>\n      <GridItem span={12} hasGutter>\n        <Text component={TextVariants.h2}>{title}</Text>\n      </GridItem>\n      {data.map(({ name, value }) => (\n        <>\n          <GridItem span={3} hasGutter>\n            <TextListItem component={TextListItemVariants.dt}>\n              {name}\n            </TextListItem>\n          </GridItem>\n          <GridItem span={9} hasGutter>\n            <TextListItem component={TextListItemVariants.dd}>\n              {value}\n            </TextListItem>\n          </GridItem>\n        </>\n      ))}\n    </Grid>\n  );\n};\n\nReviewSection.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      value: PropTypes.string,\n    })\n  ),\n  testid: PropTypes.string,\n};\n\nexport default ReviewSection;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport useFormApi from '@data-driven-forms/react-form-renderer/use-form-api';\nimport {\n  imageTypeMapper,\n  releaseMapper,\n} from '../../Routes/ImageManagerDetail/constants';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { createImageReducer } from '../../store/reducers';\nimport { Bullseye, Spinner, Alert } from '@patternfly/react-core';\nimport ReviewSection from '../ReviewSection';\n\nconst ReviewStep = () => {\n  const { getState } = useFormApi();\n  const isUpdate = getState().initialValues.isUpdate;\n  const { getRegistry } = useContext(RegistryContext);\n  const { isLoading, hasError } = useSelector(\n    ({ createImageReducer }) => ({\n      isLoading:\n        createImageReducer?.isLoading !== undefined\n          ? createImageReducer?.isLoading\n          : false,\n      hasError: createImageReducer?.hasError || false,\n      error: createImageReducer?.error || null,\n    }),\n    shallowEqual\n  );\n  useEffect(() => {\n    const registered = getRegistry().register({ createImageReducer });\n    return () => registered();\n  }, []);\n\n  if (isLoading) {\n    return (\n      <Bullseye>\n        <Spinner />\n      </Bullseye>\n    );\n  }\n\n  const details = [\n    { name: 'Name', value: getState().values.name },\n    { name: 'Version', value: getState().initialValues.version + 1 },\n    { name: 'Description', value: getState().values.description },\n  ];\n\n  const output = () => {\n    let outputs = [\n      { name: 'Release', value: releaseMapper[getState().values.release] },\n      {\n        name: 'Output Type',\n        value: imageTypeMapper['rhel-edge-commit'],\n      },\n    ];\n    if (getState().values.imageType.includes('rhel-edge-installer')) {\n      outputs.push({ name: '', value: imageTypeMapper['rhel-edge-installer'] });\n    }\n    return outputs;\n  };\n\n  const registration = [\n    { name: 'Username', value: getState().values['username'] },\n    { name: 'ssh-key', value: getState().values.credentials },\n  ];\n\n  const before = getState().initialValues['selected-packages'];\n  const after = getState().values['selected-packages'];\n  const calcPkgDiff = (arr1, arr2) =>\n    arr1.reduce(\n      (acc, { name }) => acc + (!arr2.some((pkg) => pkg.name === name) ? 1 : 0),\n      0\n    );\n\n  const packages = () => {\n    const pkgs = [\n      {\n        name: 'Added',\n        value: calcPkgDiff(after, before),\n      },\n    ];\n    return isUpdate\n      ? [\n          ...pkgs,\n          { name: 'Removed', value: calcPkgDiff(before, after) },\n          { name: 'Updated', value: 0 },\n        ]\n      : pkgs;\n  };\n\n  return (\n    <Fragment>\n      {hasError && (\n        <Alert\n          variant=\"danger\"\n          title=\"Failed sending the request: Edge API is not available\"\n        />\n      )}\n      <TextContent>\n        <Text>\n          Review the information and click{' '}\n          <Text component={'b'}>Create image</Text> to start the build process.\n        </Text>\n        <ReviewSection\n          title={'Details'}\n          data={details}\n          testid={'review-image-details'}\n        />\n        <ReviewSection\n          title={'Output'}\n          data={output()}\n          testid={'review-image-output'}\n        />\n        {getState().values.imageType.includes('rhel-edge-installer') ? (\n          <ReviewSection\n            title={'Registration'}\n            data={registration}\n            testid={'review-image-registration'}\n          />\n        ) : null}\n        <ReviewSection\n          title={'Packages'}\n          data={packages()}\n          testid={'review-image-packages'}\n        />\n      </TextContent>\n    </Fragment>\n  );\n};\n\nexport default ReviewStep;\n"],"names":["CustomButtons","buttonLabels","cancel","submit","back","useState","isSaving","setIsSaving","useContext","WizardContext","handlePrev","formOptions","Button","variant","type","isDisabled","valid","getState","validating","onClick","onSubmit","values","className","onCancel","propTypes","PropTypes","name","title","buttons","fields","component","PackagesLabel","release","useFormApi","releaseName","undefined","releaseMapper","TextContent","Text","nextStep","componentTypes","label","initialValue","clearedValue","imageType","includes","options","Object","entries","map","value","DEFAULT_RELEASE","validate","validatorTypes","isRequired","imageTypeMapper","helperText","CharacterCount","description","length","placeholder","checkImageName","then","result","ImageExists","Error","message","pattern","threshold","style","paddingRight","Flex","justifyContent","default","FlexItem","resizeOrientation","HelperText","HelperTextItem","EmptyText","text","NoResultsText","heading","body","mapPackagesToOptions","pkgs","pkg","selected","isVisible","Packages","defaultArch","props","change","input","useFieldApi","React","availableOptions","setAvailableOptions","chosenOptions","setChosenOptions","availableInputValue","setAvailableInputValue","enterPressed","setEnterPressed","hasMoreResults","setHasMoreResults","scrollTo","setScrollTo","hasNoSearchResults","setHasNoSearchResults","searchFocused","setSearchFocused","exactMatch","setExactMatch","useEffect","loadedPackages","sortedOptions","availableSearchInput","document","querySelector","addEventListener","handleSearchOnEnter","removeEventListener","handlePackageSearch","scrollToAddedPackages","getPackages","architecture","data","meta","count","isNotChosen","find","option","removeChosenPackages","filter","newPkg","chosenPkg","e","key","stopPropagation","destination","pane","forEach","getElementById","closest","classList","add","setTimeout","remove","scrollTop","scrollHeight","moveSelected","fromAvailable","sourceOptions","destinationOptions","selectedOptions","i","push","splice","findIndex","moveAll","x","buildSearchInput","isAvailable","InputGroup","TextInput","id","onChange","toLowerCase","onFocus","onBlur","validated","InputGroupText","displayPackagesFrom","isChosen","index","DualListSelectorListItem","isSelected","onOptionSelect","_event","newChosen","newAvailable","summary","selectedStatus","totalItemNum","selectedItemNum","DualListSelector","DualListSelectorPane","status","searchInput","DualListSelectorList","height","Divider","inset","DualListSelectorControlsWrapper","DualListSelectorControl","some","tooltipContent","registrationCredsValidator","state","checkbox","errs","password","sshKey","toggleCheckbox","useCallback","checked","event","currentTarget","item","passwordInput","sshKeyInput","FormGroup","isHelperTextBeforeField","hasNoPaddingTop","isStack","Checkbox","isChecked","helperTextInvalid","dirty","error","TextArea","WarningInstallerHelperText","hasIcon","outputHelperText","ImageOutputCheckbox","initialValues","isUpdate","Fragment","TextVariants","target","href","isVisitedLink","touched","reservedUsernames","reservedUsernameValidator","CreateImageWizard","schema","onClose","customComponentMapper","subscription","FormTemplate","showFormControls","formValues","componentMapper","RegistrationCreds","SSHInputField","review","Review","validatorMapper","ReviewSection","testid","Grid","hasGutter","GridItem","span","TextListItem","T","TextListItemVariants","getRegistry","RegistryContext","useSelector","createImageReducer","isLoading","hasError","shallowEqual","registered","register","Bullseye","Spinner","outputs","details","version","registration","credentials","before","after","calcPkgDiff","arr1","arr2","reduce","acc","Alert"],"sourceRoot":""}