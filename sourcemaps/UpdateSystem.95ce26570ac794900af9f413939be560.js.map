{"version":3,"file":"js/UpdateSystem.c0aa0f0ea90580130e07.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Content/content.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Routes/Devices/UpdateSystem.js","webpack:///./src/api/devices/index.js","webpack:///./src/hooks/useApi.js","webpack:///./src/utils/apiWithToast.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n    DrawerColorVariant[\"default\"] = \"default\";\n    DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n    isExpanded: false,\n    isStatic: false,\n    onExpand: () => { },\n    position: 'right',\n    drawerRef: null,\n    drawerContentRef: null,\n    isInline: false\n});\nexport const Drawer = (_a) => {\n    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'right', onExpand = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n    const drawerRef = React.useRef();\n    const drawerContentRef = React.useRef();\n    return (React.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className), ref: drawerRef }, props), children)));\n};\nDrawer.displayName = 'Drawer';\n//# sourceMappingURL=Drawer.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport const DrawerMain = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.drawerMain, className) }, props), children));\n};\nDrawerMain.displayName = 'DrawerMain';\n//# sourceMappingURL=DrawerMain.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerMain } from './DrawerMain';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nexport const DrawerContent = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children, panelContent, colorVariant = DrawerColorVariant.default } = _a, props = __rest(_a, [\"className\", \"children\", \"panelContent\", \"colorVariant\"]);\n    const { drawerContentRef } = React.useContext(DrawerContext);\n    return (React.createElement(DrawerMain, null,\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawerContent, colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, className), ref: drawerContentRef }, props), children),\n        panelContent));\n};\nDrawerContent.displayName = 'DrawerContent';\n//# sourceMappingURL=DrawerContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { useOUIAProps } from '../../helpers';\nexport var TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants || (TextVariants = {}));\nexport const Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: css(isVisitedLink && component === TextVariants.a && styles.modifiers.visited, className) }), children));\n};\nText.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children = null, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import './content.css';\nexport default {\n  \"content\": \"pf-c-content\",\n  \"modifiers\": {\n    \"visited\": \"pf-m-visited\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","import './drawer.css';\nexport default {\n  \"drawer\": \"pf-c-drawer\",\n  \"drawerActions\": \"pf-c-drawer__actions\",\n  \"drawerBody\": \"pf-c-drawer__body\",\n  \"drawerClose\": \"pf-c-drawer__close\",\n  \"drawerContent\": \"pf-c-drawer__content\",\n  \"drawerHead\": \"pf-c-drawer__head\",\n  \"drawerMain\": \"pf-c-drawer__main\",\n  \"drawerPanel\": \"pf-c-drawer__panel\",\n  \"drawerPanelMain\": \"pf-c-drawer__panel-main\",\n  \"drawerSection\": \"pf-c-drawer__section\",\n  \"drawerSplitter\": \"pf-c-drawer__splitter\",\n  \"drawerSplitterHandle\": \"pf-c-drawer__splitter-handle\",\n  \"modifiers\": {\n    \"panelBottom\": \"pf-m-panel-bottom\",\n    \"inline\": \"pf-m-inline\",\n    \"noBorder\": \"pf-m-no-border\",\n    \"resizable\": \"pf-m-resizable\",\n    \"static\": \"pf-m-static\",\n    \"panelLeft\": \"pf-m-panel-left\",\n    \"expanded\": \"pf-m-expanded\",\n    \"resizing\": \"pf-m-resizing\",\n    \"noBackground\": \"pf-m-no-background\",\n    \"light_200\": \"pf-m-light-200\",\n    \"noPadding\": \"pf-m-no-padding\",\n    \"padding\": \"pf-m-padding\",\n    \"vertical\": \"pf-m-vertical\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"width_100\": \"pf-m-width-100\",\n    \"width_25OnLg\": \"pf-m-width-25-on-lg\",\n    \"width_33OnLg\": \"pf-m-width-33-on-lg\",\n    \"width_50OnLg\": \"pf-m-width-50-on-lg\",\n    \"width_66OnLg\": \"pf-m-width-66-on-lg\",\n    \"width_75OnLg\": \"pf-m-width-75-on-lg\",\n    \"width_100OnLg\": \"pf-m-width-100-on-lg\",\n    \"width_25OnXl\": \"pf-m-width-25-on-xl\",\n    \"width_33OnXl\": \"pf-m-width-33-on-xl\",\n    \"width_50OnXl\": \"pf-m-width-50-on-xl\",\n    \"width_66OnXl\": \"pf-m-width-66-on-xl\",\n    \"width_75OnXl\": \"pf-m-width-75-on-xl\",\n    \"width_100OnXl\": \"pf-m-width-100-on-xl\",\n    \"width_25On_2xl\": \"pf-m-width-25-on-2xl\",\n    \"width_33On_2xl\": \"pf-m-width-33-on-2xl\",\n    \"width_50On_2xl\": \"pf-m-width-50-on-2xl\",\n    \"width_66On_2xl\": \"pf-m-width-66-on-2xl\",\n    \"width_75On_2xl\": \"pf-m-width-75-on-2xl\",\n    \"width_100On_2xl\": \"pf-m-width-100-on-2xl\",\n    \"inlineOnLg\": \"pf-m-inline-on-lg\",\n    \"staticOnLg\": \"pf-m-static-on-lg\",\n    \"inlineOnXl\": \"pf-m-inline-on-xl\",\n    \"staticOnXl\": \"pf-m-static-on-xl\",\n    \"inlineOn_2xl\": \"pf-m-inline-on-2xl\",\n    \"staticOn_2xl\": \"pf-m-static-on-2xl\"\n  },\n  \"pageMain\": \"pf-c-page__main\",\n  \"themeDark\": \"pf-theme-dark\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React, { useState } from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Button,\n  Card,\n  CardBody,\n  Divider,\n  Page,\n  PageSection,\n  Skeleton,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport { getDeviceUpdates, updateSystem } from '../../api/devices';\nimport { distributionMapper } from '../../constants';\nimport { useDispatch } from 'react-redux';\nimport { routes as paths } from '../../constants/routeMapper';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useApi from '../../hooks/useApi';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  headerCol,\n} from '@patternfly/react-table';\nimport {\n  useParams,\n  useHistory,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { createLink } from '../../utils';\n\nconst filters = [\n  { label: 'Version', type: 'text' },\n  { label: 'Release', type: 'text' },\n  { label: 'Additional packages', type: 'text' },\n  { label: 'All packages', type: 'text' },\n  { label: 'Systems running', type: 'text' },\n  { label: 'Created', type: 'text' },\n];\n\nconst columns = [\n  {\n    title: 'Version',\n    cellTransforms: [headerCol('selectable-radio')],\n  },\n  { title: 'Release' },\n  { title: 'Additional packages' },\n  { title: 'All packages' },\n  { title: 'Systems running' },\n  { title: 'Created' },\n];\n\nconst CurrentVersion = ({ image }) => {\n  const current_version = [\n    {\n      version: image.cells[0],\n      release: image.cells[1],\n      additionalPackages: image.cells[2],\n      allPackages: image.cells[3],\n      systemsRunning: image.cells[4],\n      created: image.cells[5],\n    },\n  ];\n  const columnNames = {\n    version: 'Version',\n    release: 'Release',\n    additionalPackages: 'Additional packages',\n    allPackages: 'All packages',\n    systemsRunning: 'Systems running',\n    created: 'Created',\n  };\n\n  return (\n    <>\n      <TextContent>\n        <Title headingLevel=\"h2\">\n          <Text>Current version</Text>\n        </Title>\n      </TextContent>\n      <TableComposable\n        aria-label=\"Current version table\"\n        variant={'compact'}\n        borders={false}\n      >\n        <Thead>\n          <Tr style={{ borderBottomStyle: 'hidden' }}>\n            <Th style={{ width: '3%' }}></Th>\n            <Th>{columnNames.version}</Th>\n            <Th>{columnNames.release}</Th>\n            <Th>{columnNames.additionalPackages}</Th>\n            <Th>{columnNames.allPackages}</Th>\n            <Th>{columnNames.systemsRunning}</Th>\n            <Th>{columnNames.created}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {current_version.map((version, index) => (\n            <Tr key={index}>\n              <Td></Td>\n              <Td dataLabel={columnNames.version}>{version.version}</Td>\n              <Td dataLabel={columnNames.release}>{version.release}</Td>\n              <Td dataLabel={columnNames.additionalPackages}>\n                {version.additionalPackages}\n              </Td>\n              <Td dataLabel={columnNames.allPackages}>{version.allPackages}</Td>\n              <Td dataLabel={columnNames.systemsRunning}>\n                {version.systemsRunning}\n              </Td>\n              <Td dataLabel={columnNames.created}>{version.created}</Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    </>\n  );\n};\n\nCurrentVersion.propTypes = {\n  image: PropTypes.object,\n};\n\nconst UpdateSystemMain = ({\n  data,\n  fetchDevices,\n  isLoading,\n  hasError,\n  historyProp,\n  navigateProp,\n  locationProp,\n  routeMatchProp,\n}) => {\n  const device = data?.Device;\n  const [selectedVersion, setSelectedVersion] = useState(null);\n  const [selectedCommitID, setSelectedCommitID] = useState(null);\n  const [isUpdateSubmitted, setIsUpdateSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n  const { pathname, search } = locationProp ? locationProp() : useLocation();\n  const match = routeMatchProp ? routeMatchProp() : null; //useRouteMatch();\n  const setUpdateEvent = (value) => {\n    setSelectedVersion(value.cells[0]);\n    setSelectedCommitID(value);\n  };\n\n  const handleUpdateEvent = async () => {\n    setIsUpdateSubmitted(true);\n    const statusMessages = {\n      onInfo: {\n        title: 'Updating system',\n        description: ` ${selectedCommitID.deviceName} was added to the queue.`,\n      },\n      onError: {\n        title: 'Error',\n        description: `Failed to update the selected system(s)`,\n      },\n    };\n\n    await apiWithToast(\n      dispatch,\n      () =>\n        updateSystem({\n          CommitID: selectedCommitID.commitID,\n          DevicesUUID: [selectedCommitID.deviceUUID],\n        }),\n      statusMessages\n    );\n\n    handleClose();\n    setIsUpdateSubmitted(false);\n  };\n\n  const handleClose = () => {\n    // Return either to the system detail, group detail, or inventory page,\n    // depending on path and from_details param\n    let destPath = paths.inventory;\n    if (match.path === paths.inventoryDetailUpdate) {\n      destPath = search.includes('from_details=true')\n        ? paths.inventoryDetail\n        : paths.inventory;\n    }\n    if (match.path === paths.fleetManagementSystemDetailUpdate) {\n      destPath = search.includes('from_details=true')\n        ? paths.fleetManagementSystemDetail\n        : paths.fleetManagementDetail;\n    }\n\n    // Construct destination path\n    const pathLen = destPath.split('/').length;\n    const dest = pathname.split('/').slice(0, pathLen).join('/');\n    if (navigateProp) {\n      navigate({ ...dest });\n    } else {\n      history.push({ pathname: dest });\n    }\n  };\n\n  const buildRow = (image) => {\n    const version = image?.Version;\n    const release = distributionMapper[image?.Distribution];\n    const additionalPackages = image?.Packages?.length || 0;\n    const allPackages = image?.TotalPackages;\n    const systemsRunning = image?.SystemsRunning;\n    const created = (\n      <span>\n        <DateFormat type=\"relative\" date={image?.CreatedAt} />\n      </span>\n    );\n    const commitID = image?.CommitID;\n    const deviceUUID = device?.UUID;\n    const deviceName = device?.DeviceName;\n    return {\n      cells: [\n        version,\n        release,\n        additionalPackages,\n        allPackages,\n        systemsRunning,\n        created,\n      ],\n      commitID,\n      deviceUUID,\n      deviceName,\n      selected: selectedVersion === version,\n    };\n  };\n  const currentImage = buildRow(data?.ImageInfo?.Image);\n  const newImages = data?.ImageInfo?.UpdatesAvailable?.map((update) =>\n    buildRow(update?.Image)\n  );\n\n  return (\n    <Page>\n      <PageSection isWidthLimited>\n        <Card>\n          <CardBody>\n            <CurrentVersion image={currentImage} />\n            <TextContent>\n              <Title headingLevel=\"h2\">\n                <Text className=\"pf-u-mt-md\">Select version to update to</Text>\n              </Title>\n            </TextContent>\n            <>\n              <GeneralTable\n                historyProp={historyProp}\n                navigateProp={navigateProp}\n                locationProp={locationProp}\n                className=\"pf-u-mt-sm\"\n                apiFilterSort={true}\n                isUseApi={true}\n                loadTableData={fetchDevices}\n                filters={filters}\n                tableData={{\n                  count: data?.ImageInfo?.Count,\n                  isLoading,\n                  hasError,\n                }}\n                columnNames={columns}\n                rows={newImages}\n                defaultSort={{ index: 0, direction: 'desc' }}\n                hasRadio={true}\n                setRadioSelection={setUpdateEvent}\n                isFooterFixed={true}\n              />\n              <div\n                style={{\n                  background: 'white',\n                  left: '200px',\n                  position: 'fixed',\n                  height: '90px',\n                  width: '100%',\n                  bottom: '0px',\n                  paddingLeft: '80px',\n                  paddingBottom: '0px',\n                }}\n              >\n                <Divider\n                  style={{\n                    paddingBottom: '25px',\n                    width: '100%',\n                    paddingLeft: 0,\n                  }}\n                />\n\n                <Button\n                  style={{ left: '60px' }}\n                  key=\"confirm\"\n                  variant=\"primary\"\n                  isDisabled={!selectedVersion || isUpdateSubmitted}\n                  onClick={() => handleUpdateEvent()}\n                >\n                  Update system\n                </Button>\n                <Button\n                  style={{ left: '70px' }}\n                  key=\"cancel\"\n                  variant=\"link\"\n                  onClick={handleClose}\n                >\n                  Cancel\n                </Button>\n              </div>\n            </>\n          </CardBody>\n        </Card>\n      </PageSection>\n    </Page>\n  );\n};\n\nUpdateSystemMain.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\n  historyProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  routeMatchProp: PropTypes.func,\n  fetchDevices: PropTypes.func,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n};\n\nconst UpdateSystem = ({\n  inventoryId,\n  historyProp,\n  navigateProp,\n  locationProp,\n  routeMatchProp,\n  paramsProp,\n}) => {\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const { deviceId, groupId } = paramsProp\n    ? paramsProp()\n    : useParams\n    ? useParams()\n    : null;\n  const currentId = inventoryId ? inventoryId : deviceId;\n  const currentInventoryPath = historyProp ? '/edge' : paths.inventory;\n  const [{ data, isLoading, hasError }, fetchDevices] = useApi({\n    api: getDeviceUpdates,\n    id: currentId,\n    tableReload: true,\n  });\n\n  const device = data?.Device;\n  const groupName = groupId\n    ? device?.DevicesGroups?.find((group) => group.ID.toString() === groupId)\n        ?.Name\n    : null;\n\n  return (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        {!groupName ? (\n          <Breadcrumb ouiaId=\"systems-list\">\n            <BreadcrumbItem>\n              {createLink({\n                pathname:\n                  currentInventoryPath === '/edge' ? '/' : currentInventoryPath,\n                linkText: 'Systems',\n                history,\n              })}\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              {createLink({\n                pathname: `${currentInventoryPath}/${currentId}/`,\n                linkText: device?.DeviceName || <Skeleton width=\"100px\" />,\n                history,\n              })}\n            </BreadcrumbItem>\n            <BreadcrumbItem>Update</BreadcrumbItem>\n          </Breadcrumb>\n        ) : (\n          <Breadcrumb ouiaId=\"groups-list\">\n            <BreadcrumbItem>\n              {createLink({\n                pathname: paths.fleetManagement,\n                linkText: 'Groups',\n                history,\n              })}\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              {createLink({\n                pathname: `${paths.fleetManagement}/${groupId}`,\n                linkText: groupName || <Skeleton width=\"100px\" />,\n                history,\n              })}\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              {createLink({\n                pathname: `${paths.fleetManagement}/${groupId}/systems/${currentId}/`,\n                linkText: device?.DeviceName,\n                history,\n              })}\n            </BreadcrumbItem>\n            <BreadcrumbItem>Update</BreadcrumbItem>\n          </Breadcrumb>\n        )}\n        <PageHeaderTitle title=\"Update\" />\n        <TextContent className=\"pf-u-mt-md\">\n          {device?.DeviceName ? (\n            <Text>\n              {'Update '}\n              <strong>{device?.DeviceName}</strong>\n              {' to a newer version of '}\n              <strong>{data?.ImageInfo?.Image?.Name}</strong>\n              {' by selecting a new version from the table below.'}\n            </Text>\n          ) : (\n            <Skeleton width=\"100px\" />\n          )}\n        </TextContent>\n      </PageHeader>\n      <section className=\"edge-devices pf-l-page__main-section pf-c-page__main-section\">\n        <UpdateSystemMain\n          data={data}\n          fetchDevices={fetchDevices}\n          isLoading={isLoading}\n          hasError={hasError}\n          navigateProp={navigateProp}\n          histor\n          yProp={historyProp}\n          locationProp={locationProp}\n          routeMatchProp={routeMatchProp}\n        />\n      </section>\n    </>\n  );\n};\n\nUpdateSystem.propTypes = {\n  historyProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  routeMatchProp: PropTypes.func,\n  paramsProp: PropTypes.func,\n  inventoryId: PropTypes.string,\n};\n\nexport default UpdateSystem;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getDevice = (id) => {\n  return instance.get(`${EDGE_API}/devices/${id}`);\n};\n\nexport const getDeviceUpdates = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/${id}?${q}`);\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useApi = ({ api, id = null, statusMessages, tableReload = false }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const hasSuccess = statusMessages?.onSuccess;\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async (query = '') => {\n    setIsLoading(true);\n    try {\n      const data = await api({ id, query });\n      setData(data);\n\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n    } catch (err) {\n      setHasError(true);\n\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n        }),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!tableReload) {\n      fetchData();\n    }\n  }, []);\n\n  return [{ data, isLoading, hasError }, fetchData];\n};\n\nexport default useApi;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages, notificationProp) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n  const hasWarning = statusMessages?.onWarning;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasInfo) {\n        if (notificationProp) {\n          notificationProp.hasInfo(statusMessages.onInfo);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              ...statusMessages.onInfo,\n            }),\n          });\n        }\n      }\n      if (hasSuccess) {\n        if (notificationProp) {\n          notificationProp.hasSuccess(statusMessages.onSuccess);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'success',\n              ...statusMessages.onSuccess,\n            }),\n          });\n        }\n      }\n      if (hasWarning) {\n        if (notificationProp) {\n          notificationProp.hasWarning(statusMessages.onWarning);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'warning',\n              ...statusMessages.onWarning,\n            }),\n          });\n        }\n      }\n      return response;\n    } catch (err) {\n      if (notificationProp) {\n        notificationProp.err(statusMessages.onError, err);\n      } else {\n        dispatch({\n          ...addNotification({\n            variant: 'danger',\n            ...statusMessages.onError,\n            // Add error message from API, if present\n            description: err?.Title\n              ? `${statusMessages.onError.description}: ${err.Title}`\n              : statusMessages.onError.description,\n          }),\n        });\n      }\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n"],"names":["DrawerColorVariant","DrawerContext","isExpanded","isStatic","onExpand","position","drawerRef","drawerContentRef","isInline","Drawer","_a","className","children","props","__rest","Provider","value","Object","assign","ref","displayName","DrawerMain","DrawerContent","panelContent","colorVariant","TextVariants","Text","component","p","isVisitedLink","ouiaId","ouiaSafe","Component","ouiaProps","a","TextContent","isVisited","__assign","t","s","i","n","arguments","length","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","addTooltip","_b","dateObj","dateType","toString","filters","label","columns","title","cellTransforms","headerCol","CurrentVersion","image","current_version","version","cells","release","additionalPackages","allPackages","systemsRunning","created","columnNames","headingLevel","TableComposable","variant","borders","Thead","Tr","style","borderBottomStyle","Th","width","Tbody","map","index","key","Td","dataLabel","propTypes","PropTypes","UpdateSystemMain","data","fetchDevices","isLoading","hasError","historyProp","navigateProp","locationProp","routeMatchProp","device","Device","useState","selectedVersion","setSelectedVersion","selectedCommitID","setSelectedCommitID","isUpdateSubmitted","setIsUpdateSubmitted","dispatch","useDispatch","history","useHistory","navigate","useNavigate","useLocation","pathname","search","match","handleUpdateEvent","statusMessages","onInfo","deviceName","onError","apiWithToast","updateSystem","CommitID","commitID","DevicesUUID","deviceUUID","handleClose","destPath","paths","path","includes","pathLen","dest","join","push","buildRow","Version","distributionMapper","Distribution","Packages","TotalPackages","SystemsRunning","CreatedAt","UUID","DeviceName","selected","currentImage","ImageInfo","Image","newImages","UpdatesAvailable","update","isWidthLimited","apiFilterSort","isUseApi","loadTableData","tableData","count","Count","rows","defaultSort","direction","hasRadio","setRadioSelection","isFooterFixed","background","left","height","bottom","paddingLeft","paddingBottom","isDisabled","onClick","UpdateSystem","inventoryId","paramsProp","useParams","deviceId","groupId","currentId","currentInventoryPath","useApi","api","getDeviceUpdates","id","tableReload","groupName","DevicesGroups","find","group","ID","Name","createLink","linkText","histor","yProp","getInventory","query","q","getTableParams","instance","EDGE_API","getDevice","payload","setData","setIsLoading","setHasError","hasSuccess","onSuccess","fetchData","addNotification","useEffect","notificationProp","hasInfo","hasWarning","onWarning","response","err","Title"],"sourceRoot":""}