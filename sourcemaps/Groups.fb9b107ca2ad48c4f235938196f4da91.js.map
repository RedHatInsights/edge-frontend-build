{"version":3,"file":"js/Groups.1185a8c6f4ffda37c5ee.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/filter-icon.js","webpack:///./src/Routes/Groups/CreateGroupModal.js","webpack:///./src/Routes/Groups/DeleteGroupModal.js","webpack:///./src/Routes/Groups/GroupTable.js","webpack:///./src/Routes/Groups/Groups.js","webpack:///./src/Routes/Groups/RenameGroupModal.js","webpack:///./src/api/groups/index.js","webpack:///./src/components/Modal.js","webpack:///./src/constants/features.js","webpack:///./src/hooks/useApi.js","webpack:///./src/hooks/useInventoryGroups.js","webpack:///./src/utils/apiWithToast.js","webpack:///./node_modules/lodash/_baseTrim.js","webpack:///./node_modules/lodash/_trimmedEndIndex.js","webpack:///./node_modules/lodash/debounce.js","webpack:///./node_modules/lodash/flatten.js","webpack:///./node_modules/lodash/groupBy.js","webpack:///./node_modules/lodash/now.js","webpack:///./node_modules/lodash/toNumber.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const FilterIconConfig = {\n  name: 'FilterIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M487.976 0H24.028C2.71 0-8.047 25.866 7.058 40.971L192 225.941V432c0 7.831 3.821 15.17 10.237 19.662l80 55.98C298.02 518.69 320 507.493 320 487.98V225.941l184.947-184.97C520.021 25.896 509.338 0 487.976 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const FilterIcon = createIcon(FilterIconConfig);\n\nexport default FilterIcon;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport {\n  createGroup,\n  createInventoryGroup,\n  addDevicesToGroup,\n  validateGroupName,\n  validateInventoryGroupName,\n  addDevicesToInventoryGroup,\n} from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\nimport useInventoryGroups from '../../hooks/useInventoryGroups';\n\nconst asyncGroupNameValidation = async (value = '') => {\n  // do not fire validation request for empty name\n  if (value.length === 0) {\n    return undefined;\n  }\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    // async validator has to throw error, not return it\n    throw 'Group name already exists';\n  }\n};\n\nconst asyncInventoryGroupNameValidation = async (value = '') => {\n  // do not fire validation request for empty name\n  if (value.length === 0) {\n    return undefined;\n  }\n  const resp = await validateInventoryGroupName(value);\n  if (resp.results.length > 0 && resp.results[0].name === value) {\n    // async validator has to throw error, not return it\n    throw 'Group name already exists';\n  }\n};\n\nconst validatorMapper = {\n  groupName: () => asyncGroupNameValidation,\n};\n\nconst inventoryValidatorMapper = {\n  groupName: () => asyncInventoryGroupNameValidation,\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      autoFocus: true,\n      validate: [\n        // async validator has to be first in the list\n        { type: 'groupName' },\n        { type: validatorTypes.REQUIRED },\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n      ],\n    },\n  ],\n};\n\nconst CreateGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  deviceIds,\n  reloadData,\n}) => {\n  const dispatch = useDispatch();\n\n  const inventoryGroupsEnabled = useInventoryGroups(false);\n\n  const handleCreateGroup = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${values.name} has been created successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to create group' },\n    };\n\n    let createGroupFunc;\n    if (inventoryGroupsEnabled) {\n      createGroupFunc = () => createInventoryGroup(values);\n    } else {\n      createGroupFunc = () => createGroup(values);\n    }\n    return apiWithToast(dispatch, createGroupFunc, statusMessages);\n  };\n\n  const handleAddDevicesToNewGroup = async (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `System(s) have been added to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to add system to group' },\n    };\n\n    let addDevicesToGroupFunc;\n    if (inventoryGroupsEnabled) {\n      const { id } = await handleCreateGroup(values);\n      addDevicesToGroupFunc = () => addDevicesToInventoryGroup(id, deviceIds);\n    } else {\n      const { ID } = await handleCreateGroup(values);\n      addDevicesToGroupFunc = () => addDevicesToGroup(parseInt(ID), deviceIds);\n    }\n    apiWithToast(dispatch, addDevicesToGroupFunc, statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Create group\"\n      submitLabel=\"Create\"\n      schema={createGroupSchema}\n      onSubmit={deviceIds ? handleAddDevicesToNewGroup : handleCreateGroup}\n      reloadData={reloadData}\n      validatorMapper={\n        inventoryGroupsEnabled ? inventoryValidatorMapper : validatorMapper\n      }\n    />\n  );\n};\n\nexport default CreateGroupModal;\n\nCreateGroupModal.propTypes = {\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n  deviceIds: PropTypes.array,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { deleteGroupById } from '../../api/groups';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport { Text } from '@patternfly/react-core';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst description = (name) => (\n  <Text>\n    <strong>{name} </strong>and all its data will be permanently deleted.\n    Associated systems will be removed from the group but will not be deleted.\n  </Text>\n);\n\nconst schema = (name) => ({\n  fields: [\n    {\n      component: componentTypes.PLAIN_TEXT,\n      name: 'warning-message',\n      label: description(name),\n    },\n    {\n      component: componentTypes.CHECKBOX,\n      name: 'confirmation',\n      label: 'I understand that this action cannot be undone.',\n      validate: [{ type: validatorTypes.REQUIRED }],\n    },\n  ],\n});\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst DeleteGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleDeleteGroup = () => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been removed successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to delete group' },\n    };\n    apiWithToast(dispatch, () => deleteGroupById(id), statusMessages);\n  };\n\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Delete group\"\n      titleIconVariant={WarningIcon}\n      variant=\"danger\"\n      submitLabel=\"Delete\"\n      schema={schema(name)}\n      onSubmit={handleDeleteGroup}\n      reloadData={reloadData}\n    />\n  );\n};\n\nDeleteGroupModal.propTypes = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default DeleteGroupModal;\n","import React, { useState, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Bullseye, Spinner, Tooltip } from '@patternfly/react-core';\nimport { useFeatureFlags } from '../../utils';\n\nconst UpdateDeviceModal = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateDeviceModal\" */ '../Devices/UpdateDeviceModal'\n  )\n);\n\nconst filters = [\n  {\n    label: 'Name',\n    type: 'text',\n  },\n  // {\n  //   label: 'Image',\n  //   type: 'text',\n  // },\n];\n\nconst columns = [\n  { title: 'Name', type: 'name', sort: true },\n  { title: 'Systems', type: 'name', sort: false },\n  { title: 'Image', type: 'name', sort: false },\n];\n\nconst GroupTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  handleCreateModal,\n  handleRenameModal,\n  handleDeleteModal,\n  hasModalSubmitted,\n  setHasModalSubmitted,\n  fetchGroups,\n}) => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const [updateModal, setUpdateModal] = useState({\n    isOpen: false,\n    deviceData: null,\n    imageData: null,\n  });\n\n  const actionResolver = (rowData) => {\n    if (!rowData?.rowInfo) return [];\n    const { id, title, devices, devicesImageInfo } = rowData.rowInfo;\n    const hasUpdate = devicesImageInfo?.some((image) => image.UpdateAvailable);\n\n    return (\n      id && [\n        {\n          title: 'Rename',\n          onClick: () => handleRenameModal(id, title),\n        },\n        {\n          title: 'Delete',\n          onClick: () => handleDeleteModal(id, title),\n        },\n        {\n          title: 'Update',\n          onClick: () =>\n            setUpdateModal((prevState) => ({\n              ...prevState,\n              deviceData: devices.map((device) => ({\n                id: device.UUID,\n                display_name: device.Name,\n              })),\n              imageId: devices.find((device) => device?.ImageID).ImageID,\n              isOpen: true,\n            })),\n          isDisabled:\n            devices.length > 0\n              ? !(rowData?.rowInfo?.hasValidUpdate && hasUpdate)\n              : true,\n        },\n      ]\n    );\n  };\n\n  const buildRows = data?.map((rowData) => {\n    const { ID, Name, Devices } = rowData.DeviceGroup;\n    let { DevicesImageInfo } = rowData;\n    if (!DevicesImageInfo) {\n      DevicesImageInfo = [];\n    }\n    const systems = Devices ?? [];\n    const image = (\n      <div>\n        <Tooltip\n          content={\n            <div>\n              {DevicesImageInfo.map((device, index) => (\n                <p key={index}>{device.Name}</p>\n              ))}\n            </div>\n          }\n        >\n          <span>Multiple images</span>\n        </Tooltip>\n      </div>\n    );\n\n    return {\n      rowInfo: {\n        id: ID,\n        title: Name,\n        image:\n          DevicesImageInfo.length === 0\n            ? '-'\n            : DevicesImageInfo.length > 1\n            ? 'Multiple images'\n            : DevicesImageInfo[0]?.Name,\n        devicesImageInfo: rowData.DevicesImageInfo,\n        devices: Devices,\n        hasValidUpdate: rowData?.DeviceGroup?.ValidUpdate,\n      },\n      cells: [\n        {\n          title: <Link to={`${paths.fleetManagement}/${ID}`}>{Name}</Link>,\n        },\n        {\n          title: systems.length,\n        },\n        {\n          title:\n            DevicesImageInfo.length === 0\n              ? '-'\n              : DevicesImageInfo.length > 1\n              ? image\n              : DevicesImageInfo[0]?.Name,\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchGroups}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columns}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        emptyFilterState={{\n          title: 'No matching groups found',\n          body: 'To continue, edit your filter settings and try again',\n        }}\n        toolbarButtons={\n          hideCreateGroupsEnabled\n            ? []\n            : [\n                {\n                  title: 'Create group',\n                  click: handleCreateModal,\n                },\n              ]\n        }\n        hasModalSubmitted={hasModalSubmitted}\n        setHasModalSubmitted={setHasModalSubmitted}\n      />\n      {updateModal.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateDeviceModal\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateModal((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            setUpdateModal={setUpdateModal}\n            updateModal={updateModal}\n            refreshTable={async () => {\n              await fetchGroups();\n              setHasModalSubmitted(true);\n            }}\n          />\n        </Suspense>\n      )}\n    </>\n  );\n};\n\nGroupTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  closeModal: PropTypes.func,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  handleRenameModal: PropTypes.func,\n  handleDeleteModal: PropTypes.func,\n  handleCreateModal: PropTypes.func,\n  hasModalSubmitted: PropTypes.bool,\n  setHasModalSubmitted: PropTypes.func,\n  fetchGroups: PropTypes.func,\n};\n\nexport default GroupTable;\n","import React, { useEffect, useState } from 'react';\nimport { Flex } from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\nimport GroupTable from './GroupTable';\nimport Empty from '../../components/Empty';\nimport { getGroups } from '../../api/groups';\nimport CreateGroupModal from './CreateGroupModal';\nimport RenameGroupModal from './RenameGroupModal';\nimport DeleteGroupModal from './DeleteGroupModal';\nimport useApi from '../../hooks/useApi';\nimport { useLocation } from 'react-router-dom';\nimport { emptyStateNoFilters, useFeatureFlags } from '../../utils';\n\nconst Groups = () => {\n  const hideCreateGroupsEnabled = useFeatureFlags(\n    'edge-management.hide-create-group'\n  );\n  const { search } = useLocation();\n  const [response, fetchGroups] = useApi({\n    api: getGroups,\n    tableReload: true,\n  });\n  const chrome = useChrome();\n  const { data, isLoading, hasError } = response;\n\n  const [modalState, setModalState] = useState({ id: null, name: '' });\n  const [isCreateModalOpen, setIsCreateModalOpen] = useState(false);\n  const [isRenameModalOpen, setIsRenameModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const handleRenameModal = (id, name) => {\n    setModalState({ id, name });\n    setIsRenameModalOpen(true);\n  };\n\n  const handleDeleteModal = (id, name) => {\n    setModalState({ id, name });\n    setIsDeleteModalOpen(true);\n  };\n\n  const reloadData = async () => {\n    await fetchGroups();\n    setHasModalSubmitted(true);\n  };\n\n  useEffect(() => {\n    chrome?.updateDocumentTitle?.('Groups - Inventory | Edge management');\n  }, [chrome]);\n\n  return (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Groups\" />\n      </PageHeader>\n      <section className=\"edge-groups pf-l-page__main-section pf-c-page__main-section\">\n        {!emptyStateNoFilters(isLoading, data?.count, search) ? (\n          <GroupTable\n            data={data?.data || []}\n            count={data?.count}\n            isLoading={isLoading}\n            hasError={hasError}\n            handleRenameModal={handleRenameModal}\n            handleDeleteModal={handleDeleteModal}\n            handleCreateModal={() => setIsCreateModalOpen(true)}\n            hasModalSubmitted={hasModalSubmitted}\n            setHasModalSubmitted={setHasModalSubmitted}\n            fetchGroups={fetchGroups}\n          />\n        ) : (\n          <Flex justifyContent={{ default: 'justifyContentCenter' }}>\n            {hideCreateGroupsEnabled}?{}:\n            <Empty\n              icon=\"plus\"\n              title=\"Create a system group\"\n              body=\"Create system groups to help manage your systems more effectively.\"\n              primaryAction={{\n                text: 'Create group',\n                click: () => setIsCreateModalOpen(true),\n              }}\n              secondaryActions={[\n                {\n                  type: 'link',\n                  title: 'Learn more about system groups',\n                  link: 'https://access.redhat.com/documentation/en-us/edge_management/2022/html-single/working_with_systems_in_the_edge_management_application/index',\n                },\n              ]}\n            />\n            {}\n          </Flex>\n        )}\n      </section>\n\n      {isCreateModalOpen && (\n        <CreateGroupModal\n          isModalOpen={isCreateModalOpen}\n          setIsModalOpen={setIsCreateModalOpen}\n          reloadData={reloadData}\n        />\n      )}\n      {isRenameModalOpen && (\n        <RenameGroupModal\n          isModalOpen={isRenameModalOpen}\n          setIsModalOpen={setIsRenameModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n      {isDeleteModalOpen && (\n        <DeleteGroupModal\n          isModalOpen={isDeleteModalOpen}\n          setIsModalOpen={setIsDeleteModalOpen}\n          reloadData={reloadData}\n          modalState={modalState}\n        />\n      )}\n    </>\n  );\n};\n\nexport default Groups;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport Modal from '../../components/Modal';\nimport { updateGroupById, validateGroupName } from '../../api/groups';\nimport { nameValidator } from '../../utils';\nimport apiWithToast from '../../utils/apiWithToast';\nimport { useDispatch } from 'react-redux';\n\nconst asyncGroupNameValidation = async (value) => {\n  const resp = await validateGroupName(value);\n  if (resp.data.isValid) {\n    return 'Group name already exists';\n  }\n};\n\nconst createGroupSchema = {\n  fields: [\n    {\n      component: componentTypes.TEXT_FIELD,\n      name: 'name',\n      label: 'Group name',\n      helperText:\n        'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n      isRequired: true,\n      validate: [\n        { type: validatorTypes.REQUIRED },\n\n        { type: validatorTypes.MAX_LENGTH, threshold: 50 },\n        nameValidator,\n        asyncGroupNameValidation,\n      ],\n    },\n  ],\n};\n\nconst RenameGroupModal = ({\n  isModalOpen,\n  setIsModalOpen,\n  reloadData,\n  modalState,\n}) => {\n  const { id, name } = modalState;\n  const dispatch = useDispatch();\n\n  const handleRenameModal = (values) => {\n    const statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: `${name} has been renamed to ${values.name} successfully`,\n      },\n      onError: { title: 'Error', description: 'Failed to rename group' },\n    };\n    apiWithToast(dispatch, () => updateGroupById(id, values), statusMessages);\n  };\n  return (\n    <Modal\n      isOpen={isModalOpen}\n      closeModal={() => setIsModalOpen(false)}\n      title=\"Rename group\"\n      submitLabel=\"Save\"\n      schema={createGroupSchema}\n      initialValues={modalState}\n      onSubmit={handleRenameModal}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRenameGroupModal.propTypes = {\n  id: PropTypes.number,\n  modalState: PropTypes.object,\n  isModalOpen: PropTypes.bool,\n  setIsModalOpen: PropTypes.func,\n  reloadData: PropTypes.func,\n};\nexport default RenameGroupModal;\n","import { EDGE_API, INVENTORY_API_BASE, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const createGroup = (payload) => {\n  return instance.post(`${EDGE_API}/device-groups/`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const createInventoryGroup = (payload) => {\n  return instance.post(`${INVENTORY_API_BASE}/groups`, { name: payload.name });\n};\n\nexport const getGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups?${q}`);\n};\n\nexport const getInventoryGroups = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${INVENTORY_API_BASE}/groups?${q}`);\n};\n\nexport const getGroupById = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/device-groups/${id}/view?${q}`);\n};\n\nexport const updateGroupById = (id, payload) => {\n  return instance.put(`${EDGE_API}/device-groups/${id}`, {\n    Name: payload.name,\n    Type: 'static',\n  });\n};\n\nexport const deleteGroupById = (id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${id}`);\n};\n\nexport const addDevicesToGroup = (groupId, devices) => {\n  return instance.post(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    ID: groupId,\n    Devices: devices,\n  });\n};\n\nexport const addDevicesToInventoryGroup = (groupId, devices) => {\n  const devicesIDS = [];\n  devices.forEach((device) => devicesIDS.push(device.UUID));\n\n  return instance.post(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts`,\n    devicesIDS\n  );\n};\n\nexport const removeDevicesFromGroup = (groupId, devices) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices`, {\n    data: {\n      ID: groupId,\n      Devices: devices,\n    },\n  });\n};\n\nexport const removeDevicesFromInventoryGroup = (groupId, devices) => {\n  return instance.delete(\n    `${INVENTORY_API_BASE}/groups/${groupId}/hosts/` + devices.join(',')\n  );\n};\n\nexport const removeDeviceFromGroupById = (groupId, id) => {\n  return instance.delete(`${EDGE_API}/device-groups/${groupId}/devices/${id}`);\n};\n\nexport const validateGroupName = (name) => {\n  return instance.get(`${EDGE_API}/device-groups/checkName/${name}`);\n};\n\nexport const getEnforceEdgeGroups = () => {\n  return instance.get(`${EDGE_API}/device-groups/enforce-edge-groups`);\n};\n\nexport const validateInventoryGroupName = (name) => {\n  return instance.get(\n    `${INVENTORY_API_BASE}/groups?name=${name}&order_by=name&order_how=ASC`\n  );\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n  validatorMapper,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        validatorMapper={validatorMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  validatorMapper: PropTypes.object,\n};\n\nexport default RepoModal;\n","export const FEATURE_PARITY_INVENTORY_GROUPS =\n  'edgeParity.inventory-groups-enabled';\n\nexport const FEATURE_HIDE_GROUP_ACTIONS = 'edge-management.hide_groups_actions';\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useApi = ({ api, id = null, statusMessages, tableReload = false }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n  const [apiFunc, setAPIFunc] = useState(() => api);\n\n  const hasSuccess = statusMessages?.onSuccess;\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async (query = '') => {\n    setIsLoading(true);\n    try {\n      const data = await apiFunc({ id, query });\n      setData(data);\n\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n    } catch (err) {\n      setHasError(true);\n\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n        }),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!tableReload) {\n      fetchData();\n    }\n  }, []);\n\n  return [{ data, isLoading, hasError }, fetchData, apiFunc, setAPIFunc];\n};\n\nexport default useApi;\n","import { useState, useEffect } from 'react';\nimport { useFeatureFlags } from '../utils';\nimport { FEATURE_PARITY_INVENTORY_GROUPS } from '../constants/features';\nimport { getEnforceEdgeGroups } from '../api/groups';\n\nconst useInventoryGroups = (value) => {\n  const [data, setData] = useState(value);\n  const inventoryGroupsEnabled = useFeatureFlags(\n    FEATURE_PARITY_INVENTORY_GROUPS\n  );\n\n  useEffect(() => {\n    (async () => {\n      const response = await getEnforceEdgeGroups();\n      const enforceEdgeGroups = response?.enforce_edge_groups;\n      setData(!enforceEdgeGroups && inventoryGroupsEnabled);\n    })();\n  }, []);\n\n  return data;\n};\n\nexport default useInventoryGroups;\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages, notificationProp) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n  const hasWarning = statusMessages?.onWarning;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      if (hasInfo) {\n        if (notificationProp) {\n          notificationProp.hasInfo(statusMessages.onInfo);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              ...statusMessages.onInfo,\n            }),\n          });\n        }\n      }\n      if (hasSuccess) {\n        if (notificationProp) {\n          notificationProp.hasSuccess(statusMessages.onSuccess);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'success',\n              ...statusMessages.onSuccess,\n            }),\n          });\n        }\n      }\n      if (hasWarning) {\n        if (notificationProp) {\n          notificationProp.hasWarning(statusMessages.onWarning);\n        } else {\n          dispatch({\n            ...addNotification({\n              variant: 'warning',\n              ...statusMessages.onWarning,\n            }),\n          });\n        }\n      }\n      return response;\n    } catch (err) {\n      if (notificationProp) {\n        notificationProp.err(statusMessages.onError, err);\n      } else {\n        dispatch({\n          ...addNotification({\n            variant: 'danger',\n            ...statusMessages.onError,\n            // Add error message from API, if present\n            description: err?.Title\n              ? `${statusMessages.onError.description}: ${err.Title}`\n              : statusMessages.onError.description,\n          }),\n        });\n      }\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n","var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n","var baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nmodule.exports = groupBy;\n","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["FilterIconConfig","name","height","width","svgPath","yOffset","xOffset","FilterIcon","asyncGroupNameValidation","value","length","undefined","validateGroupName","data","isValid","asyncInventoryGroupNameValidation","validateInventoryGroupName","resp","results","validatorMapper","groupName","inventoryValidatorMapper","createGroupSchema","fields","component","componentTypes","label","helperText","isRequired","autoFocus","validate","type","validatorTypes","threshold","nameValidator","CreateGroupModal","isModalOpen","setIsModalOpen","deviceIds","reloadData","dispatch","useDispatch","inventoryGroupsEnabled","useInventoryGroups","handleCreateGroup","values","createGroupFunc","statusMessages","onSuccess","title","description","onError","createInventoryGroup","createGroup","apiWithToast","handleAddDevicesToNewGroup","id","addDevicesToGroupFunc","addDevicesToInventoryGroup","ID","addDevicesToGroup","parseInt","isOpen","closeModal","submitLabel","schema","onSubmit","propTypes","PropTypes","WarningIcon","color","warningColor","DeleteGroupModal","modalState","titleIconVariant","variant","deleteGroupById","UpdateDeviceModal","React","filters","columns","sort","GroupTable","count","isLoading","hasError","handleCreateModal","handleRenameModal","handleDeleteModal","hasModalSubmitted","setHasModalSubmitted","fetchGroups","hideCreateGroupsEnabled","useFeatureFlags","history","useHistory","pathname","useLocation","useState","deviceData","imageData","updateModal","setUpdateModal","buildRows","map","rowData","DeviceGroup","Name","Devices","DevicesImageInfo","systems","image","Tooltip","content","device","index","key","rowInfo","devicesImageInfo","devices","hasValidUpdate","ValidUpdate","cells","to","paths","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","rows","actionResolver","hasUpdate","some","UpdateAvailable","onClick","prevState","UUID","display_name","imageId","find","ImageID","isDisabled","areActionsDisabled","defaultSort","direction","emptyFilterState","body","toolbarButtons","click","Suspense","fallback","Bullseye","Spinner","navigateBack","push","refreshTable","search","useApi","api","getGroups","tableReload","response","chrome","useChrome","setModalState","isCreateModalOpen","setIsCreateModalOpen","isRenameModalOpen","setIsRenameModalOpen","isDeleteModalOpen","setIsDeleteModalOpen","useEffect","updateDocumentTitle","PageHeader","className","PageHeaderTitle","emptyStateNoFilters","Flex","justifyContent","default","Empty","icon","primaryAction","text","secondaryActions","link","RenameGroupModal","initialValues","updateGroupById","payload","instance","EDGE_API","Type","INVENTORY_API_BASE","query","q","getTableParams","getInventoryGroups","getGroupById","groupId","devicesIDS","forEach","removeDevicesFromGroup","removeDevicesFromInventoryGroup","join","removeDeviceFromGroupById","getEnforceEdgeGroups","RepoModal","size","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","FEATURE_PARITY_INVENTORY_GROUPS","FEATURE_HIDE_GROUP_ACTIONS","setData","setIsLoading","setHasError","apiFunc","setAPIFunc","hasSuccess","fetchData","addNotification","enforceEdgeGroups","enforce_edge_groups","notificationProp","hasInfo","onInfo","hasWarning","onWarning","err","Title","trimmedEndIndex","reTrimStart","module","exports","string","slice","replace","reWhitespace","test","charAt","isObject","now","toNumber","nativeMax","Math","max","nativeMin","min","func","wait","options","lastArgs","lastThis","maxWait","result","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","leadingEdge","timerExpired","shouldInvoke","timeSinceLastCall","trailingEdge","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","clearTimeout","cancel","flush","baseFlatten","array","baseAssignValue","createAggregator","hasOwnProperty","Object","prototype","groupBy","call","root","Date","baseTrim","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","other","valueOf","isBinary","_iterableToArray","iter","Symbol","iterator","Array","from","_objectWithoutProperties","source","excluded","i","target","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","_toConsumableArray","arr","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray"],"sourceRoot":""}