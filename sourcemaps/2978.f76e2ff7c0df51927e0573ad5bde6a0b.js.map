{"version":3,"file":"js/2978.c44923441eed709f546a.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Dark/DarkContext.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/ImageManager/Images.js","webpack:///./src/api/images/index.js","webpack:///./src/api/index.js","webpack:///./src/hooks/useApi.js","webpack:///./node_modules/classnames/index.js"],"sourcesContent":["import React from 'react';\nvar DarkContext = React.createContext('light');\nexport default DarkContext;\n//# sourceMappingURL=DarkContext.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { DarkContext } from '../Dark';\nimport '../PageHeader/page-header.css';\nvar PageHeader = function (_a) {\n    var className = _a.className, children = _a.children, props = __rest(_a, [\"className\", \"children\"]);\n    var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n    return (_jsx(DarkContext.Consumer, { children: function (theme) {\n            var _a, _b;\n            if (theme === void 0) { theme = 'light'; }\n            var themeClasses = classNames((_a = {}, _a[\"pf-m-\".concat(theme, \"-200\")] = theme === 'dark', _a), (_b = {}, _b[\"pf-m-light\"] = theme === 'light', _b));\n            return (_jsx(\"section\", __assign({}, props, { className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses), \"widget-type\": \"InsightsPageHeader\" }, { children: children })));\n        } }));\n};\nexport default PageHeader;\n//# sourceMappingURL=PageHeader.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import React, { Fragment, useState, Suspense } from 'react';\nimport { Spinner, Bullseye } from '@patternfly/react-core';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { useHistory, useLocation, useNavigate } from 'react-router-dom';\nimport ImageSetsTable from './ImageSetsTable';\nimport { stateToUrlSearch } from '../../utils';\nimport { getImageSets } from '../../api/images';\nimport useApi from '../../hooks/useApi';\nimport PropTypes from 'prop-types';\n\nconst CreateImageWizard = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"CreateImageWizard\" */ '../ImageManager/CreateImageWizard'\n  )\n);\n\nconst UpdateImageWizard = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"UpdateImageWizard\" */ '../ImageManager/UpdateImageWizard'\n  )\n);\n\nconst Images = ({\n  pathPrefix,\n  urlName,\n  historyProp,\n  locationProp,\n  navigateProp,\n  notificationProp,\n  showHeaderProp,\n}) => {\n  const history = historyProp\n    ? historyProp()\n    : useHistory\n    ? useHistory()\n    : null;\n  const navigate = navigateProp\n    ? navigateProp()\n    : useNavigate\n    ? useNavigate()\n    : null;\n  const { pathname, search } = locationProp ? locationProp() : useLocation();\n  const showHeader = showHeaderProp === undefined ? true : showHeaderProp;\n  const [response, fetchImageSets] = useApi({\n    api: getImageSets,\n    tableReload: true,\n  });\n\n  const { data, isLoading, hasError } = response;\n\n  const [isCreateWizardOpen, setIsCreateWizardOpen] = useState(false);\n  const [UpdateWizard, setUpdateWizard] = useState({\n    isOpen: false,\n    imageId: null,\n  });\n  const [hasModalSubmitted, setHasModalSubmitted] = useState(false);\n\n  const createHistoryObj = {\n    pathname,\n    search: stateToUrlSearch('create_image=true', true, search),\n  };\n  const updateHistoryObj = {\n    pathname,\n    search: stateToUrlSearch('update_image=true', true, search),\n  };\n\n  const openCreateWizard = () => {\n    if (navigateProp) {\n      navigate({ ...createHistoryObj, replace: true });\n    } else {\n      history.push({ ...createHistoryObj });\n    }\n    setIsCreateWizardOpen(true);\n  };\n\n  const openUpdateWizard = (id) => {\n    if (navigateProp) {\n      navigate({ ...updateHistoryObj, replace: true });\n    } else {\n      history.push({ ...updateHistoryObj });\n    }\n\n    setUpdateWizard({\n      isOpen: true,\n      imageId: id,\n    });\n  };\n\n  const reload = async () => {\n    await fetchImageSets();\n    setHasModalSubmitted(true);\n  };\n\n  return (\n    <Fragment>\n      {showHeader && (\n        <PageHeader className=\"pf-m-light\">\n          <PageHeaderTitle title=\"Images\" />\n        </PageHeader>\n      )}\n      <section className=\"edge-images pf-l-page__main-section pf-c-page__main-section\">\n        <ImageSetsTable\n          pathPrefix={pathPrefix}\n          urlName={urlName}\n          historyProp={historyProp}\n          locationProp={locationProp}\n          navigateProp={navigateProp}\n          data={data?.data || []}\n          count={data?.count}\n          isLoading={isLoading}\n          hasError={hasError}\n          fetchImageSets={fetchImageSets}\n          openCreateWizard={openCreateWizard}\n          openUpdateWizard={openUpdateWizard}\n          hasModalSubmitted={hasModalSubmitted}\n          setHasModalSubmitted={setHasModalSubmitted}\n        />\n      </section>\n      {isCreateWizardOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <CreateImageWizard\n            navigateBack={() => {\n              if (navigateProp) {\n                navigate({ ...createHistoryObj, replace: true });\n              } else {\n                history.push({\n                  pathname,\n                  search: stateToUrlSearch('create_image=true', false, search),\n                });\n              }\n              setIsCreateWizardOpen(false);\n            }}\n            reload={reload}\n            notificationProp={notificationProp}\n            locationProp={locationProp}\n          />\n        </Suspense>\n      )}\n      {UpdateWizard.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateImageWizard\n            navigateBack={() => {\n              if (navigateProp) {\n                navigate({ ...updateHistoryObj, replace: true });\n              } else {\n                history.push({\n                  pathname,\n                  search: stateToUrlSearch('update_image=true', false, search),\n                });\n              }\n              setUpdateWizard((prevState) => {\n                return {\n                  ...prevState,\n                  isOpen: false,\n                };\n              });\n            }}\n            reload={reload}\n            updateImageID={UpdateWizard.imageId}\n            notificationProp={notificationProp}\n            locationProp={locationProp}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nImages.propTypes = {\n  pathPrefix: PropTypes.string,\n  urlName: PropTypes.string,\n  historyProp: PropTypes.func,\n  locationProp: PropTypes.func,\n  navigateProp: PropTypes.func,\n  notificationProp: PropTypes.object,\n  showHeaderProp: PropTypes.bool,\n};\nexport default Images;\n","import {\n  CONTENT_SOURCES_API,\n  EDGE_API,\n  IMAGE_BUILDER_API,\n  getTableParams,\n} from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const checkImageName = (name) => {\n  const payload = {\n    name,\n  };\n  return instance.post(`${EDGE_API}/images/checkImageName`, payload);\n};\n\nexport const fetchImageStatus = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const fetchActiveImages = ({ limit = 100, offset = 0 } = {}) => {\n  return instance.get(\n    `${IMAGE_BUILDER_API}/composes?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const createImage = ({\n  Id,\n  name,\n  version,\n  description,\n  release,\n  architecture,\n  username,\n  credentials,\n  imageType: imageTypes,\n  'selected-packages': packages,\n  'third-party-repositories': thirdPartyRepositories,\n  'custom-packages': customPackages,\n}) => {\n  let [imageType] = imageTypes || [];\n  if (imageTypes.length > 1) {\n    imageType = 'rhel-edge-installer';\n  }\n  const payload = {\n    name,\n    version,\n    description,\n    distribution: release,\n    imageType: imageType,\n    packages: packages?.map((item) => ({ name: item.name })),\n    outputTypes: imageTypes,\n    commit: {\n      arch: architecture,\n    },\n    installer: {\n      username,\n      sshkey: credentials,\n    },\n    thirdPartyRepositories: thirdPartyRepositories?.map((repo) => ({\n      ID: repo.id,\n      Name: repo.name,\n      URL: repo.URL,\n      uuid: repo.uuid,\n    })),\n    customPackages: customPackages?.map((repo) => ({ Name: repo.name })),\n  };\n\n  let endpoint = `${EDGE_API}/images`;\n\n  if (version > 1) {\n    endpoint += `/${Id}/update`;\n  }\n\n  return instance.post(endpoint, payload);\n};\n\nexport const getImageSet = ({\n  id,\n  q = {\n    limit: 10,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/${id}?${query}`);\n};\n\nexport const getImageSetViewVersions = ({\n  imageSetID,\n  query = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/image-sets/view/${imageSetID}/versions?${q}`\n  );\n};\n\nexport const getImageSetView = ({ id }) => {\n  return instance.get(`${EDGE_API}/image-sets/view/${id}`);\n};\n\nexport const getImagePackageMetadata = (id) => {\n  try {\n    return instance.get(`${EDGE_API}/images/${id}/metadata`);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchEdgeImages = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/images?${query}`);\n};\n\nexport const fetchEdgeImageSets = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets?${query}`);\n};\n\nexport const getEdgeImageStatus = (id) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const getImageDataOnDevice = (id) => {\n  return instance.get(`${EDGE_API}/updates/device/${id}/image`);\n};\n\nexport const getPackages = async (distribution, architecture, search) => {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  return instance(`${IMAGE_BUILDER_API}/packages?${params.toString()}`);\n};\n\nexport const getImageById = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/details`);\n};\n\nexport const getImageSets = ({ query }) => {\n  if (query === '') {\n    query = { limit: 20, offset: 0, sort_by: '-updated_at' };\n  }\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/image-sets/view?${q}`);\n};\n\nexport const postRpmsNames = (urls, search) => {\n  return instance.post(`${CONTENT_SOURCES_API}/rpms/names`, {\n    urls: urls,\n    search: search,\n  });\n};\n","export const IMAGE_BUILDER_API = '/api/image-builder/v1';\nexport const EDGE_API = '/api/edge/v1';\nexport const CONTENT_SOURCES_API = '/api/content-sources/v1';\n\nexport const getTableParams = (q) => {\n  if (q === undefined) {\n    return '';\n  }\n  const query = Object.keys(q).reduce((acc, curr) => {\n    let value = undefined;\n    if (\n      typeof q[curr] === 'object' &&\n      typeof q[curr].length === 'number' &&\n      q[curr].length > 0\n    ) {\n      value = q[curr].reduce(\n        (multiVals, val) =>\n          multiVals === '' ? `${curr}=${val}` : `${multiVals}&${curr}=${val}`,\n        ''\n      );\n    }\n    if (['string', 'number'].includes(typeof q[curr]) && q[curr] !== '') {\n      value = `${curr}=${q[curr]}`;\n    }\n    return value === undefined\n      ? acc\n      : acc === ''\n      ? `${value}`\n      : `${acc}&${value}`;\n  }, '');\n\n  return query;\n};\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nconst useApi = ({ api, id = null, statusMessages, tableReload = false }) => {\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [hasError, setHasError] = useState(false);\n\n  const hasSuccess = statusMessages?.onSuccess;\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async (query = '') => {\n    setIsLoading(true);\n    try {\n      const data = await api({ id, query });\n      setData(data);\n\n      if (hasSuccess) {\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      }\n    } catch (err) {\n      setHasError(true);\n\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n        }),\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (!tableReload) {\n      fetchData();\n    }\n  }, []);\n\n  return [{ data, isLoading, hasError }, fetchData];\n};\n\nexport default useApi;\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","_a","className","children","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","pageHeaderClasses","theme","_b","themeClasses","concat","title","pageHeaderTitleClasses","Title","headingLevel","size","CreateImageWizard","React","UpdateImageWizard","Images","pathPrefix","urlName","historyProp","locationProp","navigateProp","notificationProp","showHeaderProp","history","useHistory","navigate","useNavigate","useLocation","pathname","search","showHeader","undefined","useApi","api","getImageSets","tableReload","response","fetchImageSets","data","isLoading","hasError","useState","isCreateWizardOpen","setIsCreateWizardOpen","isOpen","imageId","UpdateWizard","setUpdateWizard","hasModalSubmitted","setHasModalSubmitted","createHistoryObj","stateToUrlSearch","updateHistoryObj","reload","Fragment","count","openCreateWizard","replace","push","openUpdateWizard","id","Suspense","fallback","navigateBack","prevState","updateImageID","propTypes","PropTypes","checkImageName","name","payload","instance","EDGE_API","createImage","Id","version","description","release","architecture","username","credentials","imageTypes","imageType","packages","thirdPartyRepositories","customPackages","distribution","map","item","outputTypes","commit","arch","installer","sshkey","repo","ID","Name","URL","uuid","endpoint","getImageSet","q","limit","offset","sort_by","query","getTableParams","getImageSetViewVersions","imageSetID","getImageSetView","fetchEdgeImageSets","getEdgeImageStatus","getImageDataOnDevice","getPackages","params","URLSearchParams","IMAGE_BUILDER_API","toString","getImageById","postRpmsNames","urls","CONTENT_SOURCES_API","keys","reduce","acc","curr","value","multiVals","val","includes","statusMessages","dispatch","useDispatch","setData","setIsLoading","setHasError","hasSuccess","onSuccess","onError","fetchData","addNotification","variant","useEffect","hasOwn","classNames","classes","arg","argType","Array","isArray","inner","key","join","module","exports","default"],"sourceRoot":""}