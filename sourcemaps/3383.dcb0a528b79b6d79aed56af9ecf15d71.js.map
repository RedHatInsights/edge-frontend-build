{"version":3,"file":"js/3383.1654037693764.e66f0c77d1bb3edb2d81.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-open-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/in-progress-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/question-circle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/times-circle-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_active_color_100.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Routes/ImageManager/UpdateImageWizard.js","webpack:///./src/Routes/ImageManagerDetail/DetailsHeader.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageVersionsTab.js","webpack:///./src/Routes/ImageManagerDetail/ImagePackagesTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTabs.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetail.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/keyBy.js","webpack:///./node_modules/lodash/map.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const LockIconConfig = {\n  name: 'LockIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockIcon = createIcon(LockIconConfig);\n\nexport default LockIcon;","import { createIcon } from '../createIcon';\n\nexport const LockOpenIconConfig = {\n  name: 'LockOpenIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockOpenIcon = createIcon(LockOpenIconConfig);\n\nexport default LockOpenIcon;","\"use strict\"\nexports.__esModule = true;\nexports.InProgressIconConfig = {\n  name: 'InProgressIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M513.417211,16.013668 L513.417211,112.013668 C513.406007,120.539653 520.082422,127.576718 528.597211,128.013668 C732.697211,136.513668 896.147211,305.013668 896.147211,511.343668 C896.147211,723.013668 724.007211,895.163668 512.417211,895.163668 C437.186239,895.277345 363.602574,873.135095 300.927211,831.523668 C294.58293,827.2982 286.138663,828.135095 280.747211,833.523668 L211.807211,902.353668 C208.502935,905.676185 206.82123,910.280199 207.20607,914.950237 C207.590911,919.620275 210.00361,923.886884 213.807211,926.623668 C300.709573,989.398037 405.213535,1023.13146 512.417211,1023.01398 C794.537211,1023.01398 1023.91724,793.433668 1023.91724,511.413668 C1024.00721,235.103668 804.007211,9.22366802 529.897211,0.00645736761 C525.571205,-0.116171039 521.377128,1.51204372 518.271915,4.52681369 C515.166702,7.54158367 513.415263,11.6857144 513.417211,16.013668 M97.1272107,212.923668 C64.2190689,258.479443 39.0698895,309.162997 22.6972107,362.923668 C21.2705092,367.756559 22.2039184,372.979173 25.2163356,377.018685 C28.2287528,381.058197 32.9681443,383.442545 38.0072107,383.453683 L139.407211,383.453683 C145.970195,383.46249 151.873012,379.462528 154.297211,373.363668 C164.307669,347.593304 177.068112,322.977652 192.357211,299.943668 C196.579666,293.633658 195.741339,285.216847 190.357211,279.863668 L121.497211,211.013668 C118.186635,207.662531 113.567544,205.940538 108.871166,206.30669 C104.174788,206.672841 99.8783994,209.089927 97.1272107,212.913668 M112.907211,511.433663 L17.0072107,511.433663 C12.679257,511.433663 8.5351263,513.183159 5.52035633,516.288373 C2.50558635,519.393586 0.877371594,523.587662 1.00721065,527.913668 C4.13104542,629.408217 37.6085847,727.635936 97.1172107,809.913668 C99.8539943,813.717268 104.120603,816.129968 108.790642,816.514809 C113.46068,816.899649 118.064693,815.217944 121.387211,811.913668 L190.217211,743.073668 C195.605784,737.682216 196.442679,729.237949 192.217211,722.893668 C153.520825,664.580171 131.611534,596.745437 128.887211,526.813668 C128.553964,518.220138 121.487197,511.427209 112.887211,511.433663',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.InProgressIcon = require('../createIcon').createIcon(exports.InProgressIconConfig);\nexports[\"default\"] = exports.InProgressIcon;","\"use strict\"\nexports.__esModule = true;\nexports.QuestionCircleIconConfig = {\n  name: 'QuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M504 256c0 136.997-111.043 248-248 248S8 392.997 8 256C8 119.083 119.043 8 256 8s248 111.083 248 248zM262.655 90c-54.497 0-89.255 22.957-116.549 63.758-3.536 5.286-2.353 12.415 2.715 16.258l34.699 26.31c5.205 3.947 12.621 3.008 16.665-2.122 17.864-22.658 30.113-35.797 57.303-35.797 20.429 0 45.698 13.148 45.698 32.958 0 14.976-12.363 22.667-32.534 33.976C247.128 238.528 216 254.941 216 296v4c0 6.627 5.373 12 12 12h56c6.627 0 12-5.373 12-12v-1.333c0-28.462 83.186-29.647 83.186-106.667 0-58.002-60.165-102-116.531-102zM256 338c-25.365 0-46 20.635-46 46 0 25.364 20.635 46 46 46s46-20.636 46-46c0-25.365-20.635-46-46-46z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.QuestionCircleIcon = require('../createIcon').createIcon(exports.QuestionCircleIconConfig);\nexports[\"default\"] = exports.QuestionCircleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.TimesCircleIconConfig = {\n  name: 'TimesCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm121.6 313.1c4.7 4.7 4.7 12.3 0 17L338 377.6c-4.7 4.7-12.3 4.7-17 0L256 312l-65.1 65.6c-4.7 4.7-12.3 4.7-17 0L134.4 338c-4.7-4.7-4.7-12.3 0-17l65.6-65-65.6-65.1c-4.7-4.7-4.7-12.3 0-17l39.6-39.6c4.7-4.7 12.3-4.7 17 0l65 65.7 65.1-65.6c4.7-4.7 12.3-4.7 17 0l39.6 39.6c4.7 4.7 4.7 12.3 0 17L312 256l65.6 65.1z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.TimesCircleIcon = require('../createIcon').createIcon(exports.TimesCircleIconConfig);\nexports[\"default\"] = exports.TimesCircleIcon;","export const global_active_color_100 = {\n  \"name\": \"--pf-global--active-color--100\",\n  \"value\": \"#06c\",\n  \"var\": \"var(--pf-global--active-color--100)\"\n};\nexport default global_active_color_100;","import _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\nimport { Tooltip } from \"@patternfly/react-core/dist/esm/components/Tooltip/Tooltip.js\";\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30; // let's count that every month has 30 days\n\nvar year = day * 365;\n\nvar formatTime = function formatTime(number, unit) {\n  return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\");\n};\n\nvar relativeTimeTable = [{\n  rightBound: Infinity,\n  description: function description(date) {\n    return formatTime(Math.round(date / year), 'year');\n  }\n}, {\n  rightBound: year,\n  description: function description(date) {\n    return formatTime(Math.round(date / month), 'month');\n  }\n}, {\n  rightBound: month,\n  description: function description(date) {\n    return formatTime(Math.round(date / day), 'day');\n  }\n}, {\n  rightBound: day,\n  description: function description(date) {\n    return formatTime(Math.round(date / hour), 'hour');\n  }\n}, {\n  rightBound: hour,\n  description: function description(date) {\n    return formatTime(Math.round(date / minute), 'minute');\n  }\n}, {\n  rightBound: minute,\n  description: function description() {\n    return 'Just now';\n  }\n}];\n\nvar _exact = function exact(value) {\n  return value.toUTCString().split(',')[1].slice(0, -7).trim();\n};\n\nexport var addTooltip = function addTooltip(date, element, tooltipProps) {\n  var extraTitle = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '';\n  return /*#__PURE__*/React.createElement(Tooltip, _extends({}, tooltipProps, {\n    content: /*#__PURE__*/React.createElement(\"div\", null, extraTitle, date)\n  }), element);\n};\nexport var dateStringByType = function dateStringByType(type) {\n  return {\n    exact: function exact(date) {\n      return _exact(date) + ' UTC';\n    },\n    onlyDate: function onlyDate(date) {\n      return _exact(date).slice(0, -6);\n    },\n    relative: function relative(date) {\n      return relativeTimeTable.reduce(function (acc, i) {\n        return i.rightBound > Date.now() - date ? i.description(Date.now() - date) : acc;\n      }, _exact(date));\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};\nexport var dateByType = function dateByType(type, tooltipProps, extraTitle) {\n  return {\n    exact: function exact(date) {\n      return dateStringByType(type)(date);\n    },\n    onlyDate: function onlyDate(date) {\n      return dateStringByType(type)(date);\n    },\n    relative: function relative(date) {\n      return addTooltip(dateStringByType('exact')(date), /*#__PURE__*/React.createElement(\"span\", null, dateStringByType(type)(date)), tooltipProps, extraTitle);\n    },\n    invalid: function invalid() {\n      return 'Invalid date';\n    }\n  }[type];\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { dateByType } from './helper';\n/**\n * A component that formats date to a unified CRC format.\n * Relative date format adds a tooltip with a full date string.\n */\n\nexport default function DateFormat(_ref) {\n  var date = _ref.date,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'relative' : _ref$type,\n      extraTitle = _ref.extraTitle,\n      _ref$tooltipProps = _ref.tooltipProps,\n      tooltipProps = _ref$tooltipProps === void 0 ? {} : _ref$tooltipProps;\n  var dateObj = date instanceof Date ? date : new Date(date); // Prevent treating null as valid. (new Date(null) == new Date(0) returns 1970 Jan 1)\n\n  var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n  var dateType = invalid ? 'invalid' : type;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, dateByType(dateType, tooltipProps, extraTitle)(dateObj));\n}\nDateFormat.propTypes = {\n  date: PropTypes.oneOfType([PropTypes.instanceOf(Date), PropTypes.string, PropTypes.number]),\n\n  /**\n   * Output format of the date\n   */\n  type: PropTypes.oneOf(['exact', 'onlyDate', 'relative']),\n\n  /**\n   * Additional text in the tooltip\n   */\n  extraTitle: PropTypes.node,\n\n  /**\n   * <a target=\"_blank\" href=\"https://www.patternfly.org/v4/components/tooltip/#props\">PF Tooltip props object</a>\n   */\n  tooltipProps: PropTypes.object\n};","import React, { useState, useEffect, useContext } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  review,\n  packages,\n  updateDetails,\n  registration,\n  repositories,\n  imageOutput,\n  customPackages,\n} from './steps';\nimport { Bullseye, Backdrop, Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\nimport { createNewImage, addImageToPoll } from '../../store/actions';\nimport { CREATE_NEW_IMAGE_RESET } from '../../store/action-types';\nimport { useDispatch } from 'react-redux';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { imageDetailReducer } from '../../store/reducers';\nimport { loadImageDetail, loadEdgeImageSets } from '../../store/actions';\nimport { getEdgeImageStatus } from '../../api/images';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useFeatureFlags } from '../../constants';\nimport { getReleases } from '../ImageManagerDetail/constants';\n\nconst UpdateImage = ({ navigateBack, updateImageID }) => {\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const closeAction = () => {\n    navigateBack();\n    dispatch({ type: CREATE_NEW_IMAGE_RESET });\n  };\n  const customRepoFlag = useFeatureFlags('fleet-management.custom-repos');\n\n  const { getRegistry } = useContext(RegistryContext);\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({\n      data: imageDetailReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageDetailReducer,\n    });\n    updateImageID && loadImageDetail(dispatch, updateImageID);\n    return () => registered();\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      insights?.chrome?.auth\n        ?.getUser()\n        .then((result) => setUser(result != undefined ? result : {}));\n    })();\n  }, []);\n\n  return user && data ? (\n    <ImageCreator\n      onClose={closeAction}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const payload = {\n          ...values,\n          Id: data?.image?.ID,\n          name: data?.image?.Name,\n          version: data?.image?.Version + 1,\n          architecture: 'x86_64',\n          credentials: values.credentials\n            ? values.credentials\n            : data?.image?.Installer.SshKey,\n          username: values.username\n            ? values.username\n            : data?.image?.Installer.Username,\n        };\n\n        createNewImage(dispatch, payload, (resp) => {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              title: 'Update image',\n              description: `${resp.value.Name} image was added to the queue.`,\n            }),\n            meta: {\n              polling: {\n                id: `FETCH_IMAGE_${resp.value.ID}_BUILD_STATUS`,\n                fetcher: () => getEdgeImageStatus(resp.value.ID),\n                condition: (resp) => {\n                  switch (resp.Status) {\n                    case 'BUILDING':\n                      return [true, ''];\n                    case 'ERROR':\n                      return [false, 'failure'];\n                    default:\n                      return [false, 'success'];\n                  }\n                },\n                onEvent: {\n                  failure: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'danger',\n                          title: 'Image build failed',\n                          description: `${resp.value.Name} image build is completed unsuccessfully`,\n                        })\n                      ),\n                  ],\n                  success: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'success',\n                          title: 'Image is ready',\n                          description: `${resp.value.Name} image build is completed`,\n                        })\n                      ),\n                    (dispatch) => loadEdgeImageSets(dispatch),\n                  ],\n                },\n              },\n            },\n          });\n          closeAction();\n          loadEdgeImageSets(dispatch);\n          dispatch(\n            addImageToPoll({ name: data.value.Name, id: data.value.ID })\n          );\n        });\n      }}\n      defaultArch=\"x86_64\"\n      initialValues={{\n        name: data?.image?.Name,\n        isUpdate: true,\n        description: data?.image?.Description,\n        credentials: data?.image?.Installer.SshKey,\n        username: data?.image?.Installer.Username,\n        version: data?.image?.Version,\n        release: data?.image?.Distribution,\n        release_options: getReleases(data?.image?.Distribution),\n        imageType: ['rhel-edge-commit'],\n        includesCustomRepos: customRepoFlag,\n        'selected-packages': data?.image?.Packages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n        'third-party-repositories': data?.image?.ThirdPartyRepositories?.map(\n          (repo) => ({\n            id: repo.ID,\n            name: repo.Name,\n            ...repo,\n          })\n        ),\n        'custom-packages': data?.image?.CustomPackages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n      }}\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Create image',\n            },\n            showTitles: true,\n            title: `Update image: ${data?.image?.Name}`,\n            crossroads: [\n              'target-environment',\n              'release',\n              'imageType',\n              'third-party-repositories',\n            ],\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              updateDetails,\n              imageOutput,\n              registration,\n              repositories,\n              packages,\n              repositories,\n              review,\n              customPackages,\n            ],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  );\n};\n\nUpdateImage.propTypes = {\n  navigateBack: PropTypes.func,\n  updateImageID: PropTypes.number,\n};\nUpdateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default UpdateImage;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Text,\n  TextList,\n  TextListItem,\n  TextContent,\n  Skeleton,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownPosition,\n} from '@patternfly/react-core';\nimport StatusLabel from './StatusLabel';\nimport { routes as paths } from '../../../package.json';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst dropdownItems = (data, imageVersion, openUpdateWizard) => {\n  const imageData = imageVersion ? imageVersion : data?.images?.[0];\n\n  const actionsArray = [];\n\n  imageData?.image?.ID &&\n    actionsArray.push(\n      <DropdownItem\n        key=\"create-new-version-button\"\n        component=\"button\"\n        onClick={() => openUpdateWizard(imageData?.image?.ID)}\n      >\n        Create new version\n      </DropdownItem>\n    );\n\n  imageData?.image?.Installer?.ImageBuildISOURL &&\n    actionsArray.push(\n      <DropdownItem key=\"download-button\" component=\"button\">\n        <Text\n          className=\"force-text-black remove-underline\"\n          component=\"a\"\n          href={imageData?.image?.Installer?.ImageBuildISOURL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Download installable .iso for newest image\n        </Text>\n      </DropdownItem>\n    );\n  return actionsArray;\n};\n\nconst DetailsHead = ({ imageData, imageVersion, openUpdateWizard }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    setData(imageData?.data?.Data);\n  }, [imageData]);\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={paths['manage-images']}>Back to Manage Images</Link>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        <>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to={paths['manage-images']}>Manage Images</Link>\n            </BreadcrumbItem>\n            {imageVersion ? (\n              <BreadcrumbItem>\n                <Link to={`${paths['manage-images']}/${data?.image_set?.ID}`}>\n                  {data?.image_set?.Name}\n                </Link>\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem isActive>\n                {data?.image_set?.Name || <Skeleton width=\"100px\" />}\n              </BreadcrumbItem>\n            )}\n            {imageVersion && (\n              <BreadcrumbItem isActive>\n                {imageVersion?.image?.Version}\n              </BreadcrumbItem>\n            )}\n          </Breadcrumb>\n\n          <TextContent>\n            <Split>\n              <SplitItem>\n                <TextList component=\"dl\">\n                  <TextListItem\n                    component=\"h1\"\n                    className=\"grid-align-center pf-u-mb-0\"\n                  >\n                    {data?.image_set?.Name || <Skeleton width=\"150px\" />}\n                  </TextListItem>\n                  <TextListItem className=\"pf-u-pt-sm\" component=\"dd\">\n                    {data?.Status || data?.images?.[0]?.image?.Status ? (\n                      <StatusLabel status={data?.images?.[0]?.image?.Status} />\n                    ) : (\n                      <Skeleton width=\"100px\" />\n                    )}\n                  </TextListItem>\n                  {imageVersion?.image?.UpdatedAt ||\n                  data?.images?.[0].image?.UpdatedAt ? (\n                    <TextListItem component=\"p\">\n                      {`Last updated `}\n                      <DateFormat\n                        date={\n                          imageVersion\n                            ? imageVersion?.image?.UpdatedAt\n                            : data?.images?.[0].image?.UpdatedAt\n                        }\n                      />\n                    </TextListItem>\n                  ) : (\n                    <Skeleton width=\"200px\" />\n                  )}\n                </TextList>\n              </SplitItem>\n              <SplitItem isFilled></SplitItem>\n              <SplitItem>\n                <Dropdown\n                  position={DropdownPosition.right}\n                  toggle={\n                    <DropdownToggle\n                      id=\"image-set-details-dropdown\"\n                      toggleIndicator={CaretDownIcon}\n                      onToggle={(newState) => setIsOpen(newState)}\n                      isDisabled={\n                        (imageVersion\n                          ? imageVersion?.image?.Status\n                          : data?.Images?.[0]?.Status) === 'BUILDING' || false\n                      }\n                    >\n                      Actions\n                    </DropdownToggle>\n                  }\n                  isOpen={isOpen}\n                  dropdownItems={dropdownItems(\n                    data,\n                    imageVersion,\n                    openUpdateWizard\n                  )}\n                />\n              </SplitItem>\n            </Split>\n          </TextContent>\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsHead.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default DetailsHead;\n","import React, { useEffect, useState } from 'react';\nimport {\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  Text,\n  TextVariants,\n  Grid,\n  GridItem,\n  ClipboardCopy,\n  Skeleton,\n} from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { distributionMapper } from './constants';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../../package.json';\nimport { Link } from 'react-router-dom';\n\nconst ImageDetailTab = ({ imageData, imageVersion }) => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    imageVersion\n      ? setData(imageVersion)\n      : setData(imageData?.data?.Data?.images?.[0]);\n  }, [imageData, imageVersion]);\n\n  const createSkeleton = (rows) =>\n    [...Array(rows * 2)].map((key) => <Skeleton width=\"180px\" key={key} />);\n\n  const dateFormat = () => <DateFormat date={data?.image?.['CreatedAt']} />;\n\n  const detailsMapper = {\n    Version: 'Version',\n    Created: () => dateFormat(),\n    'Type(s)': () =>\n      data?.image?.['OutputTypes']?.map((outputType, index) => (\n        <div key={index}>{outputType}</div>\n      )),\n    Release: () => distributionMapper?.[data?.image?.['Distribution']],\n    //Size: 'Size',\n    Description: 'Description',\n  };\n\n  const userInfoMapper = {\n    Username: () => data?.image?.Installer?.Username,\n    'SSH Key': () => data?.image?.Installer?.SshKey,\n  };\n  const renderAdditionalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths['manage-images']}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/additional`}\n      >\n        {data?.additional_packages}\n      </Link>\n    );\n  };\n\n  const renderTotalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths['manage-images']}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/all`}\n      >\n        {data?.packages}\n      </Link>\n    );\n  };\n\n  const packageMapper = {\n    'Total Additional Packages': renderAdditionalPackageLink,\n    'Total Packages': renderTotalPackageLink,\n  };\n\n  const packageDiffMapper = {\n    Added: () => data?.update_added,\n    Removed: () => data?.update_removed,\n    Updated: () => data?.update_updated,\n  };\n\n  if (data?.image?.Installer?.Checksum) {\n    detailsMapper['SHA-256 Checksum'] = () => data?.image?.Installer?.Checksum;\n  }\n\n  if (data?.image?.Commit?.OSTreeCommit) {\n    detailsMapper['Ostree Commit Hash'] = () =>\n      data?.image?.Commit?.OSTreeCommit;\n  }\n\n  const buildTextList = (labelsToValueMapper) =>\n    data\n      ? Object.entries(labelsToValueMapper).map(([label, value]) => {\n          return (\n            <>\n              <TextListItem\n                className=\"details-label\"\n                component={TextListItemVariants.dt}\n              >\n                {label}\n              </TextListItem>\n              {label === 'SHA-256 Checksum' ||\n              label === 'Ostree Commit Hash' ||\n              (label === 'SSH Key' && value()) ? (\n                <TextListItem component={TextListItemVariants.dd}>\n                  <ClipboardCopy\n                    hoverTip=\"Copy\"\n                    clickTip=\"Copied\"\n                    variant=\"expansion\"\n                    className=\"pf-u-text-break-word\"\n                    id={`${label\n                      .replace(/\\s+/g, '-')\n                      .toLowerCase()}-clipboard-copy`}\n                  >\n                    {typeof value === 'function'\n                      ? value() || 'Unavailable'\n                      : data?.image?.[value] || 'Unavailable'}\n                  </ClipboardCopy>\n                </TextListItem>\n              ) : (\n                <TextListItem\n                  className=\"pf-u-text-break-word\"\n                  component={TextListItemVariants.dd}\n                >\n                  {typeof value === 'function'\n                    ? value() === 0\n                      ? 0\n                      : value() || 'Unavailable'\n                    : data?.image?.[value] || 'Unavailable'}\n                </TextListItem>\n              )}\n            </>\n          );\n        })\n      : null;\n\n  return (\n    <TextContent className=\"pf-u-ml-lg pf-u-mt-md\">\n      <Grid span={12}>\n        <GridItem span={5}>\n          <Text component={TextVariants.h2}>\n            {imageVersion ? 'Details' : 'Most recent image'}\n          </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(detailsMapper) || createSkeleton(6)}\n          </TextList>\n          <Text component={TextVariants.h2}>User Information </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(userInfoMapper) || createSkeleton(2)}\n          </TextList>\n        </GridItem>\n        <GridItem span={1} />\n        <GridItem span={6}>\n          <Text component={TextVariants.h2}>Packages </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageMapper) || createSkeleton(3)}\n          </TextList>\n          <Text component={TextVariants.h2}>Changes from previous version</Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageDiffMapper) || createSkeleton(3)}\n          </TextList>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nImageDetailTab.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n};\n\nexport default ImageDetailTab;\n","import React, { useEffect, useState } from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../../package.json';\nimport { Link } from 'react-router-dom';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport StatusLabel from '../ImageManagerDetail/StatusLabel';\nimport { imageTypeMapper } from '../ImageManagerDetail/constants';\nimport { loadImageSetDetail } from '../../store/actions';\nimport { cellWidth } from '@patternfly/react-table';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { truncateString } from '../../constants';\n\nconst defaultFilters = [\n  {\n    label: 'Status',\n    type: 'checkbox',\n    options: [\n      { option: 'Building', value: 'BUILDING' },\n      { option: 'Created', value: 'CREATED' },\n      { option: 'Error', value: 'ERROR' },\n      { option: 'Ready', value: 'SUCCESS' },\n    ],\n  },\n];\n\nconst columnNames = [\n  {\n    title: 'Version',\n    type: 'version',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Output',\n    type: 'image_type',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Ostree Commit Hash',\n    type: 'ostree_commit_hash',\n    sort: false,\n    columnTransforms: [cellWidth(20)],\n  },\n  {\n    title: 'Created',\n    type: 'created_at',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Status',\n    type: 'status',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n];\n\nconst createRows = (data, imageSetId, latestImageVersion) => {\n  return data?.map(({ image }) => ({\n    rowInfo: {\n      id: image?.ID,\n      imageStatus: image?.Status,\n      isoURL: image?.Installer?.ImageBuildISOURL,\n      latestImageVersion,\n      currentImageVersion: image.Version,\n    },\n    noApiSortFilter: [\n      image?.Version,\n      imageTypeMapper[image?.ImageType],\n      image?.CreatedAt,\n      image?.Status,\n    ],\n    cells: [\n      {\n        title: (\n          <Link\n            to={`${paths['manage-images']}/${imageSetId}/versions/${image.ID}/details`}\n          >\n            {image?.Version}\n          </Link>\n        ),\n      },\n      {\n        title: imageTypeMapper[image?.ImageType],\n      },\n      {\n        title: image?.Commit?.OSTreeCommit ? (\n          <Tooltip content={<div>{image?.Commit?.OSTreeCommit}</div>}>\n            <span>{truncateString(image?.Commit?.OSTreeCommit, [5, 5])}</span>\n          </Tooltip>\n        ) : (\n          <Text>Unavailable</Text>\n        ),\n      },\n      {\n        title: <DateFormat date={image?.CreatedAt} />,\n      },\n      {\n        title: <StatusLabel status={image?.Status} />,\n      },\n    ],\n  }));\n};\n\nconst ImageVersionsTab = ({ imageData, openUpdateWizard }) => {\n  const latestImageVersion = imageData?.data?.Data.image_set.Version;\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    if (imageData?.data) {\n      setRows(\n        createRows(\n          imageData?.data?.Data?.images,\n          imageData?.data?.Data?.image_set?.ID,\n          latestImageVersion\n        )\n      );\n    }\n  }, [imageData]);\n\n  const actionResolver = (rowData) => {\n    const actionsArray = [];\n    if (rowData.rowInfo?.isoURL) {\n      actionsArray.push({\n        title: (\n          <Text\n            className=\"force-text-black remove-underline\"\n            component=\"a\"\n            href={rowData.rowInfo.isoURL}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n          >\n            Download\n          </Text>\n        ),\n      });\n    }\n\n    if (\n      rowData.rowInfo?.imageStatus === 'SUCCESS' ||\n      rowData.rowInfo?.imageStatus === 'ERROR'\n    ) {\n      actionsArray.push({\n        title: 'Update Image',\n        onClick: (_event, _rowId, rowData) => {\n          openUpdateWizard(rowData.rowInfo.id);\n        },\n        isDisabled:\n          rowData?.rowInfo?.latestImageVersion !==\n          rowData?.rowInfo?.currentImageVersion,\n      });\n    }\n\n    if (rowData.rowInfo?.imageStatus === 'BUILDING' && rowData.rowInfo?.id) {\n      actionsArray.push({\n        title: '',\n      });\n    }\n\n    return actionsArray;\n  };\n  const areActionsDisabled = (rowData) =>\n    rowData.rowInfo?.imageStatus === 'BUILDING';\n\n  return (\n    <Main className=\"add-100vh\">\n      <GeneralTable\n        apiFilterSort={false}\n        filters={defaultFilters}\n        loadTableData={loadImageSetDetail}\n        tableData={{\n          count: imageData?.data?.Count,\n          isLoading: imageData?.isLoading,\n          hasError: imageData?.hasError,\n        }}\n        columnNames={columnNames}\n        rows={rows || []}\n        actionResolver={actionResolver}\n        areActionsDisabled={areActionsDisabled}\n        defaultSort={{ index: 2, direction: 'desc' }}\n      />\n    </Main>\n  );\n};\nImageVersionsTab.propTypes = {\n  imageData: PropTypes.object,\n  urlParam: PropTypes.string,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default ImageVersionsTab;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { cellWidth } from '@patternfly/react-table';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Empty from '../../components/Empty';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\n\nconst defaultFilters = [{ label: 'Name', type: 'text' }];\n\nconst columnNames = [\n  {\n    title: 'Name',\n    type: 'name',\n    sort: true,\n    columnTransforms: [cellWidth(35)],\n  },\n  {\n    title: 'Version',\n    type: 'version',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Release',\n    type: 'release',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n  //{ title: 'Type', type: 'type', sort: false, columnTransforms: [cellWidth(35)] },\n];\n\nconst createRows = (data, imageData, toggleTable) => {\n  const rowData =\n    toggleTable === 0\n      ? data.filter(\n          (pack) =>\n            imageData.filter((image) => pack.name === image.Name).length > 0\n        )\n      : data;\n  return rowData.map((packageData) => ({\n    noApiSortFilter: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n    ],\n    cells: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n      {\n        title: (\n          <a\n            href={`https://access.redhat.com/downloads/content/rhel---8/x86_64/7416/${packageData?.name}/${packageData?.version}-${packageData?.release}/${packageData?.arch}/fd431d51/package`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"link\"\n              isSmall\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n            >\n              More information\n            </Button>\n          </a>\n        ),\n      },\n    ],\n  }));\n};\n\nconst indexToTabs = {\n  0: 'additional',\n  1: 'all',\n};\n\nconst tabsToIndex = {\n  additional: 0,\n  all: 1,\n};\n\nconst ImagePackagesTab = ({ imageVersion }) => {\n  const location = useLocation();\n  const history = useHistory();\n  const splitUrl = location.pathname.split('/');\n  const defaultToggle = splitUrl.length === 7 ? tabsToIndex[splitUrl[6]] : 1;\n\n  const [packageData, setPackageData] = useState({});\n  const [toggleTable, setToggleTable] = useState(defaultToggle);\n\n  useEffect(() => {\n    setPackageData(imageVersion);\n  }, [imageVersion]);\n\n  useEffect(() => {\n    splitUrl[5] !== indexToTabs[toggleTable] && setToggleTable(defaultToggle);\n  }, [splitUrl]);\n\n  const handleToggleTable = (toggleIndex) => {\n    const currentTab = splitUrl[5]?.toLowerCase();\n    setToggleTable(toggleIndex);\n    if (currentTab === 'packages') {\n      if (splitUrl.length === 7) {\n        splitUrl[6] = indexToTabs[toggleIndex];\n      } else {\n        splitUrl.push(indexToTabs[toggleIndex]);\n      }\n\n      history.push(splitUrl.join('/'));\n    }\n  };\n\n  return imageVersion?.image?.Commit?.Status === 'SUCCESS' ? (\n    <Main className=\"add-100vh\">\n      <GeneralTable\n        apiFilterSort={false}\n        filters={defaultFilters}\n        tableData={{\n          count:\n            toggleTable === 0\n              ? packageData?.additional_packages\n              : packageData?.packages,\n          isLoading: false,\n          hasError: false,\n        }}\n        columnNames={columnNames}\n        rows={\n          packageData?.image?.Commit?.InstalledPackages\n            ? createRows(\n                packageData?.image?.Commit?.InstalledPackages,\n                packageData?.image?.Packages,\n                toggleTable\n              )\n            : []\n        }\n        actionResolver={() => []}\n        areActionsDisabled={() => true}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        toggleButton={[\n          { title: 'Additional', key: 0 },\n          { title: 'All', key: 1 },\n        ]}\n        toggleAction={handleToggleTable}\n        toggleState={toggleTable}\n        emptyFilterState={{\n          icon: 'search',\n          title: 'No packages to display',\n        }}\n      />\n    </Main>\n  ) : (\n    <Main className=\"add-100vh\">\n      <Empty\n        bgColor=\"white\"\n        title=\"Package data currently unavailable\"\n        body=\"Packages will be displayed as soon as the image is finished being built.\"\n        primaryAction={null}\n        secondaryActions={[]}\n      />\n    </Main>\n  );\n};\n\nImagePackagesTab.propTypes = {\n  imageVersion: PropTypes.object,\n};\n\nexport default ImagePackagesTab;\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, TabTitleText, Skeleton } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../../package.json';\n\nimport ImageDetailTab from './ImageDetailTab';\nimport ImageVersionTab from './ImageVersionsTab';\nimport ImagePackagesTab from './ImagePackagesTab';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../../components/Empty';\n\nimport { mapUrlToObj } from '../../constants';\n\n// conditional render for same index\nconst tabs = {\n  details: 0,\n  packages: 1,\n  versions: 1,\n};\n\nconst ImageDetailTabs = ({\n  imageData,\n  openUpdateWizard,\n  imageVersion,\n  isLoading,\n}) => {\n  const location = useLocation();\n  const history = useHistory();\n  const [activeTabKey, setActiveTabkey] = useState(tabs.details);\n  const activeTab = imageVersion ? 'imageTab' : 'imageSetTab';\n\n  const keys = [\n    'baseURL',\n    'imageSetVersion',\n    'imageSetTab',\n    'imageVersion',\n    'imageTab',\n    'packagesToggle',\n  ];\n  const imageUrlMapper = mapUrlToObj(location.pathname, keys);\n\n  const handleTabClick = (_event, tabIndex) => {\n    const selectedTab =\n      tabIndex === 0 ? 'details' : imageVersion ? 'packages' : 'versions';\n\n    imageUrlMapper[activeTab] = selectedTab;\n\n    history.push(imageUrlMapper.buildUrl());\n\n    setActiveTabkey(tabIndex);\n  };\n\n  useEffect(() => {\n    imageUrlMapper['imageTab']\n      ? setActiveTabkey(tabs[imageUrlMapper['imageTab']])\n      : setActiveTabkey(tabs[imageUrlMapper['imageSetTab']]);\n  }, [location.pathname]);\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <EmptyState\n          icon=\"question\"\n          title=\"Image not found\"\n          body=\"Please check you have the correct link with the correct image Id.\"\n          primaryAction={{\n            text: 'Back to Manage Images',\n            href: paths['manage-images'],\n          }}\n          secondaryActions={[]}\n        />\n      ) : (\n        <div className=\"edge-c-device--detail add-100vh\">\n          <Tabs\n            className=\"pf-u-ml-md\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={tabs.details}\n              title={<TabTitleText>Details</TabTitleText>}\n            >\n              <ImageDetailTab\n                imageData={imageData}\n                imageVersion={imageVersion}\n              />\n            </Tab>\n            {isLoading ? (\n              <Tab\n                title={\n                  <TabTitleText>\n                    <Skeleton width=\"75px\" />\n                  </TabTitleText>\n                }\n              ></Tab>\n            ) : imageVersion ? (\n              <Tab\n                eventKey={tabs.packages}\n                title={<TabTitleText>Packages</TabTitleText>}\n              >\n                <ImagePackagesTab imageVersion={imageVersion} />\n              </Tab>\n            ) : (\n              <Tab\n                eventKey={tabs.versions}\n                title={<TabTitleText>Versions</TabTitleText>}\n              >\n                <ImageVersionTab\n                  imageData={imageData}\n                  openUpdateWizard={openUpdateWizard}\n                />\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      )}\n    </>\n  );\n};\n\nImageDetailTabs.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nexport default ImageDetailTabs;\n","import React, {\n  Fragment,\n  Suspense,\n  useEffect,\n  useContext,\n  useState,\n} from 'react';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Stack, StackItem, Spinner, Bullseye } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { loadImageSetDetail } from '../../store/actions';\nimport { imageSetDetailReducer } from '../../store/reducers';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport DetailsHead from './DetailsHeader';\nimport ImageDetailTabs from './ImageDetailTabs';\nimport UpdateImageWizard from '../ImageManager/UpdateImageWizard';\n\nconst ImageDetail = () => {\n  const { imageId, imageVersionId } = useParams();\n  const { getRegistry } = useContext(RegistryContext);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const [updateWizard, setUpdateWizard] = useState({\n    isOpen: false,\n    updateId: null,\n  });\n  const [imageVersion, setImageVersion] = useState(null);\n\n  const imageSetData = useSelector(\n    ({ imageSetDetailReducer }) => ({\n      data: imageSetDetailReducer?.data || null,\n      isLoading: imageSetDetailReducer?.isLoading,\n      hasError: imageSetDetailReducer?.hasError,\n    }),\n    shallowEqual\n  );\n\n  const openUpdateWizard = (id) => {\n    history.push({\n      pathname: history.location.pathname,\n      search: new URLSearchParams({\n        update_image: true,\n      }).toString(),\n    });\n    setUpdateWizard((prevState) => ({\n      ...prevState,\n      isOpen: !prevState.isLoading,\n      updateId: id,\n    }));\n  };\n\n  useEffect(() => {\n    imageVersionId\n      ? setImageVersion(\n          imageSetData?.data?.Data?.images?.[\n            imageSetData?.data?.Data?.images?.findIndex(\n              (image) => image?.image?.ID == imageVersionId\n            )\n          ]\n        )\n      : setImageVersion(null);\n  }, [imageSetData, imageVersionId]);\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageSetDetailReducer,\n    });\n    loadImageSetDetail(dispatch, imageId);\n    return () => registered();\n  }, [imageId]);\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <Stack hasGutter>\n          <StackItem>\n            <DetailsHead\n              imageData={imageSetData}\n              imageVersion={imageVersion}\n              openUpdateWizard={openUpdateWizard}\n            />\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <ImageDetailTabs\n        imageData={imageSetData}\n        urlParam={imageId}\n        imageVersion={imageVersion}\n        openUpdateWizard={openUpdateWizard}\n        isLoading={imageSetData.isLoading}\n      />\n      {updateWizard.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateImageWizard\n            navigateBack={() => {\n              history.push({ pathname: history.location.pathname });\n              setUpdateWizard((prevState) => ({ ...prevState, isOpen: false }));\n            }}\n            updateImageID={updateWizard.updateId}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ImageDetail;\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["name","height","width","svgPath","yOffset","xOffset","exports","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","_exact","value","toUTCString","split","slice","trim","dateStringByType","type","exact","onlyDate","relative","reduce","acc","i","Date","now","invalid","DateFormat","_ref","_ref$type","extraTitle","_ref$tooltipProps","tooltipProps","dateObj","dateType","toString","element","arguments","length","undefined","Tooltip","content","addTooltip","dateByType","propTypes","UpdateImage","navigateBack","updateImageID","useState","user","setUser","dispatch","useDispatch","closeAction","CREATE_NEW_IMAGE_RESET","customRepoFlag","useFeatureFlags","getRegistry","useContext","RegistryContext","data","useSelector","imageDetailReducer","shallowEqual","useEffect","registered","register","loadImageDetail","insights","chrome","auth","getUser","then","result","onClose","customComponentMapper","review","ReviewStep","onSubmit","values","setIsSaving","payload","Id","image","ID","Name","version","Version","architecture","credentials","Installer","SshKey","username","Username","createNewImage","resp","addNotification","variant","title","meta","polling","id","fetcher","getEdgeImageStatus","condition","Status","onEvent","failure","success","loadEdgeImageSets","addImageToPoll","defaultArch","initialValues","isUpdate","Description","release","Distribution","release_options","getReleases","imageType","includesCustomRepos","Packages","map","pkg","ThirdPartyRepositories","repo","CustomPackages","schema","fields","component","componentTypes","className","isDynamic","inModal","buttonLabels","submit","showTitles","crossroads","updateDetails","imageOutput","registration","repositories","packages","customPackages","isSVG","diameter","PropTypes","defaultProps","dropdownItems","imageVersion","openUpdateWizard","imageData","images","actionsArray","push","DropdownItem","key","onClick","ImageBuildISOURL","Text","href","rel","target","DetailsHead","isOpen","setIsOpen","setData","Data","isLoading","hasError","Breadcrumb","BreadcrumbItem","Link","to","paths","image_set","isActive","Skeleton","TextContent","Split","SplitItem","TextList","TextListItem","T","StatusLabel","status","UpdatedAt","isFilled","Dropdown","position","DropdownPosition","toggle","DropdownToggle","toggleIndicator","CaretDownIcon","onToggle","newState","isDisabled","Images","ImageDetailTab","createSkeleton","rows","Array","detailsMapper","Created","outputType","index","Release","distributionMapper","userInfoMapper","packageMapper","ImageSetID","additional_packages","packageDiffMapper","Added","update_added","Removed","update_removed","Updated","update_updated","Checksum","Commit","OSTreeCommit","buildTextList","labelsToValueMapper","Object","entries","label","TextListItemVariants","ClipboardCopy","hoverTip","clickTip","replace","toLowerCase","Grid","span","GridItem","TextVariants","TextListVariants","defaultFilters","options","option","columnNames","sort","columnTransforms","cellWidth","ImageVersionsTab","latestImageVersion","setRows","imageSetId","rowInfo","imageStatus","isoURL","currentImageVersion","noApiSortFilter","imageTypeMapper","ImageType","CreatedAt","cells","truncateString","createRows","Main","GeneralTable","apiFilterSort","filters","loadTableData","loadImageSetDetail","tableData","count","Count","actionResolver","rowData","_event","_rowId","areActionsDisabled","defaultSort","direction","urlParam","toggleTable","filter","pack","packageData","arch","Button","isSmall","icon","iconPosition","indexToTabs","tabsToIndex","additional","all","ImagePackagesTab","location","useLocation","history","useHistory","splitUrl","pathname","defaultToggle","setPackageData","setToggleTable","InstalledPackages","toggleButton","toggleAction","toggleIndex","currentTab","join","toggleState","emptyFilterState","Empty","bgColor","body","primaryAction","secondaryActions","tabs","details","versions","ImageDetailTabs","activeTabKey","setActiveTabkey","activeTab","imageUrlMapper","mapUrlToObj","text","Tabs","activeKey","onSelect","tabIndex","selectedTab","buildUrl","Tab","eventKey","TabTitleText","useParams","imageId","imageVersionId","updateId","updateWizard","setUpdateWizard","setImageVersion","imageSetData","imageSetDetailReducer","search","URLSearchParams","update_image","prevState","findIndex","Fragment","PageHeader","Stack","hasGutter","StackItem","Suspense","fallback","Bullseye","Spinner","UpdateImageWizard","baseEach","isArrayLike","module","collection","iteratee","baseFlatten","baseAssignValue","keyBy","createAggregator","arrayMap","baseIteratee","baseMap","isArray"],"sourceRoot":""}