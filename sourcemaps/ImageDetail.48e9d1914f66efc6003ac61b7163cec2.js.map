{"version":3,"file":"js/ImageDetail.f06f49868e87b691b0e7.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Breadcrumb/BreadcrumbItem.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/Routes/ImageManager/UpdateImageWizard.js","webpack:///./src/Routes/ImageManagerDetail/DetailsHeader.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageVersionsTab.js","webpack:///./src/Routes/ImageManagerDetail/ImagePackagesTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTabs.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetail.js","webpack:///./src/api/images/index.js","webpack:///./src/constants/status.js","webpack:///./src/components/Status.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nimport { useOUIAProps } from '../../helpers';\nexport const Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = useOUIAProps(Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: css(styles.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: styles.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nBreadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport AngleRightIcon from '@patternfly/react-icons/dist/esm/icons/angle-right-icon';\nimport styles from '@patternfly/react-styles/css/components/Breadcrumb/breadcrumb';\nimport { css } from '@patternfly/react-styles';\nexport const BreadcrumbItem = (_a) => {\n    var { children = null, className: classNameProp = '', to = undefined, isActive = false, isDropdown = false, showDivider, target = undefined, component = 'a', render = undefined } = _a, props = __rest(_a, [\"children\", \"className\", \"to\", \"isActive\", \"isDropdown\", \"showDivider\", \"target\", \"component\", \"render\"]);\n    const Component = component;\n    const ariaCurrent = isActive ? 'page' : undefined;\n    const className = css(styles.breadcrumbLink, isActive && styles.modifiers.current);\n    return (React.createElement(\"li\", Object.assign({}, props, { className: css(styles.breadcrumbItem, classNameProp) }),\n        showDivider && (React.createElement(\"span\", { className: styles.breadcrumbItemDivider },\n            React.createElement(AngleRightIcon, null))),\n        component === 'button' && (React.createElement(\"button\", { className: className, \"aria-current\": ariaCurrent, type: \"button\" }, children)),\n        isDropdown && React.createElement(\"span\", { className: css(styles.breadcrumbDropdown) }, children),\n        render && render({ className, ariaCurrent }),\n        to && !render && (React.createElement(Component, { href: to, target: target, className: className, \"aria-current\": ariaCurrent }, children)),\n        !to && component !== 'button' && !isDropdown && children));\n};\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n//# sourceMappingURL=BreadcrumbItem.js.map","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React, { useState, useEffect, useContext } from 'react';\nimport ImageCreator from '../../components/ImageCreator';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport {\n  review,\n  packages,\n  updateDetails,\n  registration,\n  repositories,\n  imageOutput,\n  customPackages,\n  additionalCustomPackages,\n} from './steps';\nimport { Bullseye, Backdrop, Spinner } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport ReviewStep from '../../components/form/ReviewStep';\nimport {\n  createNewImage,\n  addImageToPoll,\n  loadImageDetail,\n} from '../../store/actions';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { imageDetailReducer } from '../../store/reducers';\nimport { getEdgeImageStatus } from '../../api/images';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { useFeatureFlags, getReleases } from '../../utils';\nimport { temporaryReleases, supportedReleases } from '../../constants';\n\nconst UpdateImage = ({ navigateBack, updateImageID, reload }) => {\n  const [user, setUser] = useState();\n  const dispatch = useDispatch();\n  const closeAction = () => {\n    navigateBack();\n    reload && reload();\n  };\n  const temporaryReleasesFlag = useFeatureFlags(\n    'fleet-management.temporary-releases'\n  );\n\n  const imageWizardFeatureFlag = useFeatureFlags(\n    'edge-management.image_wizard_ui'\n  );\n\n  const { getRegistry } = useContext(RegistryContext);\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({\n      data: imageDetailReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageDetailReducer,\n    });\n    updateImageID && loadImageDetail(dispatch, updateImageID);\n    return () => registered();\n  }, [dispatch]);\n\n  useEffect(() => {\n    (async () => {\n      insights?.chrome?.auth\n        ?.getUser()\n        .then((result) => setUser(result != undefined ? result : {}));\n    })();\n  }, []);\n\n  return user && data ? (\n    <ImageCreator\n      onClose={closeAction}\n      customComponentMapper={{\n        review: ReviewStep,\n      }}\n      onSubmit={({ values, setIsSaving }) => {\n        setIsSaving(() => true);\n        const payload = {\n          ...values,\n          Id: data?.image?.ID,\n          name: data?.image?.Name,\n          version: data?.image?.Version + 1,\n          architecture: 'x86_64',\n          credentials: values.credentials\n            ? values.credentials\n            : data?.image?.Installer.SshKey,\n          username: values.username\n            ? values.username\n            : data?.image?.Installer.Username,\n        };\n\n        createNewImage(dispatch, payload, (resp) => {\n          dispatch({\n            ...addNotification({\n              variant: 'info',\n              title: 'Updating image',\n              description: `${resp.value.Name} image was added to the queue.`,\n            }),\n            meta: {\n              polling: {\n                id: `FETCH_IMAGE_${resp.value.ID}_BUILD_STATUS`,\n                fetcher: () => getEdgeImageStatus(resp.value.ID),\n                condition: (resp) => {\n                  switch (resp.Status) {\n                    case 'BUILDING':\n                      return [true, ''];\n                    case 'ERROR':\n                      return [false, 'failure'];\n                    default:\n                      return [false, 'success'];\n                  }\n                },\n                onEvent: {\n                  failure: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'danger',\n                          title: 'Image build failed',\n                          description: `${resp.value.Name} image build is completed unsuccessfully`,\n                        })\n                      ),\n                  ],\n                  success: [\n                    (dispatch) =>\n                      dispatch(\n                        addNotification({\n                          variant: 'success',\n                          title: 'Image is ready',\n                          description: `${resp.value.Name} image build is completed`,\n                        })\n                      ),\n                  ],\n                },\n              },\n            },\n          });\n          closeAction();\n          dispatch(\n            addImageToPoll({ name: data.value.Name, id: data.value.ID })\n          );\n        });\n      }}\n      defaultArch=\"x86_64\"\n      initialValues={{\n        imageID: data?.image.ID,\n        name: data?.image?.Name,\n        isUpdate: true,\n        description: data?.image?.Description,\n        credentials: data?.image?.Installer.SshKey,\n        username: data?.image?.Installer.Username,\n        version: data?.image?.Version,\n        release: data?.image?.Distribution,\n        release_options: temporaryReleasesFlag\n          ? getReleases(data?.image?.Distribution, [\n              ...supportedReleases,\n              ...temporaryReleases,\n            ])\n          : getReleases(data?.image?.Distribution),\n        imageType: ['rhel-edge-commit'],\n        'selected-packages': data?.image?.Packages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n        'third-party-repositories': data?.image?.ThirdPartyRepositories?.map(\n          (repo) => ({\n            id: repo.ID,\n            name: repo.Name,\n            ...repo,\n          })\n        ),\n        'initial-custom-repositories': data?.image?.ThirdPartyRepositories?.map(\n          (repo) => ({\n            id: repo.ID,\n            name: repo.Name,\n            ...repo,\n          })\n        ),\n        'custom-packages': data?.image?.CustomPackages?.map((pkg) => ({\n          ...pkg,\n          name: pkg.Name,\n        })),\n      }}\n      test=\"\"\n      schema={{\n        fields: [\n          {\n            component: componentTypes.WIZARD,\n            name: 'image-builder-wizard',\n            className: 'image-builder',\n            isDynamic: true,\n            inModal: true,\n            buttonLabels: {\n              submit: 'Update image',\n            },\n            showTitles: true,\n            title: `Update image: ${data?.image?.Name}`,\n            crossroads: [\n              'target-environment',\n              'release',\n              'imageType',\n              'third-party-repositories',\n            ],\n            // order in this array does not reflect order in wizard nav, this order is managed inside\n            // of each step by `nextStep` property!\n            fields: [\n              updateDetails,\n              imageOutput,\n              registration,\n              repositories(imageWizardFeatureFlag),\n              packages,\n              additionalCustomPackages,\n              review,\n              customPackages,\n            ],\n          },\n        ],\n      }}\n    />\n  ) : (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  );\n};\n\nUpdateImage.propTypes = {\n  navigateBack: PropTypes.func,\n  updateImageID: PropTypes.number,\n  reload: PropTypes.func,\n};\nUpdateImage.defaultProps = {\n  navigateBack: () => undefined,\n};\n\nexport default UpdateImage;\n","import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport {\n  Text,\n  TextList,\n  TextListItem,\n  TextContent,\n  Skeleton,\n  Breadcrumb,\n  BreadcrumbItem,\n  Split,\n  SplitItem,\n  Dropdown,\n  DropdownItem,\n  DropdownToggle,\n  DropdownPosition,\n  Tooltip,\n} from '@patternfly/react-core';\nimport Status from '../../components/Status';\nimport { routes as paths } from '../../constants/routeMapper';\nimport CaretDownIcon from '@patternfly/react-icons/dist/esm/icons/caret-down-icon';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\n\nconst dropdownItems = (data, imageVersion, isoURL, openUpdateWizard) => {\n  const imageData = imageVersion ? imageVersion : data?.LastImageDetails;\n\n  const actionsArray = [];\n\n  imageData?.image?.ID &&\n    actionsArray.push(\n      <DropdownItem\n        key=\"create-new-version-button\"\n        component=\"button\"\n        onClick={() => openUpdateWizard(imageData?.image?.ID)}\n      >\n        Create new version\n      </DropdownItem>\n    );\n\n  isoURL &&\n    actionsArray.push(\n      <DropdownItem key=\"download-button\" component=\"button\">\n        <Text\n          className=\"force-text-black remove-underline\"\n          component=\"a\"\n          href={isoURL}\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n        >\n          Download installable .iso for newest image\n        </Text>\n      </DropdownItem>\n    );\n  return actionsArray;\n};\n\nconst DetailsHead = ({ imageData, imageVersion, openUpdateWizard }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    setData(imageData?.data);\n  }, [imageData]);\n\n  const actionsLabel = 'Actions for image set details view';\n  const dropdownId = 'image-set-details-dropdown';\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <Breadcrumb>\n          <BreadcrumbItem>\n            <Link to={paths.manageImages}>Back to Manage Images</Link>\n          </BreadcrumbItem>\n        </Breadcrumb>\n      ) : (\n        <>\n          <Breadcrumb>\n            <BreadcrumbItem>\n              <Link to={paths.manageImages}>Manage Images</Link>\n            </BreadcrumbItem>\n            {imageVersion ? (\n              <BreadcrumbItem>\n                <Link to={`${paths.manageImages}/${data?.ImageSet?.ID}`}>\n                  {data?.ImageSet?.Name}\n                </Link>\n              </BreadcrumbItem>\n            ) : (\n              <BreadcrumbItem isActive>\n                {data?.ImageSet?.Name || <Skeleton width=\"100px\" />}\n              </BreadcrumbItem>\n            )}\n            {imageVersion && (\n              <BreadcrumbItem isActive>\n                {imageVersion?.image?.Version}\n              </BreadcrumbItem>\n            )}\n          </Breadcrumb>\n\n          <TextContent>\n            <Split>\n              <SplitItem>\n                <TextList component=\"dl\">\n                  <TextListItem\n                    component=\"h1\"\n                    className=\"grid-align-center pf-u-mb-0\"\n                  >\n                    {data?.ImageSet?.Name || <Skeleton width=\"150px\" />}\n                  </TextListItem>\n                  <TextListItem className=\"pf-u-pt-sm\" component=\"dd\">\n                    {imageVersion?.image?.Status ||\n                    data?.LastImageDetails?.image?.Status ? (\n                      <Status\n                        type={\n                          imageVersion\n                            ? imageVersion?.image?.Status.toLowerCase()\n                            : data?.LastImageDetails?.image?.Status.toLowerCase()\n                        }\n                      />\n                    ) : (\n                      <Skeleton width=\"100px\" />\n                    )}\n                  </TextListItem>\n                  {imageVersion?.image?.UpdatedAt ||\n                  data?.LastImageDetails?.image?.UpdatedAt ? (\n                    <TextListItem component=\"p\">\n                      {`Last updated `}\n                      <DateFormat\n                        date={\n                          imageVersion\n                            ? imageVersion?.image?.UpdatedAt\n                            : data?.LastImageDetails?.image?.UpdatedAt\n                        }\n                      />\n                    </TextListItem>\n                  ) : (\n                    <Skeleton width=\"200px\" />\n                  )}\n                </TextList>\n              </SplitItem>\n              <SplitItem isFilled></SplitItem>\n              <SplitItem>\n                <Dropdown\n                  position={DropdownPosition.right}\n                  toggle={\n                    <DropdownToggle\n                      id={dropdownId}\n                      toggleIndicator={CaretDownIcon}\n                      onToggle={(newState) => setIsOpen(newState)}\n                      isDisabled={\n                        (imageVersion\n                          ? imageVersion?.image?.Status\n                          : data?.LastImageDetails?.image.Status) ===\n                          'BUILDING' || false\n                      }\n                      aria-label={actionsLabel}\n                    >\n                      <Tooltip\n                        content={actionsLabel}\n                        reference={() => document.getElementById(dropdownId)}\n                      />\n                      Actions\n                    </DropdownToggle>\n                  }\n                  isOpen={isOpen}\n                  dropdownItems={dropdownItems(\n                    data,\n                    imageVersion,\n                    data?.ImageBuildIsoURL,\n                    openUpdateWizard\n                  )}\n                />\n              </SplitItem>\n            </Split>\n          </TextContent>\n        </>\n      )}\n    </>\n  );\n};\n\nDetailsHead.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default DetailsHead;\n","import React, { Fragment, useEffect, useState } from 'react';\nimport {\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n  Text,\n  TextVariants,\n  Grid,\n  GridItem,\n  ClipboardCopy,\n  Skeleton,\n} from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { distributionMapper } from '../../constants';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Link } from 'react-router-dom';\n\nconst ImageDetailTab = ({ imageData, imageVersion }) => {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    imageVersion\n      ? setData(imageVersion)\n      : setData(imageData?.data?.LastImageDetails);\n  }, [imageData, imageVersion]);\n\n  const createSkeleton = (rows) =>\n    [...Array(rows * 2)].map((_, key) => <Skeleton width=\"180px\" key={key} />);\n\n  const dateFormat = () => <DateFormat date={data?.image?.['CreatedAt']} />;\n\n  const detailsMapper = {\n    Version: 'Version',\n    Created: () => dateFormat(),\n    'Type(s)': () =>\n      data?.image?.['OutputTypes']?.map((outputType, index) => (\n        <div key={index}>{outputType}</div>\n      )),\n    Release: () => distributionMapper?.[data?.image?.['Distribution']],\n    //Size: 'Size',\n    Description: 'Description',\n  };\n\n  const userInfoMapper = {\n    Username: () => data?.image?.Installer?.Username,\n    'SSH key': () => data?.image?.Installer?.SshKey,\n  };\n  const renderAdditionalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths.manageImages}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/additional`}\n      >\n        {data?.additional_packages}\n      </Link>\n    );\n  };\n\n  const renderTotalPackageLink = () => {\n    return (\n      <Link\n        to={`${paths.manageImages}/${data?.image?.ImageSetID}/versions/${data?.image?.ID}/packages/all`}\n      >\n        {data?.packages}\n      </Link>\n    );\n  };\n\n  const packageMapper = {\n    'Total additional packages': renderAdditionalPackageLink,\n    'Total packages': renderTotalPackageLink,\n  };\n\n  const packageDiffMapper = {\n    Added: () => data?.update_added,\n    Removed: () => data?.update_removed,\n    Updated: () => data?.update_updated,\n  };\n\n  if (data?.image?.Installer?.Checksum) {\n    detailsMapper['SHA-256 checksum'] = () => data?.image?.Installer?.Checksum;\n  }\n\n  if (data?.image?.Commit?.OSTreeCommit) {\n    detailsMapper['Ostree commit hash'] = () =>\n      data?.image?.Commit?.OSTreeCommit;\n  }\n\n  const buildTextList = (labelsToValueMapper) =>\n    data\n      ? Object.entries(labelsToValueMapper).map(([label, value], index) => {\n          return (\n            <Fragment key={index}>\n              <TextListItem\n                className=\"details-label\"\n                component={TextListItemVariants.dt}\n              >\n                {label}\n              </TextListItem>\n              {label === 'SHA-256 checksum' ||\n              label === 'Ostree commit hash' ||\n              (label === 'SSH key' && value()) ? (\n                <TextListItem component={TextListItemVariants.dd}>\n                  <ClipboardCopy\n                    hoverTip=\"Copy\"\n                    clickTip=\"Copied\"\n                    variant=\"expansion\"\n                    className=\"pf-u-text-break-word\"\n                    id={`${label\n                      .replace(/\\s+/g, '-')\n                      .toLowerCase()}-clipboard-copy`}\n                  >\n                    {typeof value === 'function'\n                      ? value() || 'Unavailable'\n                      : data?.image?.[value] || 'Unavailable'}\n                  </ClipboardCopy>\n                </TextListItem>\n              ) : (\n                <TextListItem\n                  className=\"pf-u-text-break-word\"\n                  component={TextListItemVariants.dd}\n                >\n                  {typeof value === 'function'\n                    ? value() === 0\n                      ? 0\n                      : value() || 'Unavailable'\n                    : data?.image?.[value] || 'Unavailable'}\n                </TextListItem>\n              )}\n            </Fragment>\n          );\n        })\n      : null;\n\n  return (\n    <TextContent className=\"pf-u-ml-lg pf-u-mt-md\">\n      <Grid span={12}>\n        <GridItem span={5}>\n          <Text component={TextVariants.h2}>\n            {imageVersion ? 'Details' : 'Most recent image'}\n          </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(detailsMapper) || createSkeleton(6)}\n          </TextList>\n          <Text component={TextVariants.h2}>User information </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(userInfoMapper) || createSkeleton(2)}\n          </TextList>\n        </GridItem>\n        <GridItem span={1} />\n        <GridItem span={6}>\n          <Text component={TextVariants.h2}>Packages </Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageMapper) || createSkeleton(3)}\n          </TextList>\n          <Text component={TextVariants.h2}>Changes from previous version</Text>\n          <TextList component={TextListVariants.dl}>\n            {buildTextList(packageDiffMapper) || createSkeleton(3)}\n          </TextList>\n        </GridItem>\n      </Grid>\n    </TextContent>\n  );\n};\n\nImageDetailTab.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n};\n\nexport default ImageDetailTab;\n","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\nimport { Link } from 'react-router-dom';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Status from '../../components/Status';\nimport { imageTypeMapper } from '../../constants';\nimport { getImageSetViewVersions } from '../../api/images';\nimport { cellWidth } from '@patternfly/react-table';\nimport { truncateString } from '../../utils';\nimport useApi from '../../hooks/useApi';\n\nconst defaultFilters = [\n  {\n    label: 'Status',\n    type: 'checkbox',\n    options: [\n      { option: 'Building', value: 'BUILDING' },\n      { option: 'Created', value: 'CREATED' },\n      { option: 'Error', value: 'ERROR' },\n      { option: 'Ready', value: 'SUCCESS' },\n    ],\n  },\n];\n\nconst columnNames = [\n  {\n    title: 'Version',\n    type: 'version',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Output',\n    type: 'image_type',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Ostree commit hash',\n    type: 'ostree_commit_hash',\n    sort: false,\n    columnTransforms: [cellWidth(20)],\n  },\n  {\n    title: 'Created',\n    type: 'created_at',\n    sort: true,\n    columnTransforms: [cellWidth(15)],\n  },\n  {\n    title: 'Status',\n    type: 'status',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n];\n\nconst createRows = (data, imageSetId, latestImageVersion) => {\n  return data?.map((image) => ({\n    rowInfo: {\n      id: image?.ID,\n      imageStatus: image?.Status,\n      isoURL: image?.ImageBuildIsoURL,\n      latestImageVersion,\n      currentImageVersion: image.Version,\n    },\n    noApiSortFilter: [\n      image?.Version,\n      imageTypeMapper[image?.ImageType],\n      image?.CreatedAt,\n      image?.Status,\n    ],\n    cells: [\n      {\n        title: (\n          <Link\n            to={`${paths.manageImages}/${imageSetId}/versions/${image.ID}/details`}\n          >\n            {image?.Version}\n          </Link>\n        ),\n      },\n      {\n        title: imageTypeMapper[image?.ImageType],\n      },\n      {\n        title: image?.CommitCheckSum ? (\n          <Tooltip content={<div>{image.CommitCheckSum}</div>}>\n            <span>{truncateString(image.CommitCheckSum, 5, 5)}</span>\n          </Tooltip>\n        ) : (\n          <Text>Unavailable</Text>\n        ),\n      },\n      {\n        title: <DateFormat date={image?.CreatedAt} />,\n      },\n      {\n        title: <Status type={image?.Status.toLowerCase()} />,\n      },\n    ],\n  }));\n};\n\nconst ImageVersionsTab = ({ imageData, openUpdateWizard }) => {\n  const imageSetID = imageData?.data?.ImageSet?.ID;\n  const latestImageVersion = imageData?.data?.ImageSet?.Version;\n\n  const [response, fetchImageSetVersions] = useApi({\n    api: ({ query }) =>\n      getImageSetViewVersions({\n        imageSetID: imageSetID,\n        query,\n      }),\n    tableReload: true,\n  });\n\n  const { data, isLoading, hasError } = response;\n\n  const actionResolver = (rowData) => {\n    const actionsArray = [];\n    if (rowData.rowInfo?.isoURL) {\n      actionsArray.push({\n        title: 'Download',\n        onClick: (_event, _rowId, rowData) => {\n          window.open(rowData.rowInfo.isoURL);\n        },\n      });\n    }\n\n    if (\n      rowData.rowInfo?.imageStatus === 'SUCCESS' ||\n      rowData.rowInfo?.imageStatus === 'ERROR'\n    ) {\n      actionsArray.push({\n        title: 'Update Image',\n        onClick: (_event, _rowId, rowData) => {\n          openUpdateWizard(rowData.rowInfo.id);\n        },\n        isDisabled:\n          rowData?.rowInfo?.latestImageVersion !==\n          rowData?.rowInfo?.currentImageVersion,\n      });\n    }\n\n    if (rowData.rowInfo?.imageStatus === 'BUILDING' && rowData.rowInfo?.id) {\n      actionsArray.push({\n        title: '',\n      });\n    }\n\n    return actionsArray;\n  };\n  const areActionsDisabled = (rowData) =>\n    rowData.rowInfo?.imageStatus === 'BUILDING';\n\n  return (\n    <section className=\"add-100vh pf-l-page__main-section pf-c-page__main-section\">\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        filters={defaultFilters}\n        loadTableData={fetchImageSetVersions}\n        tableData={{\n          count: data?.count,\n          data: data?.data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columnNames}\n        rows={createRows(data?.data, imageSetID, latestImageVersion)}\n        actionResolver={actionResolver}\n        areActionsDisabled={areActionsDisabled}\n        defaultSort={{ index: 3, direction: 'desc' }}\n      />\n    </section>\n  );\n};\nImageVersionsTab.propTypes = {\n  imageData: PropTypes.object,\n  urlParam: PropTypes.string,\n  imageSetID: PropTypes.number,\n  createRows: PropTypes.func,\n  openUpdateWizard: PropTypes.func,\n};\n\nexport default ImageVersionsTab;\n","import React, { useState, useEffect } from 'react';\nimport { Button } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport PropTypes from 'prop-types';\nimport { cellWidth } from '@patternfly/react-table';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport Empty from '../../components/Empty';\n\nconst defaultFilters = [{ label: 'Name', type: 'text' }];\n\nconst columnNames = [\n  {\n    title: 'Name',\n    type: 'name',\n    sort: true,\n    columnTransforms: [cellWidth(35)],\n  },\n  {\n    title: 'Version',\n    type: 'version',\n    sort: false,\n    columnTransforms: [cellWidth(25)],\n  },\n  {\n    title: 'Release',\n    type: 'release',\n    sort: false,\n    columnTransforms: [cellWidth(35)],\n  },\n  //{ title: 'Type', type: 'type', sort: false, columnTransforms: [cellWidth(35)] },\n];\n\nconst createRows = ({\n  distribution,\n  installedPackages,\n  addedPackages,\n  showAll,\n}) => {\n  const rowData =\n    showAll === 0\n      ? installedPackages.filter(\n          (pack) =>\n            addedPackages?.filter((image) => pack.name === image.Name).length >\n            0\n        )\n      : installedPackages;\n  return rowData.map((packageData) => ({\n    noApiSortFilter: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n    ],\n    cells: [\n      packageData?.name,\n      packageData?.version,\n      packageData?.release,\n      //packageData?.type,\n      {\n        title: (\n          <a\n            href={`https://access.redhat.com/downloads/content/rhel---${distribution}/x86_64/7416/${packageData?.name}/${packageData?.version}-${packageData?.release}/${packageData?.arch}/fd431d51/package`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            <Button\n              variant=\"link\"\n              isSmall\n              icon={<ExternalLinkAltIcon />}\n              iconPosition=\"right\"\n            >\n              More information\n            </Button>\n          </a>\n        ),\n      },\n    ],\n  }));\n};\n\nconst indexToTabs = {\n  0: 'additional',\n  1: 'all',\n};\n\nconst tabsToIndex = {\n  additional: 0,\n  all: 1,\n};\n\nconst ImagePackagesTab = ({ imageVersion }) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n\n  const splitUrl = pathname.split('/');\n  const defaultToggle = splitUrl.length === 7 ? tabsToIndex[splitUrl[6]] : 1;\n  // Distribution examples would be: rhel-86, rhel-90, and rhel-100\n  const distribution = imageVersion?.image?.Distribution?.split('-')[1].slice(\n    0,\n    -1\n  );\n\n  const [packageData, setPackageData] = useState({});\n  const [toggleTable, setToggleTable] = useState(defaultToggle);\n\n  useEffect(() => {\n    setPackageData(imageVersion);\n  }, [imageVersion]);\n\n  useEffect(() => {\n    splitUrl[5] !== indexToTabs[toggleTable] && setToggleTable(defaultToggle);\n  }, [splitUrl]);\n\n  const handleToggleTable = (toggleIndex) => {\n    const currentTab = splitUrl[5]?.toLowerCase();\n    setToggleTable(toggleIndex);\n    if (currentTab === 'packages') {\n      if (splitUrl.length === 7) {\n        splitUrl[6] = indexToTabs[toggleIndex];\n      } else {\n        splitUrl.push(indexToTabs[toggleIndex]);\n      }\n\n      history.push(splitUrl.join('/'));\n    }\n  };\n\n  return imageVersion?.image?.Commit?.Status === 'SUCCESS' ? (\n    <section className=\"add-100vh pf-l-page__main-section pf-c-page__main-section\">\n      <GeneralTable\n        apiFilterSort={false}\n        filters={defaultFilters}\n        tableData={{\n          count:\n            toggleTable === 0\n              ? packageData?.additional_packages\n              : packageData?.packages,\n          isLoading: false,\n          hasError: false,\n        }}\n        columnNames={columnNames}\n        rows={\n          packageData?.image?.Commit?.InstalledPackages\n            ? createRows({\n                distribution: distribution,\n                installedPackages:\n                  packageData?.image?.Commit?.InstalledPackages,\n                addedPackages: packageData?.image?.Packages,\n                showAll: toggleTable,\n              })\n            : []\n        }\n        actionResolver={() => []}\n        areActionsDisabled={() => true}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        toggleButton={[\n          { title: 'Additional', key: 0 },\n          { title: 'All', key: 1 },\n        ]}\n        toggleAction={handleToggleTable}\n        toggleState={toggleTable}\n        emptyFilterState={{\n          icon: 'search',\n          title: 'No packages to display',\n        }}\n      />\n    </section>\n  ) : (\n    <section className=\"add-100vh pf-l-page__main-section pf-c-page__main-section\">\n      <Empty\n        bgColor=\"white\"\n        title=\"Package data currently unavailable\"\n        body=\"Packages will be displayed as soon as the image is finished being built.\"\n        primaryAction={null}\n        secondaryActions={[]}\n      />\n    </section>\n  );\n};\n\nImagePackagesTab.propTypes = {\n  imageVersion: PropTypes.object,\n};\n\nexport default ImagePackagesTab;\n","import React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, TabTitleText, Skeleton } from '@patternfly/react-core';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { routes as paths } from '../../constants/routeMapper';\n\nimport ImageDetailTab from './ImageDetailTab';\nimport ImageVersionTab from './ImageVersionsTab';\nimport ImagePackagesTab from './ImagePackagesTab';\nimport PropTypes from 'prop-types';\nimport EmptyState from '../../components/Empty';\n\nimport { mapUrlToObj } from '../../utils';\n\n// conditional render for same index\nconst tabs = {\n  details: 0,\n  packages: 1,\n  versions: 1,\n};\n\nconst ImageDetailTabs = ({\n  imageData,\n  openUpdateWizard,\n  imageVersion,\n  isLoading,\n}) => {\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [activeTabKey, setActiveTabkey] = useState(tabs.details);\n  const activeTab = imageVersion ? 'imageTab' : 'imageSetTab';\n\n  const keys = [\n    'baseURL',\n    'imageSetVersion',\n    'imageSetTab',\n    'imageVersion',\n    'imageTab',\n    'packagesToggle',\n  ];\n  const imageUrlMapper = mapUrlToObj(pathname, keys);\n\n  const handleTabClick = (_event, tabIndex) => {\n    const selectedTab =\n      tabIndex === 0 ? 'details' : imageVersion ? 'packages' : 'versions';\n\n    imageUrlMapper[activeTab] = selectedTab;\n\n    history.push(imageUrlMapper.buildUrl());\n\n    setActiveTabkey(tabIndex);\n  };\n\n  useEffect(() => {\n    imageUrlMapper['imageTab']\n      ? setActiveTabkey(tabs[imageUrlMapper['imageTab']])\n      : setActiveTabkey(tabs[imageUrlMapper['imageSetTab']]);\n  }, [pathname]);\n\n  return (\n    <>\n      {!imageData.isLoading && imageData.hasError ? (\n        <EmptyState\n          icon=\"question\"\n          title=\"Image not found\"\n          body=\"Please check you have the correct link with the correct image Id.\"\n          primaryAction={{\n            text: 'Back to Manage Images',\n            href: paths.manageImages,\n          }}\n          secondaryActions={[]}\n        />\n      ) : (\n        <div className=\"edge-c-device--detail add-100vh\">\n          <Tabs\n            className=\"pf-u-ml-md\"\n            activeKey={activeTabKey}\n            onSelect={handleTabClick}\n          >\n            <Tab\n              eventKey={tabs.details}\n              title={<TabTitleText>Details</TabTitleText>}\n            >\n              <ImageDetailTab\n                imageData={imageData}\n                imageVersion={imageVersion}\n              />\n            </Tab>\n            {isLoading ? (\n              <Tab\n                title={\n                  <TabTitleText>\n                    <Skeleton width=\"75px\" />\n                  </TabTitleText>\n                }\n              ></Tab>\n            ) : imageVersion ? (\n              <Tab\n                eventKey={tabs.packages}\n                title={<TabTitleText>Packages</TabTitleText>}\n              >\n                <ImagePackagesTab imageVersion={imageVersion} />\n              </Tab>\n            ) : (\n              <Tab\n                eventKey={tabs.versions}\n                title={<TabTitleText>Versions</TabTitleText>}\n              >\n                <ImageVersionTab\n                  imageData={imageData}\n                  openUpdateWizard={openUpdateWizard}\n                />\n              </Tab>\n            )}\n          </Tabs>\n        </div>\n      )}\n    </>\n  );\n};\n\nImageDetailTabs.propTypes = {\n  imageData: PropTypes.object,\n  imageVersion: PropTypes.object,\n  openUpdateWizard: PropTypes.func,\n  isLoading: PropTypes.bool,\n};\n\nexport default ImageDetailTabs;\n","import React, { Fragment, Suspense, useEffect, useState } from 'react';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Stack, StackItem, Spinner, Bullseye } from '@patternfly/react-core';\nimport { useParams, useHistory, useLocation } from 'react-router-dom';\nimport DetailsHead from './DetailsHeader';\nimport ImageDetailTabs from './ImageDetailTabs';\nimport UpdateImageWizard from '../ImageManager/UpdateImageWizard';\nimport useApi from '../../hooks/useApi';\nimport { getImageSetView } from '../../api/images';\n\nconst ImageDetail = () => {\n  const { imageId, imageVersionId } = useParams();\n  const history = useHistory();\n  const { pathname } = useLocation();\n  const [updateWizard, setUpdateWizard] = useState({\n    isOpen: false,\n    updateId: null,\n  });\n  const [imageVersion, setImageVersion] = useState(null);\n\n  const [response, fetchImageSetDetails] = useApi({\n    api: getImageSetView,\n    id: imageVersionId ? `${imageId}/versions/${imageVersionId}` : `${imageId}`,\n    tableReload: true,\n  });\n\n  const { data, isLoading } = response;\n\n  const openUpdateWizard = (id) => {\n    history.push({\n      pathname,\n      search: new URLSearchParams({\n        update_image: true,\n      }).toString(),\n    });\n    setUpdateWizard((prevState) => ({\n      ...prevState,\n      isOpen: !prevState.isLoading,\n      updateId: id,\n    }));\n  };\n\n  useEffect(() => {\n    imageVersionId\n      ? setImageVersion(data?.ImageDetails)\n      : setImageVersion(null);\n  }, [response, imageVersionId]);\n\n  useEffect(() => {\n    fetchImageSetDetails();\n  }, [imageId, imageVersionId]);\n\n  const reload = async () => {\n    await fetchImageSetDetails();\n  };\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <Stack hasGutter>\n          <StackItem>\n            <DetailsHead\n              imageData={response}\n              imageVersion={imageVersion}\n              openUpdateWizard={openUpdateWizard}\n            />\n          </StackItem>\n        </Stack>\n      </PageHeader>\n      <ImageDetailTabs\n        imageData={response}\n        urlParam={imageId}\n        imageVersion={imageVersion}\n        openUpdateWizard={openUpdateWizard}\n        isLoading={isLoading}\n      />\n      {updateWizard.isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <UpdateImageWizard\n            navigateBack={() => {\n              history.push({ pathname });\n              setUpdateWizard((prevState) => ({ ...prevState, isOpen: false }));\n            }}\n            updateImageID={updateWizard.updateId}\n            reload={reload}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nexport default ImageDetail;\n","import {\n  CONTENT_SOURCES_API,\n  EDGE_API,\n  IMAGE_BUILDER_API,\n  getTableParams,\n} from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const checkImageName = (name) => {\n  const payload = {\n    name,\n  };\n  return instance.post(`${EDGE_API}/images/checkImageName`, payload);\n};\n\nexport const fetchImageStatus = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const fetchActiveImages = ({ limit = 100, offset = 0 } = {}) => {\n  return instance.get(\n    `${IMAGE_BUILDER_API}/composes?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const createImage = ({\n  Id,\n  name,\n  version,\n  description,\n  release,\n  architecture,\n  username,\n  credentials,\n  imageType: imageTypes,\n  'selected-packages': packages,\n  'third-party-repositories': thirdPartyRepositories,\n  'custom-packages': customPackages,\n}) => {\n  let [imageType] = imageTypes || [];\n  if (imageTypes.length > 1) {\n    imageType = 'rhel-edge-installer';\n  }\n  const payload = {\n    name,\n    version,\n    description,\n    distribution: release,\n    imageType: imageType,\n    packages: packages?.map((item) => ({ name: item.name })),\n    outputTypes: imageTypes,\n    commit: {\n      arch: architecture,\n    },\n    installer: {\n      username,\n      sshkey: credentials,\n    },\n    thirdPartyRepositories: thirdPartyRepositories?.map((repo) => ({\n      ID: repo.id,\n      Name: repo.name,\n      URL: repo.URL,\n      uuid: repo.uuid,\n    })),\n    customPackages: customPackages?.map((repo) => ({ Name: repo.name })),\n  };\n\n  let endpoint = `${EDGE_API}/images`;\n\n  if (version > 1) {\n    endpoint += `/${Id}/update`;\n  }\n\n  return instance.post(endpoint, payload);\n};\n\nexport const getImageSet = ({\n  id,\n  q = {\n    limit: 10,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/${id}?${query}`);\n};\n\nexport const getImageSetViewVersions = ({\n  imageSetID,\n  query = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/image-sets/view/${imageSetID}/versions?${q}`\n  );\n};\n\nexport const getImageSetView = ({ id }) => {\n  return instance.get(`${EDGE_API}/image-sets/view/${id}`);\n};\n\nexport const getImagePackageMetadata = (id) => {\n  try {\n    return instance.get(`${EDGE_API}/images/${id}/metadata`);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchEdgeImages = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/images?${query}`);\n};\n\nexport const fetchEdgeImageSets = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets?${query}`);\n};\n\nexport const getEdgeImageStatus = (id) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const getImageDataOnDevice = (id) => {\n  return instance.get(`${EDGE_API}/updates/device/${id}/image`);\n};\n\nexport const getPackages = async (distribution, architecture, search) => {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  return instance(`${IMAGE_BUILDER_API}/packages?${params.toString()}`);\n};\n\nexport const getImageById = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/details`);\n};\n\nexport const getImageSets = ({ query }) => {\n  if (query === '') {\n    query = { limit: 20, offset: 0, sort_by: '-updated_at' };\n  }\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/image-sets/view?${q}`);\n};\n\nexport const postRpmsNames = (urls, search) => {\n  return instance.post(`${CONTENT_SOURCES_API}/rpms/names`, {\n    urls: urls,\n    search: search,\n  });\n};\n","import { iconMapper, colorMapper } from './index';\n\nexport const statusMapper = {\n  booting: {\n    text: 'Booting',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  building: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  created: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  upToDate: {\n    text: 'Up to date',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  success: {\n    text: 'Ready',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  passed: {\n    text: 'Passed',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  updateAvailable: {\n    text: 'Update available',\n    Icon: iconMapper.exclamationTriangle,\n    color: colorMapper.yellow,\n    labelColor: 'orange',\n  },\n  updating: {\n    text: 'Updating',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  error: {\n    text: 'Error',\n    Icon: iconMapper.timesCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  default: {\n    text: 'Unknown',\n    Icon: iconMapper.unknown,\n  },\n  interrupted: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  unresponsive: {\n    text: 'Unresponsive',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  errorWithExclamationCircle: {\n    text: 'Error',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Tooltip, Split, SplitItem } from '@patternfly/react-core';\nimport { statusMapper } from '../constants/status';\n\nexport const getDeviceStatus = (\n  deviceStatus,\n  isUpdateAvailable,\n  dispatcherStatus\n) =>\n  dispatcherStatus === 'ERROR'\n    ? 'error'\n    : dispatcherStatus === 'UNRESPONSIVE'\n    ? 'unresponsive'\n    : deviceStatus === 'UPDATING'\n    ? 'updating'\n    : isUpdateAvailable\n    ? 'updateAvailable'\n    : 'upToDate';\n\nconst Status = ({\n  id,\n  type,\n  isLabel = false,\n  toolTipContent = '',\n  className = '',\n  isLink,\n}) => {\n  const { text, Icon, color, labelColor } =\n    Object.prototype.hasOwnProperty.call(statusMapper, type)\n      ? statusMapper[type]\n      : statusMapper['default'];\n\n  return (\n    <>\n      {isLabel ? (\n        <Label id={id} color={labelColor} icon={<Icon />} className={className}>\n          {text}\n        </Label>\n      ) : (\n        <Split id={id} style={{ color }} className={className}>\n          <SplitItem className=\"pf-u-mr-sm\">\n            {toolTipContent ? (\n              <Tooltip content=\"blargh\">\n                <Icon />\n              </Tooltip>\n            ) : (\n              <Icon />\n            )}\n          </SplitItem>\n          <SplitItem>\n            <p\n              style={\n                isLink\n                  ? {\n                      textDecoration: ' grey dotted underline',\n                      cursor: 'pointer',\n                    }\n                  : {}\n              }\n            >\n              {text}\n            </p>\n          </SplitItem>\n        </Split>\n      )}\n    </>\n  );\n};\n\nexport default Status;\n\nStatus.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  isLabel: PropTypes.bool,\n  toolTipContent: PropTypes.string,\n  className: PropTypes.string,\n  isLink: PropTypes.bool,\n};\n\nStatus.defaultProps = {\n  id: 'status',\n};\n"],"names":["Breadcrumb","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","displayName","Object","assign","child","index","showDivider","BreadcrumbItem","classNameProp","to","isActive","isDropdown","target","component","render","Component","ariaCurrent","undefined","type","href","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","addTooltip","_b","dateObj","dateType","toString","UpdateImage","navigateBack","updateImageID","reload","useState","user","setUser","dispatch","useDispatch","closeAction","temporaryReleasesFlag","useFeatureFlags","imageWizardFeatureFlag","getRegistry","useContext","RegistryContext","data","useSelector","imageDetailReducer","shallowEqual","useEffect","registered","register","loadImageDetail","insights","chrome","auth","getUser","then","result","onClose","customComponentMapper","review","ReviewStep","onSubmit","values","setIsSaving","payload","Id","image","ID","name","Name","version","Version","architecture","credentials","Installer","SshKey","username","Username","createNewImage","resp","addNotification","variant","title","meta","polling","id","fetcher","getEdgeImageStatus","condition","Status","onEvent","failure","success","addImageToPoll","defaultArch","initialValues","imageID","isUpdate","Description","release","Distribution","release_options","getReleases","supportedReleases","temporaryReleases","imageType","Packages","map","pkg","ThirdPartyRepositories","repo","CustomPackages","test","schema","fields","componentTypes","isDynamic","inModal","buttonLabels","submit","showTitles","crossroads","updateDetails","imageOutput","registration","repositories","packages","additionalCustomPackages","customPackages","isSVG","diameter","propTypes","PropTypes","defaultProps","dropdownItems","imageVersion","isoURL","openUpdateWizard","imageData","LastImageDetails","actionsArray","push","DropdownItem","key","onClick","Text","rel","DetailsHead","isOpen","setIsOpen","setData","actionsLabel","dropdownId","isLoading","hasError","Link","paths","ImageSet","Skeleton","width","TextContent","Split","SplitItem","TextList","TextListItem","T","toLowerCase","UpdatedAt","DateFormat","isFilled","Dropdown","position","DropdownPosition","toggle","DropdownToggle","toggleIndicator","CaretDownIcon","onToggle","newState","isDisabled","reference","document","getElementById","ImageBuildIsoURL","ImageDetailTab","createSkeleton","rows","Array","_","detailsMapper","Created","outputType","Release","distributionMapper","userInfoMapper","packageMapper","ImageSetID","additional_packages","packageDiffMapper","Added","update_added","Removed","update_removed","Updated","update_updated","Checksum","Commit","OSTreeCommit","buildTextList","labelsToValueMapper","entries","label","Fragment","TextListItemVariants","ClipboardCopy","hoverTip","clickTip","replace","Grid","span","GridItem","TextVariants","TextListVariants","defaultFilters","options","option","columnNames","sort","columnTransforms","cellWidth","createRows","imageSetId","latestImageVersion","rowInfo","imageStatus","currentImageVersion","noApiSortFilter","imageTypeMapper","ImageType","CreatedAt","cells","CommitCheckSum","truncateString","ImageVersionsTab","imageSetID","useApi","api","query","getImageSetViewVersions","tableReload","response","fetchImageSetVersions","GeneralTable","apiFilterSort","isUseApi","filters","loadTableData","tableData","count","actionResolver","rowData","_event","_rowId","window","open","areActionsDisabled","defaultSort","direction","urlParam","distribution","installedPackages","addedPackages","showAll","filter","pack","packageData","arch","Button","isSmall","icon","iconPosition","indexToTabs","tabsToIndex","additional","all","ImagePackagesTab","history","useHistory","splitUrl","useLocation","pathname","defaultToggle","setPackageData","toggleTable","setToggleTable","InstalledPackages","toggleButton","toggleAction","toggleIndex","currentTab","join","toggleState","emptyFilterState","Empty","bgColor","body","primaryAction","secondaryActions","tabs","details","versions","ImageDetailTabs","activeTabKey","setActiveTabkey","activeTab","imageUrlMapper","mapUrlToObj","text","Tabs","activeKey","onSelect","tabIndex","selectedTab","buildUrl","Tab","eventKey","TabTitleText","useParams","imageId","imageVersionId","updateId","updateWizard","setUpdateWizard","setImageVersion","getImageSetView","fetchImageSetDetails","search","URLSearchParams","update_image","prevState","ImageDetails","PageHeader","Stack","hasGutter","StackItem","Suspense","fallback","Bullseye","Spinner","UpdateImageWizard","checkImageName","instance","EDGE_API","createImage","imageTypes","thirdPartyRepositories","item","outputTypes","commit","installer","sshkey","URL","uuid","endpoint","getImageSet","q","limit","offset","sort_by","getTableParams","fetchEdgeImageSets","getImageDataOnDevice","getPackages","params","IMAGE_BUILDER_API","getImageById","getImageSets","postRpmsNames","urls","CONTENT_SOURCES_API","statusMapper","booting","Icon","iconMapper","color","colorMapper","labelColor","building","created","upToDate","passed","updateAvailable","updating","error","default","interrupted","unresponsive","errorWithExclamationCircle","getDeviceStatus","deviceStatus","isUpdateAvailable","dispatcherStatus","isLabel","toolTipContent","isLink","Label","style","textDecoration","cursor"],"sourceRoot":""}