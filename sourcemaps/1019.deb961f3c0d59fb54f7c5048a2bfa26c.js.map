{"version":3,"file":"js/1019.1668535754406.4723e371944755e880c2.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/lock-open-icon.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Breadcrumb/breadcrumb.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/Label/label.mjs","webpack:///./node_modules/@patternfly/react-styles/css/components/LabelGroup/label-group.mjs","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Split/split.mjs","webpack:///./node_modules/@patternfly/react-styles/css/layouts/Stack/stack.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/api/devices/index.js","webpack:///./src/api/images/index.js","webpack:///./src/constants/status.js","webpack:///./src/components/Status.js","webpack:///./src/store/action-types.js","webpack:///./src/store/actions.js","webpack:///./src/store/deviceSummary.js","webpack:///./src/store/images.js","webpack:///./src/store/edgeImages.js","webpack:///./src/store/edgeImageSets.js","webpack:///./src/store/imageStatus.js","webpack:///./src/store/imageDetail.js","webpack:///./src/store/imageSetDetail.js","webpack:///./src/store/edgeImagePackages.js","webpack:///./src/store/groups.js","webpack:///./src/store/threshold.js","webpack:///./src/store/devicesInfo.js","webpack:///./src/store/canariesInfo.js","webpack:///./src/components/StatusIcon.js","webpack:///./src/components/SecureIcon.js","webpack:///./src/store/groupsDetail.js","webpack:///./src/store/groupDevicesInfo.js","webpack:///./src/store/createImage.js","webpack:///./src/store/deviceTable.js","webpack:///./node_modules/lodash/_baseMap.js","webpack:///./node_modules/lodash/flatMap.js","webpack:///./node_modules/lodash/keyBy.js","webpack:///./node_modules/lodash/map.js"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const LockIconConfig = {\n  name: 'LockIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 224h-24v-72C376 68.2 307.8 0 224 0S72 68.2 72 152v72H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48zm-104 0H152v-72c0-39.7 32.3-72 72-72s72 32.3 72 72v72z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockIcon = createIcon(LockIconConfig);\n\nexport default LockIcon;","import { createIcon } from '../createIcon';\n\nexport const LockOpenIconConfig = {\n  name: 'LockOpenIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M423.5 0C339.5.3 272 69.5 272 153.5V224H48c-26.5 0-48 21.5-48 48v192c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48V272c0-26.5-21.5-48-48-48h-48v-71.1c0-39.6 31.7-72.5 71.3-72.9 40-.4 72.7 32.1 72.7 72v80c0 13.3 10.7 24 24 24h32c13.3 0 24-10.7 24-24v-80C576 68 507.5-.3 423.5 0z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const LockOpenIcon = createIcon(LockOpenIconConfig);\n\nexport default LockOpenIcon;","import './breadcrumb.css';\nexport default {\n  \"breadcrumb\": \"pf-c-breadcrumb\",\n  \"breadcrumbDropdown\": \"pf-c-breadcrumb__dropdown\",\n  \"breadcrumbHeading\": \"pf-c-breadcrumb__heading\",\n  \"breadcrumbItem\": \"pf-c-breadcrumb__item\",\n  \"breadcrumbItemDivider\": \"pf-c-breadcrumb__item-divider\",\n  \"breadcrumbLink\": \"pf-c-breadcrumb__link\",\n  \"breadcrumbList\": \"pf-c-breadcrumb__list\",\n  \"dropdownToggle\": \"pf-c-dropdown__toggle\",\n  \"modifiers\": {\n    \"current\": \"pf-m-current\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"label\": \"pf-c-label\",\n  \"labelContent\": \"pf-c-label__content\",\n  \"labelIcon\": \"pf-c-label__icon\",\n  \"labelText\": \"pf-c-label__text\",\n  \"modifiers\": {\n    \"compact\": \"pf-m-compact\",\n    \"blue\": \"pf-m-blue\",\n    \"green\": \"pf-m-green\",\n    \"orange\": \"pf-m-orange\",\n    \"red\": \"pf-m-red\",\n    \"purple\": \"pf-m-purple\",\n    \"cyan\": \"pf-m-cyan\",\n    \"gold\": \"pf-m-gold\",\n    \"outline\": \"pf-m-outline\",\n    \"overflow\": \"pf-m-overflow\",\n    \"add\": \"pf-m-add\",\n    \"editable\": \"pf-m-editable\",\n    \"editableActive\": \"pf-m-editable-active\"\n  },\n  \"themeDark\": \"pf-theme-dark\"\n};","import './label-group.css';\nexport default {\n  \"button\": \"pf-c-button\",\n  \"labelGroup\": \"pf-c-label-group\",\n  \"labelGroupClose\": \"pf-c-label-group__close\",\n  \"labelGroupLabel\": \"pf-c-label-group__label\",\n  \"labelGroupList\": \"pf-c-label-group__list\",\n  \"labelGroupListItem\": \"pf-c-label-group__list-item\",\n  \"labelGroupMain\": \"pf-c-label-group__main\",\n  \"labelGroupTextarea\": \"pf-c-label-group__textarea\",\n  \"modifiers\": {\n    \"category\": \"pf-m-category\",\n    \"vertical\": \"pf-m-vertical\",\n    \"editable\": \"pf-m-editable\",\n    \"textarea\": \"pf-m-textarea\"\n  }\n};","import './split.css';\nexport default {\n  \"modifiers\": {\n    \"wrap\": \"pf-m-wrap\",\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"split\": \"pf-l-split\",\n  \"splitItem\": \"pf-l-split__item\"\n};","import './stack.css';\nexport default {\n  \"modifiers\": {\n    \"fill\": \"pf-m-fill\",\n    \"gutter\": \"pf-m-gutter\"\n  },\n  \"stack\": \"pf-l-stack\",\n  \"stackItem\": \"pf-l-stack__item\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getDeviceHasUpdate = async (id) => {\n  try {\n    return await instance.get(`${EDGE_API}/devices/${id}`);\n  } catch (err) {\n    // temp error solution\n    console.log('');\n  }\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","import { EDGE_API, IMAGE_BUILDER_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const checkImageName = (name) => {\n  const payload = {\n    name,\n  };\n  return instance.post(`${EDGE_API}/images/checkImageName`, payload);\n};\n\nexport const fetchImageStatus = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const fetchActiveImages = ({ limit = 100, offset = 0 } = {}) => {\n  return instance.get(\n    `${IMAGE_BUILDER_API}/composes?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const createImage = ({\n  Id,\n  name,\n  version,\n  description,\n  release,\n  architecture,\n  username,\n  credentials,\n  imageType: imageTypes,\n  'selected-packages': packages,\n  'third-party-repositories': thirdPartyRepositories,\n  'custom-packages': customPackages,\n}) => {\n  let [imageType] = imageTypes || [];\n  if (imageTypes.length > 1) {\n    imageType = 'rhel-edge-installer';\n  }\n  const payload = {\n    name,\n    version,\n    description,\n    distribution: release,\n    imageType: imageType,\n    packages: packages.map((item) => ({ name: item.name })),\n    outputTypes: imageTypes,\n    commit: {\n      arch: architecture,\n    },\n    installer: {\n      username,\n      sshkey: credentials,\n    },\n    thirdPartyRepositories: thirdPartyRepositories?.map((repo) => ({\n      ID: repo.id,\n      Name: repo.name,\n      URL: repo.URL,\n    })),\n    customPackages: customPackages?.map((repo) => ({ Name: repo.name })),\n  };\n\n  let endpoint = `${EDGE_API}/images`;\n\n  if (version > 1) {\n    endpoint += `/${Id}/update`;\n  }\n\n  return instance.post(endpoint, payload);\n};\n\nexport const getImageSet = ({\n  id,\n  q = {\n    limit: 10,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/${id}?${query}`);\n};\n\nexport const getImageSetViewVersions = ({\n  imageSetID,\n  query = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/image-sets/view/${imageSetID}/versions?${q}`\n  );\n};\n\nexport const getImageSetView = ({\n  id,\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/view/${id}?${query}`);\n};\n\nexport const getImagePackageMetadata = (id) => {\n  try {\n    return instance.get(`${EDGE_API}/images/${id}/metadata`);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchEdgeImages = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/images?${query}`);\n};\n\nexport const fetchEdgeImageSets = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets?${query}`);\n};\n\nexport const getEdgeImageStatus = (id) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const getImageDataOnDevice = (id) => {\n  return instance.get(`${EDGE_API}/updates/device/${id}/image`);\n};\n\nexport const getPackages = async (distribution, architecture, search) => {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  return instance(`${IMAGE_BUILDER_API}/packages?${params.toString()}`);\n};\n\nexport const getImageById = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/details`);\n};\n\nexport const getImageSets = ({ query }) => {\n  if (query === '') {\n    query = { limit: 20, offset: 0, sort_by: '-updated_at' };\n  }\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/image-sets/view?${q}`);\n};\n","import { iconMapper, colorMapper } from './index';\n\nexport const statusMapper = {\n  booting: {\n    text: 'Booting',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  building: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  created: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  upToDate: {\n    text: 'Up to date',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  success: {\n    text: 'Ready',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  passed: {\n    text: 'Passed',\n    Icon: iconMapper.checkCircle,\n    color: colorMapper.green,\n    labelColor: 'green',\n  },\n  updateAvailable: {\n    text: 'Update available',\n    Icon: iconMapper.exclamationTriangle,\n    color: colorMapper.yellow,\n    labelColor: 'orange',\n  },\n  updating: {\n    text: 'Updating',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  error: {\n    text: 'Error',\n    Icon: iconMapper.timesCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  default: {\n    text: 'Unknown',\n    Icon: iconMapper.unknown,\n  },\n  interrupted: {\n    text: 'Image build in progress',\n    Icon: iconMapper.inProgress,\n    color: colorMapper.blue,\n    labelColor: 'blue',\n  },\n  unresponsive: {\n    text: 'Unresponsive',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n  errorWithExclamationCircle: {\n    text: 'Error',\n    Icon: iconMapper.exclamationCircle,\n    color: colorMapper.red,\n    labelColor: 'red',\n  },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Tooltip, Split, SplitItem } from '@patternfly/react-core';\nimport { statusMapper } from '../constants/status';\n\nexport const getDeviceStatus = (\n  deviceStatus,\n  isUpdateAvailable,\n  dispatcherStatus\n) =>\n  dispatcherStatus === 'ERROR'\n    ? 'error'\n    : dispatcherStatus === 'UNRESPONSIVE'\n    ? 'unresponsive'\n    : deviceStatus === 'UPDATING'\n    ? 'updating'\n    : isUpdateAvailable\n    ? 'updateAvailable'\n    : 'upToDate';\n\nconst Status = ({\n  id,\n  type,\n  isLabel = false,\n  toolTipContent = '',\n  className = '',\n  isLink,\n}) => {\n  const { text, Icon, color, labelColor } =\n    Object.prototype.hasOwnProperty.call(statusMapper, type)\n      ? statusMapper[type]\n      : statusMapper['default'];\n\n  return (\n    <>\n      {isLabel ? (\n        <Label id={id} color={labelColor} icon={<Icon />} className={className}>\n          {text}\n        </Label>\n      ) : (\n        <Split id={id} style={{ color }} className={className}>\n          <SplitItem className=\"pf-u-mr-sm\">\n            {toolTipContent ? (\n              <Tooltip content=\"blargh\">\n                <Icon />\n              </Tooltip>\n            ) : (\n              <Icon />\n            )}\n          </SplitItem>\n          <SplitItem>\n            <p\n              style={\n                isLink\n                  ? {\n                      textDecoration: ' grey dotted underline',\n                      cursor: 'pointer',\n                    }\n                  : {}\n              }\n            >\n              {text}\n            </p>\n          </SplitItem>\n        </Split>\n      )}\n    </>\n  );\n};\n\nexport default Status;\n\nStatus.propTypes = {\n  id: PropTypes.string,\n  type: PropTypes.string,\n  isLabel: PropTypes.bool,\n  toolTipContent: PropTypes.string,\n  className: PropTypes.string,\n  isLink: PropTypes.bool,\n};\n\nStatus.defaultProps = {\n  id: 'status',\n};\n","import keyBy from 'lodash/keyBy';\nimport flatMap from 'lodash/flatMap';\n\nexport const LOAD_DEVICE_SUMMARY = 'LOAD_DEVICE_SUMMARY';\nexport const LOAD_ACTIVE_IMAGES = 'LOAD_ACTIVE_IMAGES';\nexport const LOAD_EDGE_IMAGES = 'LOAD_EDGE_IMAGES';\nexport const LOAD_EDGE_IMAGE_SETS = 'LOAD_EDGE_IMAGE_SETS';\nexport const LOAD_EDGE_IMAGE_PACKAGES = 'LOAD_EDGE_IMAGE_PACKAGES';\nexport const LOAD_GROUPS = 'LOAD_GROUPS';\nexport const LOAD_GROUP_DETAIL = 'LOAD_GROUP_DETAIL';\nexport const LOAD_TRESHOLD = 'LOAD_TRESHOLD';\nexport const LOAD_DEVICES_INFO = 'LOAD_DEVICES_INFO';\nexport const LOAD_CANARIES_INFO = 'LOAD_CANARIES_INFO';\nexport const LOAD_GROUP_DEVICES_INFO = 'LOAD_GROUP_DEVICES_INFO';\nexport const LOAD_IMAGE_STATUS = 'LOAD_IMAGE_STATUS';\nexport const LOAD_IMAGE_DETAIL = 'LOAD_IMAGE_DETAIL';\nexport const LOAD_IMAGE_SET_DETAIL = 'LOAD_IMAGE_SET_DETAIL';\nexport const CREATE_NEW_IMAGE = 'CREATE_NEW_IMAGE';\nexport const CREATE_NEW_IMAGE_RESET = `${CREATE_NEW_IMAGE}_RESET`;\nexport const POLLING_IMAGES = 'POLLING_IMAGES';\nexport const LOAD_DEVICE_TABLE = 'LOAD_DEVICE_TABLE';\n\nconst asyncActions = flatMap(\n  [\n    LOAD_EDGE_IMAGES,\n    LOAD_EDGE_IMAGE_SETS,\n    LOAD_EDGE_IMAGE_PACKAGES,\n    LOAD_ACTIVE_IMAGES,\n    LOAD_GROUPS,\n    LOAD_GROUP_DETAIL,\n    LOAD_TRESHOLD,\n    LOAD_DEVICES_INFO,\n    LOAD_CANARIES_INFO,\n    LOAD_GROUP_DEVICES_INFO,\n    LOAD_IMAGE_STATUS,\n    LOAD_IMAGE_DETAIL,\n    LOAD_IMAGE_SET_DETAIL,\n    CREATE_NEW_IMAGE,\n    LOAD_DEVICE_TABLE,\n  ],\n  (a) => [a, `${a}_PENDING`, `${a}_FULFILLED`, `${a}_REJECTED`]\n);\nexport const ACTION_TYPES = keyBy(asyncActions, (k) => k);\n\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\nexport const PRE_SELECT_ENTITY = 'PRE_SELECT_ENTITY';\nexport const CLEAN_ENTITIES = 'CLEAN_ENTITIES';\n","import {\n  LOAD_TRESHOLD,\n  LOAD_DEVICES_INFO,\n  LOAD_CANARIES_INFO,\n  LOAD_GROUP_DETAIL,\n  LOAD_GROUP_DEVICES_INFO,\n  SELECT_ENTITY,\n  PRE_SELECT_ENTITY,\n  CLEAN_ENTITIES,\n  LOAD_ACTIVE_IMAGES,\n  LOAD_EDGE_IMAGES,\n  LOAD_EDGE_IMAGE_SETS,\n  LOAD_EDGE_IMAGE_PACKAGES,\n  LOAD_DEVICE_SUMMARY,\n  LOAD_IMAGE_STATUS,\n  LOAD_IMAGE_DETAIL,\n  LOAD_IMAGE_SET_DETAIL,\n  CREATE_NEW_IMAGE,\n  POLLING_IMAGES,\n  LOAD_DEVICE_TABLE,\n} from './action-types';\n\nimport {\n  fetchImageStatus,\n  getImageById,\n  fetchEdgeImages,\n  fetchEdgeImageSets,\n  getImagePackageMetadata,\n  createImage,\n  getImageSet,\n  fetchActiveImages,\n} from '../api/images';\nimport { getInventory } from '../api/devices';\n\nexport const loadThreshold = () => ({\n  type: LOAD_TRESHOLD,\n  payload: () => {},\n});\n\nexport const loadDevicesInfo = () => ({\n  type: LOAD_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const loadCanariesInfo = () => ({\n  type: LOAD_CANARIES_INFO,\n  payload: () => {},\n});\n\nexport const loadGroupsDetail = () => ({\n  type: LOAD_GROUP_DETAIL,\n  payload: () => {},\n});\n\nexport const loadGroupDevicesInfo = () => ({\n  type: LOAD_GROUP_DEVICES_INFO,\n  payload: () => {},\n});\n\nexport const selectEntity = (id, selected) => ({\n  type: SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const preSelectEntity = (id, selected) => ({\n  type: PRE_SELECT_ENTITY,\n  payload: {\n    id,\n    selected,\n  },\n});\n\nexport const cleanEntities = () => ({\n  type: CLEAN_ENTITIES,\n});\n\nexport const loadImages = (dispatch, pagination) => {\n  dispatch({\n    type: LOAD_ACTIVE_IMAGES,\n    payload: fetchActiveImages(pagination),\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show images data',\n          description: 'Failed receiving images from image-builder',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadDeviceSummary = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_SUMMARY,\n    payload: () => {},\n    meta: {\n      notifications: {\n        rejected: {\n          variant: 'danger',\n          title: 'Cannot show system summary data',\n          description: 'Failed receiving system summary data from inventory',\n        },\n      },\n    },\n    // the '.catch' part is necessary because redux-promise-middleware throws the error on REJECTED\n    // and to avoid the app exploding I need to catch it here.\n    // THANK you redux-promise-middleware for not allowing to customize this behavior. 😠\n  }).catch(() => null);\n};\n\nexport const loadImageStatus = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_STATUS,\n    payload: fetchImageStatus({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const loadImageDetail = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_IMAGE_DETAIL,\n    payload: getImageById({ id: imageId }),\n  }).catch(() => null);\n};\n\nexport const createNewImage = (dispatch, payload, callback) => {\n  dispatch({\n    type: CREATE_NEW_IMAGE,\n    payload: createImage(payload),\n  })\n    .then(callback)\n    .catch(() => null);\n};\n\nexport const loadEdgeImages = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGES,\n    payload: fetchEdgeImages(query),\n  }).catch(() => null);\n};\n\nexport const loadEdgeImageSets = (dispatch, query) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_SETS,\n    payload: fetchEdgeImageSets(query),\n  }).catch(() => null);\n};\n\nexport const setPolling = (toStart, interval) => {\n  const subAction = toStart ? 'START' : 'END';\n  const payload = toStart ? { interval } : {};\n  return {\n    type: `${POLLING_IMAGES}_${subAction}`,\n    ...payload,\n  };\n};\n\nexport const addImageToPoll = ({ id, name }) => {\n  return {\n    type: `${POLLING_IMAGES}_ADD`,\n    payload: {\n      name,\n      id,\n    },\n  };\n};\n\nexport const removeImagesToPoll = (ids) => {\n  return {\n    type: `${POLLING_IMAGES}_REMOVE`,\n    ids,\n  };\n};\n\nexport const loadImageSetDetail = (dispatch, urlParam, query) => {\n  dispatch({\n    type: LOAD_IMAGE_SET_DETAIL,\n    payload: getImageSet({ id: urlParam, q: query }),\n  }).catch(() => null);\n};\n\nexport const loadImagePackageMetadata = (dispatch, imageId) => {\n  dispatch({\n    type: LOAD_EDGE_IMAGE_PACKAGES,\n    payload: getImagePackageMetadata(imageId),\n  }).catch(() => null);\n};\n\nexport const loadDeviceTable = (dispatch) => {\n  dispatch({\n    type: LOAD_DEVICE_TABLE,\n    payload: getInventory(),\n  }).catch(() => null);\n};\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICE_SUMMARY } from './action-types';\n\nconst initialState = {};\n\nconst loadDeviceSummaryPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadDeviceSummaryFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadDeviceSummaryRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No system summary data to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICE_SUMMARY}_PENDING`]: loadDeviceSummaryPending,\n    [`${LOAD_DEVICE_SUMMARY}_FULFILLED`]: loadDeviceSummaryFulfilled,\n    [`${LOAD_DEVICE_SUMMARY}_REJECTED`]: loadDeviceSummaryRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_ACTIVE_IMAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadActiveImagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadActiveImagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadActiveImagesRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No images to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_ACTIVE_IMAGES}_PENDING`]: loadActiveImagesPending,\n    [`${LOAD_ACTIVE_IMAGES}_FULFILLED`]: loadActiveImagesFulfilled,\n    [`${LOAD_ACTIVE_IMAGES}_REJECTED`]: loadActiveImagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImagesRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGES}_PENDING`]: loadEdgeImagesPending,\n    [`${LOAD_EDGE_IMAGES}_FULFILLED`]: loadEdgeImagesFulfilled,\n    [`${LOAD_EDGE_IMAGES}_REJECTED`]: loadEdgeImagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGE_SETS } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImageSetsPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImageSetsFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImageSetsRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGE_SETS}_PENDING`]: loadEdgeImageSetsPending,\n    [`${LOAD_EDGE_IMAGE_SETS}_FULFILLED`]: loadEdgeImageSetsFulfilled,\n    [`${LOAD_EDGE_IMAGE_SETS}_REJECTED`]: loadEdgeImageSetsRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_STATUS } from './action-types';\n\nconst initialState = {};\n\nconst loadImageStatusPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageStatusFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageStatusRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No image status to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_STATUS}_PENDING`]: loadImageStatusPending,\n    [`${LOAD_IMAGE_STATUS}_FULFILLED`]: loadImageStatusFulfilled,\n    [`${LOAD_IMAGE_STATUS}_REJECTED`]: loadImageStatusRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_DETAIL } from './action-types';\n\nconst initialState = {};\n\nconst loadImageDetailPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageDetailFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageDetailRejected = () => ({\n  isLoading: false,\n  hasError: true,\n  data: 'No image detail to view',\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_DETAIL}_PENDING`]: loadImageDetailPending,\n    [`${LOAD_IMAGE_DETAIL}_FULFILLED`]: loadImageDetailFulfilled,\n    [`${LOAD_IMAGE_DETAIL}_REJECTED`]: loadImageDetailRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_IMAGE_SET_DETAIL } from './action-types';\n\nconst initialState = {};\n\nconst loadImageSetDetailPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadImageSetDetailFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadImageSetDetailRejected = (state, { payload }) => ({\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_IMAGE_SET_DETAIL}_PENDING`]: loadImageSetDetailPending,\n    [`${LOAD_IMAGE_SET_DETAIL}_FULFILLED`]: loadImageSetDetailFulfilled,\n    [`${LOAD_IMAGE_SET_DETAIL}_REJECTED`]: loadImageSetDetailRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_EDGE_IMAGE_PACKAGES } from './action-types';\n\nconst initialState = {};\n\nconst loadEdgeImagePackagesPending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadEdgeImagePackagesFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadEdgeImagePackagesRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_PENDING`]: loadEdgeImagePackagesPending,\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_FULFILLED`]: loadEdgeImagePackagesFulfilled,\n    [`${LOAD_EDGE_IMAGE_PACKAGES}_REJECTED`]: loadEdgeImagePackagesRejected,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUPS } from './action-types';\n\nconst initialState = {};\n\nconst loadGroupsPending = (state) => ({\n  ...state,\n  groups: [],\n  isLoading: true,\n});\nconst loadGroupsFulfilled = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  groups: payload?.results || [],\n  meta: payload?.meta || {},\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUPS}_PENDING`]: loadGroupsPending,\n    [`${LOAD_GROUPS}_FULFILLED`]: loadGroupsFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_TRESHOLD } from './action-types';\n\nconst initialState = {};\n\nconst loadThresholdPending = (state) => ({\n  ...state,\n  threshold: {},\n  isLoading: true,\n});\nconst loadThresholdFulfilled = (state, { payload }) => ({\n  ...state,\n  threshold: payload?.results || {},\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_TRESHOLD}_PENDING`]: loadThresholdPending,\n    [`${LOAD_TRESHOLD}_FULFILLED`]: loadThresholdFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadDevicesInfoPending = (state) => ({\n  ...state,\n  devicesInfo: {},\n  isLoading: true,\n});\nconst loadDevicesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  devicesInfo: payload?.results || {},\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICES_INFO}_PENDING`]: loadDevicesInfoPending,\n    [`${LOAD_DEVICES_INFO}_FULFILLED`]: loadDevicesInfoFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_CANARIES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadCanariesInfoPending = (state) => ({\n  ...state,\n  canariesInfo: [],\n  isLoading: true,\n});\nconst loadCanariesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  canariesInfo: payload?.results || [],\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_CANARIES_INFO}_PENDING`]: loadCanariesInfoPending,\n    [`${LOAD_CANARIES_INFO}_FULFILLED`]: loadCanariesInfoFulfilled,\n  },\n  initialState\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { statusToIcon, statusMapper } from '../constants';\nimport { UnknownIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst StatusIcon = ({ status, ...props }) => {\n  const Icon = statusToIcon?.[status]?.icon || UnknownIcon;\n  return (\n    <Tooltip content={statusToIcon?.[status]?.title}>\n      <Icon {...props} color={statusToIcon?.[status]?.color} />\n    </Tooltip>\n  );\n};\n\nStatusIcon.propTypes = {\n  status: PropTypes.oneOf(statusMapper),\n};\n\nexport default StatusIcon;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { LockIcon, LockOpenIcon } from '@patternfly/react-icons';\n\nconst SecureIcon = ({ isSecure, ...props }) => {\n  const Icon = isSecure ? LockIcon : LockOpenIcon;\n  return <Icon {...props} />;\n};\n\nSecureIcon.propTypes = {\n  isSecure: PropTypes.bool,\n};\n\nSecureIcon.defaultProps = {\n  isSecure: false,\n};\n\nexport default SecureIcon;\n","import React from 'react';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUP_DETAIL, CLEAN_ENTITIES } from './action-types';\nimport { StatusIcon } from '../components';\n\nconst initialState = {};\n\nconst loadGroupsPending = (state) => ({\n  ...state,\n  isLoading: true,\n});\nconst loadGroupsFulfilled = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  name: payload?.name || '',\n  uuid: payload?.uuid || '',\n  devices: payload?.results || [],\n  meta: payload?.meta || {},\n});\n\nconst onEntitiesLoaded = (state) => {\n  const [name, updated] =\n    state?.columns?.filter(\n      ({ key }) => key === 'display_name' || key === 'updated'\n    ) || [];\n  return {\n    ...state,\n    columns: [\n      name,\n      { key: 'version', title: 'Version' },\n      updated,\n      {\n        key: 'status',\n        title: 'Status',\n        // eslint-disable-next-line react/display-name\n        renderFunc: (status) => <StatusIcon status={status} />,\n      },\n    ].filter(Boolean),\n    loaded: true,\n  };\n};\n\nexport const systemsList = ({ LOAD_ENTITIES_FULFILLED }) =>\n  applyReducerHash({\n    [LOAD_ENTITIES_FULFILLED]: onEntitiesLoaded,\n    [CLEAN_ENTITIES]: () => ({ loaded: false }),\n  });\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUP_DETAIL}_PENDING`]: loadGroupsPending,\n    [`${LOAD_GROUP_DETAIL}_FULFILLED`]: loadGroupsFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_GROUP_DEVICES_INFO } from './action-types';\n\nconst initialState = {};\n\nconst loadGroupDevicesInfoPending = (state) => ({\n  ...state,\n  devicesInfo: {},\n  isLoading: true,\n});\nconst loadGroupDevicesInfoFulfilled = (state, { payload }) => ({\n  ...state,\n  devicesInfo: payload,\n  isLoading: false,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_GROUP_DEVICES_INFO}_PENDING`]: loadGroupDevicesInfoPending,\n    [`${LOAD_GROUP_DEVICES_INFO}_FULFILLED`]: loadGroupDevicesInfoFulfilled,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { CREATE_NEW_IMAGE } from './action-types';\n\nconst initialState = {};\n\nconst createNewImagePending = () => ({\n  isLoading: true,\n  hasError: false,\n  error: null,\n});\n\nconst createNewImageFulfilled = () => {\n  return {\n    isLoading: false,\n    hasError: false,\n    error: null,\n  };\n};\n\nconst createNewImageRejected = (_state, { payload }) => ({\n  isLoading: false,\n  hasError: true,\n  error: payload,\n});\n\nconst createNewImageReset = () => ({\n  isLoading: false,\n  hasError: false,\n  error: null,\n});\n\nexport default applyReducerHash(\n  {\n    [`${CREATE_NEW_IMAGE}_PENDING`]: createNewImagePending,\n    [`${CREATE_NEW_IMAGE}_FULFILLED`]: createNewImageFulfilled,\n    [`${CREATE_NEW_IMAGE}_REJECTED`]: createNewImageRejected,\n    [`${CREATE_NEW_IMAGE}_RESET`]: createNewImageReset,\n  },\n  initialState\n);\n","import { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { LOAD_DEVICE_TABLE } from './action-types';\n\nconst initialState = {};\n\nconst loadDeviceTablePending = () => ({\n  isLoading: true,\n  hasError: false,\n  data: null,\n});\n\nconst loadDeviceTableFulfilled = (state, { payload }) => {\n  return {\n    ...state,\n    isLoading: false,\n    hasError: false,\n    data: payload,\n  };\n};\n\nconst loadDeviceTableRejected = (state, { payload }) => ({\n  ...state,\n  isLoading: false,\n  hasError: true,\n  data: payload,\n});\n\nexport default applyReducerHash(\n  {\n    [`${LOAD_DEVICE_TABLE}_PENDING`]: loadDeviceTablePending,\n    [`${LOAD_DEVICE_TABLE}_FULFILLED`]: loadDeviceTableFulfilled,\n    [`${LOAD_DEVICE_TABLE}_REJECTED`]: loadDeviceTableRejected,\n  },\n  initialState\n);\n","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n","var baseFlatten = require('./_baseFlatten'),\n    map = require('./map');\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nmodule.exports = flatMap;\n","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nmodule.exports = keyBy;\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n"],"names":["LockIconConfig","name","height","width","svgPath","yOffset","xOffset","LockIcon","LockOpenIconConfig","LockOpenIcon","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","value","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","children","addTooltip","_a","_b","dateObj","dateType","toString","getInventory","query","q","getTableParams","instance","EDGE_API","getDeviceHasUpdate","id","console","log","updateSystem","payload","checkImageName","createImage","Id","version","release","architecture","username","credentials","imageTypes","imageType","packages","thirdPartyRepositories","customPackages","distribution","map","item","outputTypes","commit","arch","installer","sshkey","repo","ID","Name","URL","endpoint","getImageSet","limit","offset","sort_by","getImageSetViewVersions","imageSetID","getImageSetView","fetchEdgeImageSets","getEdgeImageStatus","getImageDataOnDevice","getPackages","search","params","URLSearchParams","IMAGE_BUILDER_API","getImageById","getImageSets","statusMapper","booting","text","Icon","iconMapper","color","colorMapper","labelColor","building","created","upToDate","success","passed","updateAvailable","updating","error","default","interrupted","unresponsive","errorWithExclamationCircle","getDeviceStatus","deviceStatus","isUpdateAvailable","dispatcherStatus","Status","isLabel","toolTipContent","className","isLink","Label","icon","Split","style","SplitItem","textDecoration","cursor","propTypes","PropTypes","defaultProps","LOAD_DEVICE_SUMMARY","LOAD_ACTIVE_IMAGES","LOAD_EDGE_IMAGES","LOAD_EDGE_IMAGE_SETS","LOAD_EDGE_IMAGE_PACKAGES","LOAD_GROUPS","LOAD_GROUP_DETAIL","LOAD_TRESHOLD","LOAD_DEVICES_INFO","LOAD_CANARIES_INFO","LOAD_GROUP_DEVICES_INFO","LOAD_IMAGE_STATUS","LOAD_IMAGE_DETAIL","LOAD_IMAGE_SET_DETAIL","CREATE_NEW_IMAGE","POLLING_IMAGES","LOAD_DEVICE_TABLE","asyncActions","flatMap","a","keyBy","k","loadImageDetail","dispatch","imageId","createNewImage","callback","then","loadEdgeImageSets","addImageToPoll","applyReducerHash","isLoading","hasError","data","state","groups","results","meta","threshold","devicesInfo","canariesInfo","SecureIcon","isSecure","props","uuid","devices","_state","baseEach","isArrayLike","module","exports","collection","iteratee","index","result","Array","key","baseFlatten","baseAssignValue","createAggregator","arrayMap","baseIteratee","baseMap","isArray"],"sourceRoot":""}