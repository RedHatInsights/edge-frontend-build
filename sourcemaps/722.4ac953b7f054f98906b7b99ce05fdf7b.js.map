{"version":3,"file":"js/722.da6e07e215ba5d0c0ca3.js","mappings":"g3BAOA,IAAMA,EAAY,SAAC,GAYb,IAXJC,EAWI,EAXJA,OACAC,EAUI,EAVJA,MACAC,EASI,EATJA,UACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,OACAC,EAMI,EANJA,cACAC,EAKI,EALJA,QACAC,EAII,EAJJA,WACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,SACAC,EACI,EADJA,kBAEA,OACE,kBAAC,IAAD,CACEJ,QAASE,MAAAA,EAAAA,EAAQ,QACjBP,MAAOA,EACPD,OAAQA,EACRW,QAAST,GAET,kBAAC,IAAD,CACEE,OAAQA,EACRQ,aAAc,SAACC,GAAD,OACZ,kBAAC,MAAD,UACMA,EADN,CAEEV,YAAaA,EACbW,cAAe,CAAC,WAChBC,aAAc,CACZC,OAAQ,CAAEV,QAAAA,QAIhBD,cAAeA,EACfY,gBACEP,EAAiB,OACRA,GAAsBO,EAAAA,IAC3BA,EAAAA,GAENR,SAAQ,mCAAE,WAAOS,GAAP,iFACFT,EAASS,GADP,OAERhB,IACAK,IAHQ,2CAAF,sDAKRY,SAAU,kBAAMjB,SAMxBH,EAAUqB,UAAY,CACpBpB,OAAQqB,IAAAA,KACRpB,MAAOoB,IAAAA,OACPnB,UAAWmB,IAAAA,KACXd,WAAYc,IAAAA,KACZlB,YAAakB,IAAAA,OACbjB,OAAQiB,IAAAA,OACRhB,cAAegB,IAAAA,OACff,QAASe,IAAAA,OACTZ,SAAUY,IAAAA,KACVb,KAAMa,IAAAA,OACNX,kBAAmBW,IAAAA,QAGrB","sources":["webpack:///./src/components/Modal.js"],"sourcesContent":["import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  openModal, // should be closeModal, update here and other places that use it\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      isOpen={isOpen}\n      onClose={openModal}\n    >\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          openModal();\n          reloadData();\n        }}\n        onCancel={() => openModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n};\n\nexport default RepoModal;\n"],"names":["RepoModal","isOpen","title","openModal","submitLabel","schema","initialValues","variant","reloadData","size","onSubmit","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","values","onCancel","propTypes","PropTypes"],"sourceRoot":""}