{"version":3,"file":"js/UpdateSystem.1673903204238.26940881a93ad2780d64.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/Drawer.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerMain.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Drawer/DrawerContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Drawer/drawer.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/Devices/UpdateVersionTable.js","webpack:///./src/Routes/Devices/UpdateSystem.js","webpack:///./src/api/devices/index.js","webpack:///./src/utils/apiWithToast.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport var DrawerColorVariant;\n(function (DrawerColorVariant) {\n    DrawerColorVariant[\"default\"] = \"default\";\n    DrawerColorVariant[\"light200\"] = \"light-200\";\n})(DrawerColorVariant || (DrawerColorVariant = {}));\nexport const DrawerContext = React.createContext({\n    isExpanded: false,\n    isStatic: false,\n    onExpand: () => { },\n    position: 'right',\n    drawerRef: null,\n    drawerContentRef: null,\n    isInline: false\n});\nexport const Drawer = (_a) => {\n    var { className = '', children, isExpanded = false, isInline = false, isStatic = false, position = 'right', onExpand = () => { } } = _a, props = __rest(_a, [\"className\", \"children\", \"isExpanded\", \"isInline\", \"isStatic\", \"position\", \"onExpand\"]);\n    const drawerRef = React.useRef();\n    const drawerContentRef = React.useRef();\n    return (React.createElement(DrawerContext.Provider, { value: { isExpanded, isStatic, onExpand, position, drawerRef, drawerContentRef, isInline } },\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawer, isExpanded && styles.modifiers.expanded, isInline && styles.modifiers.inline, isStatic && styles.modifiers.static, position === 'left' && styles.modifiers.panelLeft, position === 'bottom' && styles.modifiers.panelBottom, className), ref: drawerRef }, props), children)));\n};\nDrawer.displayName = 'Drawer';\n//# sourceMappingURL=Drawer.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nexport const DrawerMain = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children } = _a, props = __rest(_a, [\"className\", \"children\"]);\n    return (React.createElement(\"div\", Object.assign({ className: css(styles.drawerMain, className) }, props), children));\n};\nDrawerMain.displayName = 'DrawerMain';\n//# sourceMappingURL=DrawerMain.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Drawer/drawer';\nimport { css } from '@patternfly/react-styles';\nimport { DrawerMain } from './DrawerMain';\nimport { DrawerColorVariant, DrawerContext } from './Drawer';\nexport const DrawerContent = (_a) => {\n    var { \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    className = '', children, panelContent, colorVariant = DrawerColorVariant.default } = _a, props = __rest(_a, [\"className\", \"children\", \"panelContent\", \"colorVariant\"]);\n    const { drawerContentRef } = React.useContext(DrawerContext);\n    return (React.createElement(DrawerMain, null,\n        React.createElement(\"div\", Object.assign({ className: css(styles.drawerContent, colorVariant === DrawerColorVariant.light200 && styles.modifiers.light_200, className), ref: drawerContentRef }, props), children),\n        panelContent));\n};\nDrawerContent.displayName = 'DrawerContent';\n//# sourceMappingURL=DrawerContent.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children = null, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import './drawer.css';\nexport default {\n  \"drawer\": \"pf-c-drawer\",\n  \"drawerActions\": \"pf-c-drawer__actions\",\n  \"drawerBody\": \"pf-c-drawer__body\",\n  \"drawerClose\": \"pf-c-drawer__close\",\n  \"drawerContent\": \"pf-c-drawer__content\",\n  \"drawerHead\": \"pf-c-drawer__head\",\n  \"drawerMain\": \"pf-c-drawer__main\",\n  \"drawerPanel\": \"pf-c-drawer__panel\",\n  \"drawerPanelMain\": \"pf-c-drawer__panel-main\",\n  \"drawerSection\": \"pf-c-drawer__section\",\n  \"drawerSplitter\": \"pf-c-drawer__splitter\",\n  \"drawerSplitterHandle\": \"pf-c-drawer__splitter-handle\",\n  \"modifiers\": {\n    \"panelBottom\": \"pf-m-panel-bottom\",\n    \"inline\": \"pf-m-inline\",\n    \"noBorder\": \"pf-m-no-border\",\n    \"resizable\": \"pf-m-resizable\",\n    \"static\": \"pf-m-static\",\n    \"panelLeft\": \"pf-m-panel-left\",\n    \"expanded\": \"pf-m-expanded\",\n    \"resizing\": \"pf-m-resizing\",\n    \"noBackground\": \"pf-m-no-background\",\n    \"light_200\": \"pf-m-light-200\",\n    \"noPadding\": \"pf-m-no-padding\",\n    \"padding\": \"pf-m-padding\",\n    \"vertical\": \"pf-m-vertical\",\n    \"width_25\": \"pf-m-width-25\",\n    \"width_33\": \"pf-m-width-33\",\n    \"width_50\": \"pf-m-width-50\",\n    \"width_66\": \"pf-m-width-66\",\n    \"width_75\": \"pf-m-width-75\",\n    \"width_100\": \"pf-m-width-100\",\n    \"width_25OnLg\": \"pf-m-width-25-on-lg\",\n    \"width_33OnLg\": \"pf-m-width-33-on-lg\",\n    \"width_50OnLg\": \"pf-m-width-50-on-lg\",\n    \"width_66OnLg\": \"pf-m-width-66-on-lg\",\n    \"width_75OnLg\": \"pf-m-width-75-on-lg\",\n    \"width_100OnLg\": \"pf-m-width-100-on-lg\",\n    \"width_25OnXl\": \"pf-m-width-25-on-xl\",\n    \"width_33OnXl\": \"pf-m-width-33-on-xl\",\n    \"width_50OnXl\": \"pf-m-width-50-on-xl\",\n    \"width_66OnXl\": \"pf-m-width-66-on-xl\",\n    \"width_75OnXl\": \"pf-m-width-75-on-xl\",\n    \"width_100OnXl\": \"pf-m-width-100-on-xl\",\n    \"width_25On_2xl\": \"pf-m-width-25-on-2xl\",\n    \"width_33On_2xl\": \"pf-m-width-33-on-2xl\",\n    \"width_50On_2xl\": \"pf-m-width-50-on-2xl\",\n    \"width_66On_2xl\": \"pf-m-width-66-on-2xl\",\n    \"width_75On_2xl\": \"pf-m-width-75-on-2xl\",\n    \"width_100On_2xl\": \"pf-m-width-100-on-2xl\",\n    \"inlineOnLg\": \"pf-m-inline-on-lg\",\n    \"staticOnLg\": \"pf-m-static-on-lg\",\n    \"inlineOnXl\": \"pf-m-inline-on-xl\",\n    \"staticOnXl\": \"pf-m-static-on-xl\",\n    \"inlineOn_2xl\": \"pf-m-inline-on-2xl\",\n    \"staticOn_2xl\": \"pf-m-static-on-2xl\"\n  },\n  \"pageMain\": \"pf-c-page__main\",\n  \"themeDark\": \"pf-theme-dark\"\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport classNames from 'classnames';\nimport { Title } from '@patternfly/react-core';\nvar PageHeaderTitle = function (_a) {\n    var className = _a.className, title = _a.title;\n    var pageHeaderTitleClasses = classNames(className);\n    return (_jsx(Title, __assign({ headingLevel: \"h1\", size: \"2xl\", className: pageHeaderTitleClasses, \"widget-type\": \"InsightsPageHeaderTitle\" }, { children: title })));\n};\nexport default PageHeaderTitle;\n//# sourceMappingURL=PageHeaderTitle.js.map","import React, { useState } from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { headerCol } from '@patternfly/react-table';\nimport { Button, Divider } from '@patternfly/react-core';\nimport { updateSystem } from '../../api/devices';\nimport { useDispatch } from 'react-redux';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\nimport apiWithToast from '../../utils/apiWithToast';\nimport PropTypes from 'prop-types';\nimport { routes as paths } from '../../constants/routeMapper';\n\nconst filters = [\n  { label: 'Version', type: 'text' },\n  { label: 'Release', type: 'text' },\n  { label: 'Additional packages', type: 'text' },\n  { label: 'All packages', type: 'text' },\n  { label: 'Systems running', type: 'text' },\n  { label: 'Created', type: 'text' },\n];\n\nconst columns = [\n  {\n    title: 'Version',\n    cellTransforms: [headerCol('selectable-radio')],\n  },\n  { title: 'Release' },\n  { title: 'Additional packages' },\n  { title: 'All packages' },\n  { title: 'Systems running' },\n  { title: 'Created' },\n];\n\nconst UpdateVersionTable = ({ data, isLoading, hasError }) => {\n  const [selectedVersion, setSelectedVersion] = useState(null);\n  const [selectedCommitID, setSelectedCommitID] = useState(null);\n  const [isUpdateSubmitted, setIsUpdateSubmitted] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const { pathname, search } = useLocation();\n  const match = useRouteMatch();\n\n  const buildRows = data?.map((rowData) => {\n    const {\n      version,\n      release,\n      additionalPackages,\n      allPackages,\n      systemsRunning,\n      created,\n      commitID,\n      deviceUUID,\n      deviceName,\n    } = rowData;\n    return {\n      cells: [\n        version,\n        release,\n        additionalPackages,\n        allPackages,\n        systemsRunning,\n        created,\n      ],\n      commitID,\n      deviceUUID,\n      deviceName,\n      selected: selectedVersion === version,\n    };\n  });\n\n  const setUpdateEvent = (value) => {\n    setSelectedVersion(value.cells[0]);\n    setSelectedCommitID(value);\n  };\n\n  const handleUpdateEvent = async () => {\n    setIsUpdateSubmitted(true);\n    const statusMessages = {\n      onInfo: {\n        title: 'Updating system',\n        description: ` ${selectedCommitID.deviceName} was added to the queue.`,\n      },\n      onError: {\n        title: 'Error',\n        description: `An error occurred making the request`,\n      },\n    };\n\n    await apiWithToast(\n      dispatch,\n      () =>\n        updateSystem({\n          CommitID: selectedCommitID.commitID,\n          DevicesUUID: [selectedCommitID.deviceUUID],\n        }),\n      statusMessages\n    );\n\n    handleClose();\n    setIsUpdateSubmitted(false);\n  };\n\n  const handleClose = () => {\n    // Return either to the system detail, group detail, or inventory page,\n    // depending on path and from_details param\n    let destPath = paths.inventory;\n    if (match.path === paths.inventoryDetailUpdate) {\n      destPath = search.includes('from_details=true')\n        ? paths.inventoryDetail\n        : paths.inventory;\n    }\n    if (match.path === paths.fleetManagementSystemDetailUpdate) {\n      destPath = search.includes('from_details=true')\n        ? paths.fleetManagementSystemDetail\n        : paths.fleetManagementDetail;\n    }\n\n    // Construct destination path\n    const pathLen = destPath.split('/').length;\n    const dest = pathname.split('/').slice(0, pathLen).join('/');\n\n    history.push({ pathname: dest });\n  };\n\n  return (\n    <>\n      <GeneralTable\n        className=\"pf-u-mt-sm\"\n        apiFilterSort={true}\n        isUseApi={false}\n        loadTableData={() => buildRows}\n        filters={filters}\n        tableData={{\n          count: data?.length,\n          isLoading,\n          hasError,\n        }}\n        columnNames={columns}\n        rows={buildRows}\n        defaultSort={{ index: 0, direction: 'desc' }}\n        hasRadio={true}\n        setRadioSelection={setUpdateEvent}\n        isFooterFixed={true}\n      />\n      <div\n        style={{\n          background: 'white',\n          left: '200px',\n          position: 'fixed',\n          height: '90px',\n          width: '100%',\n          bottom: '0px',\n          paddingLeft: '80px',\n          paddingBottom: '0px',\n        }}\n      >\n        <Divider\n          style={{ paddingBottom: '25px', width: '100%', paddingLeft: 0 }}\n        />\n\n        <Button\n          style={{ left: '60px' }}\n          key=\"confirm\"\n          variant=\"primary\"\n          isDisabled={!selectedVersion || isUpdateSubmitted}\n          onClick={() => handleUpdateEvent()}\n        >\n          Update system\n        </Button>\n        <Button\n          style={{ left: '70px' }}\n          key=\"cancel\"\n          variant=\"link\"\n          onClick={handleClose}\n        >\n          Cancel\n        </Button>\n      </div>\n    </>\n  );\n};\n\nUpdateVersionTable.propTypes = {\n  data: PropTypes.array,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n};\nexport default UpdateVersionTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Backdrop,\n  Breadcrumb,\n  BreadcrumbItem,\n  Bullseye,\n  Card,\n  CardBody,\n  Page,\n  PageSection,\n  Spinner,\n  Text,\n  TextContent,\n  Title,\n} from '@patternfly/react-core';\nimport UpdateVersionTable from './UpdateVersionTable';\nimport { getDevice } from '../../api/devices';\nimport { distributionMapper } from '../../constants';\nimport { routes as paths } from '../../constants/routeMapper';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport useApi from '../../hooks/useApi';\nimport {\n  TableComposable,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n} from '@patternfly/react-table';\nimport { useParams, Link } from 'react-router-dom';\n\nconst CurrentVersion = ({ image }) => {\n  const current_version = [\n    {\n      version: image?.version,\n      release: image?.release,\n      additionalPackages: image?.additionalPackages,\n      allPackages: image?.allPackages,\n      systemsRunning: image?.systemsRunning,\n      created: image?.created,\n    },\n  ];\n  const columnNames = {\n    version: 'Version',\n    release: 'Release',\n    additionalPackages: 'Additional packages',\n    allPackages: 'All packages',\n    systemsRunning: 'Systems running',\n    created: 'Created',\n  };\n\n  return (\n    <>\n      <TextContent>\n        <Title headingLevel=\"h2\">\n          <Text>Current version</Text>\n        </Title>\n      </TextContent>\n      <TableComposable\n        aria-label=\"Current version table\"\n        variant={'compact'}\n        borders={false}\n      >\n        <Thead>\n          <Tr style={{ borderBottomStyle: 'hidden' }}>\n            <Th style={{ width: '3%' }}></Th>\n            <Th>{columnNames.version}</Th>\n            <Th>{columnNames.release}</Th>\n            <Th>{columnNames.additionalPackages}</Th>\n            <Th>{columnNames.allPackages}</Th>\n            <Th>{columnNames.systemsRunning}</Th>\n            <Th>{columnNames.created}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {current_version.map((version) => (\n            <Tr key={version.version}>\n              <Td></Td>\n              <Td dataLabel={columnNames.version}>{version.version}</Td>\n              <Td dataLabel={columnNames.release}>{version.release}</Td>\n              <Td dataLabel={columnNames.additionalPackages}>\n                {version.additionalPackages}\n              </Td>\n              <Td dataLabel={columnNames.allPackages}>{version.allPackages}</Td>\n              <Td dataLabel={columnNames.systemsRunning}>\n                {version.systemsRunning}\n              </Td>\n              <Td dataLabel={columnNames.created}>{version.created}</Td>\n            </Tr>\n          ))}\n        </Tbody>\n      </TableComposable>\n    </>\n  );\n};\n\nCurrentVersion.propTypes = {\n  image: PropTypes.object,\n};\n\nconst UpdateSystemMain = ({ data }) => {\n  const device = data?.Device;\n\n  const buildRow = (image) => ({\n    version: image?.Version,\n    release: distributionMapper[image?.Distribution],\n    additionalPackages: image?.Packages?.length || 0,\n    allPackages: image?.TotalPackages,\n    systemsRunning: image?.SystemsRunning,\n    created: (\n      <span>\n        <DateFormat type=\"relative\" date={image?.CreatedAt} />\n      </span>\n    ),\n    commitID: image?.CommitID,\n    deviceUUID: device?.UUID,\n    deviceName: device?.DeviceName,\n  });\n\n  const currentImage = buildRow(data?.ImageInfo?.Image);\n  const newImages = data?.ImageInfo?.UpdatesAvailable?.map((update) =>\n    buildRow(update?.Image)\n  );\n\n  return device ? (\n    <Page>\n      <PageSection isWidthLimited>\n        <Card>\n          <CardBody>\n            <CurrentVersion image={currentImage} />\n            <TextContent>\n              <Title headingLevel=\"h2\">\n                <Text className=\"pf-u-mt-md\">Select version to update to</Text>\n              </Title>\n            </TextContent>\n            <UpdateVersionTable data={newImages} />\n          </CardBody>\n        </Card>\n      </PageSection>\n    </Page>\n  ) : (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  );\n};\n\nUpdateSystemMain.propTypes = {\n  data: PropTypes.object,\n};\n\nconst UpdateSystem = () => {\n  const { deviceId, groupId } = useParams();\n  const [{ data, isLoading }] = useApi({\n    api: () => getDevice(deviceId),\n  });\n  const device = data?.Device;\n  const groupName = groupId\n    ? device?.DevicesGroups?.find((group) => group.ID.toString() === groupId)\n        ?.Name\n    : null;\n\n  return isLoading ? (\n    <Backdrop>\n      <Bullseye>\n        <Spinner isSVG diameter=\"100px\" />\n      </Bullseye>\n    </Backdrop>\n  ) : (\n    <>\n      <PageHeader className=\"pf-m-light\">\n        {!groupName ? (\n          <Breadcrumb ouiaId=\"systems-list\">\n            <BreadcrumbItem>\n              <Link to={paths.inventory}>Systems</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to={`${paths.inventory}/${deviceId}/`}>\n                {device?.DeviceName}\n              </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>Update</BreadcrumbItem>\n          </Breadcrumb>\n        ) : (\n          <Breadcrumb ouiaId=\"groups-list\">\n            <BreadcrumbItem>\n              <Link to={paths.fleetManagement}>Groups</Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link to={`${paths.fleetManagement}/${groupId}`}>\n                {groupName}\n              </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>\n              <Link\n                to={`${paths.fleetManagement}/${groupId}/systems/${deviceId}/`}\n              >\n                {device?.DeviceName}\n              </Link>\n            </BreadcrumbItem>\n            <BreadcrumbItem>Update</BreadcrumbItem>\n          </Breadcrumb>\n        )}\n        <PageHeaderTitle title=\"Update\" />\n        <TextContent className=\"pf-u-mt-md\">\n          <Text>\n            {'Update '}\n            <strong>{device?.DeviceName}</strong>\n            {' to a newer version of '}\n            <strong>{data?.ImageInfo?.Image?.Name}</strong>\n            {' by selecting a new version from the table below.'}\n          </Text>\n        </TextContent>\n      </PageHeader>\n      <Main className=\"edge-devices\">\n        <UpdateSystemMain data={data} />\n      </Main>\n    </>\n  );\n};\n\nexport default UpdateSystem;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getDevice = (id) => {\n  return instance.get(`${EDGE_API}/devices/${id}`);\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","import { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst apiWithToast = (dispatch, api, statusMessages) => {\n  const hasSuccess = statusMessages?.onSuccess;\n  const hasInfo = statusMessages?.onInfo;\n\n  if (!statusMessages) {\n    statusMessages = {\n      onSuccess: {\n        title: 'Success',\n        description: 'The request has been made successfully',\n      },\n      onError: {\n        title: 'Error',\n        description: 'An error occurred making the request',\n      },\n    };\n  }\n\n  const fetchData = async () => {\n    try {\n      const response = await api();\n      hasInfo &&\n        dispatch({\n          ...addNotification({\n            variant: 'info',\n            ...statusMessages.onInfo,\n          }),\n        });\n      hasSuccess &&\n        dispatch({\n          ...addNotification({\n            variant: 'success',\n            ...statusMessages.onSuccess,\n          }),\n        });\n      return response;\n    } catch (err) {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          ...statusMessages.onError,\n          // Add error message from API, if present\n          description: err?.Title\n            ? `${statusMessages.onError.description}: ${err.Title}`\n            : statusMessages.onError.description,\n        }),\n      });\n      return err;\n    }\n  };\n\n  return fetchData();\n};\n\nexport default apiWithToast;\n"],"names":["DrawerColorVariant","DrawerContext","isExpanded","isStatic","onExpand","position","drawerRef","drawerContentRef","isInline","Drawer","_a","className","children","props","__rest","Provider","value","Object","assign","ref","displayName","DrawerMain","DrawerContent","panelContent","colorVariant","TextContent","isVisited","__assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","hour","minute","day","month","year","formatTime","number","unit","concat","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","reduce","acc","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","addTooltip","_b","dateObj","dateType","toString","title","pageHeaderTitleClasses","Title","headingLevel","size","filters","label","columns","cellTransforms","headerCol","UpdateVersionTable","data","isLoading","hasError","useState","selectedVersion","setSelectedVersion","selectedCommitID","setSelectedCommitID","isUpdateSubmitted","setIsUpdateSubmitted","dispatch","useDispatch","history","useHistory","useLocation","pathname","search","match","useRouteMatch","buildRows","map","rowData","version","cells","release","additionalPackages","allPackages","systemsRunning","created","commitID","deviceUUID","deviceName","selected","handleUpdateEvent","statusMessages","onInfo","onError","apiWithToast","updateSystem","CommitID","DevicesUUID","handleClose","destPath","paths","path","includes","pathLen","dest","join","push","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","count","columnNames","rows","defaultSort","index","direction","hasRadio","setRadioSelection","isFooterFixed","style","background","left","height","width","bottom","paddingLeft","paddingBottom","Divider","Button","key","variant","isDisabled","onClick","propTypes","PropTypes","CurrentVersion","image","current_version","Text","TableComposable","borders","Thead","Tr","borderBottomStyle","Th","Tbody","Td","dataLabel","UpdateSystemMain","device","Device","buildRow","Version","distributionMapper","Distribution","Packages","TotalPackages","SystemsRunning","DateFormat","CreatedAt","UUID","DeviceName","currentImage","ImageInfo","Image","newImages","UpdatesAvailable","update","Page","PageSection","isWidthLimited","Card","CardBody","Backdrop","Bullseye","Spinner","isSVG","diameter","useParams","deviceId","groupId","useApi","api","getDevice","groupName","DevicesGroups","find","group","ID","Name","PageHeader","Breadcrumb","ouiaId","BreadcrumbItem","Link","to","PageHeaderTitle","Main","getInventory","query","q","getTableParams","instance","EDGE_API","id","payload","hasSuccess","onSuccess","hasInfo","fetchData","response","addNotification"],"sourceRoot":""}