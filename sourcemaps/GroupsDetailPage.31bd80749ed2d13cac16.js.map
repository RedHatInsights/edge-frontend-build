{"version":3,"sources":["webpack:///./src/components/DeviceDetail.js","webpack:///./src/store/deviceDetail.js","webpack:///./src/Routes/DeviceDetail/DeviceDetail.js","webpack:///./src/components/DeviceSummaryTile.js","webpack:///./src/components/Tiles.js","webpack:///./src/Routes/Devices/Devices.js","webpack:///./src/Routes/ImageManager/constants.js","webpack:///./src/Routes/ImageManager/ImageTable.js","webpack:///./src/Routes/ImageManager/ImagesToolbar.js","webpack:///./src/Routes/ImageManager/Images.js","webpack:///./src/Routes/ImageManagerDetail/DetailsHeader.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTab.js","webpack:///./src/Routes/ImageManagerDetail/ImagePackagesTab.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetailTabs.js","webpack:///./src/Routes/ImageManagerDetail/ImageDetail.js","webpack:///./src/Routes/ImageManagerDetail/StatusLabel.js","webpack:///./src/Routes/ImageManagerDetail/constants.js"],"names":["GeneralInformation","lazy","SystemCard","OperatingSystemCard","CollectionCard","writePermissions","useSelector","permissionsReducer","systemProfileStore","runningVersion","systemProfile","running_rpm_os_tree_version","stagedVersion","staged_rpm_os_tree_version","nonActiveVersion","non_active_rpm_os_tree_version","heathCheck","health_check","rhcHealth","rhc_health","Suspense","fallback","store","useStore","ConfigurationCardWrapper","SystemCardWrapper","props","hasSAP","OperatingSystemCardWrapper","hasKernelModules","extra","title","value","length","plural","singular","onClick","_e","handleClick","generalMapper","statusHelper","toUpperCase","Tooltip","content","className","CollectionCardWrapper","deviceDetail","applyReducerHash","LOAD_ENTITY_FULFILLED","state","loaded","activeApps","name","component","GeneralInformationTab","getRegistry","useContext","RegistryContext","useParams","inventoryId","uuid","displayName","entityDetails","entity","display_name","groupName","groupsDetailReducer","useEffect","insights","chrome","hideGlobalFilter","appAction","appObjectId","DetailWrapper","hideInvLink","showTags","onLoad","mergeWithDetail","register","PageHeader","Breadcrumb","ouiaId","BreadcrumbItem","Link","to","Skeleton","size","SkeletonSize","isActive","InventoryDetailHead","hideBack","hideInvDrawer","Main","Grid","gutter","GridItem","span","AppInfo","DeviceSummaryTileBase","orphaned","active","noReports","neverReported","Card","CardTitle","CardBody","Stack","hasGutter","StackItem","Button","isInline","variant","propTypes","PropTypes","deviceSummaryReducer","isLoading","undefined","hasError","data","shallowEqual","Bullseye","Spinner","Tiles","dispatch","useDispatch","registered","imagesReducer","loadImages","loadDeviceSummary","Flex","FlexItem","onNewImageClick","CreateImageWizard","React","defaultFilters","deviceStatus","label","titles","deviceStatusMapper","useState","getEntities","setGetEntities","isOpen","setIsOpen","activeFilters","setActiveFilters","inventory","useRef","history","useHistory","URLSearchParams","location","search","get","cleanEntities","Fragment","PageHeaderTitle","push","pathname","create_image","toString","InventoryTable","ref","onRefresh","options","callback","current","onRefreshData","tableProps","canSelectAll","_i","config","filter","system_profile","host_type","fields","hideFilters","registeredWith","filterConfig","items","type","filterValues","onChange","event","activeFiltersConfig","isEmptyFilters","filters","constructActiveFilters","find","item","onDelete","itemsToRemove","isAll","onDeleteFilter","onRowClick","id","mergeWithEntities","api","navigateBack","getFilterDep","chips","map","chip","join","ImageTable","pagination","openWizard","clearFilters","index","direction","sortBy","setSortBy","edgeImagesReducer","columns","transforms","toShowSort","sortable","hasFilters","loadEdgeImages","reduce","acc","chipKey","transformFilters","perPage","limit","offset","page","transformPaginationParams","sort_by","Object","keys","some","filterKey","rows","heightAuto","cells","colSpan","EmptyState","EmptyStateIcon","icon","PlusCircleIcon","Title","headingLevel","isDisabled","SearchIcon","EmptyStateSecondaryActions","image","ID","paths","Name","Version","distributionMapper","Distribution","imageTypeMapper","ImageType","DateFormat","date","CreatedAt","StatusLabel","status","Status","isoURL","Installer","ImageBuildISOURL","Table","aria-label","onSort","_event","actionResolver","rowData","href","rel","target","download","TableHeader","TableBody","isRequired","ImageToolbar","setPagination","dispatchActiveFilters","PrimaryToolbar","itemCount","onSetPage","_evt","newPage","onPerPageSelect","newPerPage","payload","dedicatedAction","distribution","key","activeFilterMapper","UPDATE_FILTER","action","property","DELETE_FILTER","_state","activeFilterReducer","useReducer","placeholder","composeStatus","imageStatusReducer","TextContent","TextList","TextListItem","T","imageDetailReducer","labelsToValueMapper","Created","Release","Commit","Packages","Dependancies","TextListVariants","entries","TextListItemVariants","setPerPage","setPage","setRows","imageName","flatten","pack","rowArray","Text","TextVariants","isCompact","ariaLabel","sortedRows","sort","a","b","SortByDirection","reverse","activeTabKey","setActiveTabkey","Tabs","activeKey","onSelect","tabIndex","Tab","eventKey","TabTitleText","imageId","loadImageStatus","loadImageDetail","Description","statusIcons","color","statusColors","text","imageStatusMapper","charAt","slice","toLowerCase","DEFAULT_RELEASE","unknown","CREATED","BUILDING","ERROR","SUCCESS","releaseMapper"],"mappings":"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","file":"js/GroupsDetailPage.76469f010321d1c59e0a.js","sourcesContent":["import React, { Suspense, lazy } from 'react';\nimport { useStore, useSelector } from 'react-redux';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst GeneralInformation = lazy(() =>\n  import(\n    '@redhat-cloud-services/frontend-components-inventory-general-info/GeneralInformation'\n  )\n);\n\nconst SystemCard = lazy(() =>\n  import(\n    '@redhat-cloud-services/frontend-components-inventory-general-info/SystemCard'\n  )\n);\nconst OperatingSystemCard = lazy(() =>\n  import(\n    '@redhat-cloud-services/frontend-components-inventory-general-info/OperatingSystemCard'\n  )\n);\n\nconst CollectionCard = lazy(() =>\n  import(\n    '@redhat-cloud-services/frontend-components-inventory-general-info/CollectionCard'\n  )\n);\n\nimport {\n  generalMapper,\n  statusHelper,\n} from '@redhat-cloud-services/frontend-components-inventory-general-info/dataMapper';\n\nconst GeneralInformationTab = () => {\n  const writePermissions = useSelector(\n    ({ permissionsReducer }) => permissionsReducer?.writePermissions\n  );\n\n  const {\n    runningVersion,\n    stagedVersion,\n    nonActiveVersion,\n    heathCheck,\n    rhcHealth,\n  } = useSelector(({ systemProfileStore }) => ({\n    runningVersion:\n      systemProfileStore?.systemProfile?.running_rpm_os_tree_version,\n    stagedVersion:\n      systemProfileStore?.systemProfile?.staged_rpm_os_tree_version,\n    nonActiveVersion:\n      systemProfileStore?.systemProfile?.non_active_rpm_os_tree_version || [],\n    heathCheck: systemProfileStore?.systemProfile?.health_check,\n    rhcHealth: systemProfileStore?.systemProfile?.rhc_health,\n  }));\n\n  return (\n    <Suspense fallback=\"\">\n      <GeneralInformation\n        store={useStore()}\n        writePermissions={writePermissions}\n        ConfigurationCardWrapper={false}\n        SystemCardWrapper={(props) => (\n          <Suspense fallback=\"\">\n            <SystemCard {...props} hasSAP={false} />\n          </Suspense>\n        )}\n        OperatingSystemCardWrapper={(props) => (\n          <Suspense fallback=\"\">\n            <OperatingSystemCard\n              {...props}\n              hasKernelModules={false}\n              extra={[\n                { title: 'Running rpm-ostree version', value: runningVersion },\n                {\n                  title: 'Staged rpm-ostree version',\n                  value: stagedVersion,\n                },\n                {\n                  title: 'Non-active (available rollback version(s))',\n                  value: nonActiveVersion?.length,\n                  plural: 'versions',\n                  singular: 'version',\n                  onClick: (_e, handleClick) =>\n                    handleClick(\n                      'Non-active (available rollback version(s))',\n                      generalMapper(nonActiveVersion || [], 'Version'),\n                      'small'\n                    ),\n                },\n                {\n                  title: 'Health check status',\n                  value: statusHelper[heathCheck?.toUpperCase()] || (\n                    <Tooltip content=\"Unknown service status\">\n                      <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n                    </Tooltip>\n                  ),\n                },\n              ]}\n            />\n          </Suspense>\n        )}\n        CollectionCardWrapper={(props) => (\n          <Suspense fallback=\"\">\n            <CollectionCard\n              {...props}\n              extra={[\n                {\n                  title: 'RHC Health (broker functioning)',\n                  value: statusHelper[rhcHealth?.toUpperCase()] || (\n                    <Tooltip content=\"Unknown service status\">\n                      <OutlinedQuestionCircleIcon className=\"ins-c-inventory__detail--unknown\" />\n                    </Tooltip>\n                  ),\n                },\n              ]}\n            />\n          </Suspense>\n        )}\n      />\n    </Suspense>\n  );\n};\n\nexport default GeneralInformationTab;\n","import GeneralInformationTab from '../components/DeviceDetail';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\n\nconst entityLoaded = (state) => {\n  return {\n    ...state,\n    loaded: true,\n    activeApps: [\n      {\n        title: 'General information',\n        name: 'general_information',\n        component: GeneralInformationTab,\n      },\n    ],\n  };\n};\n\nexport const deviceDetail = applyReducerHash({\n  LOAD_ENTITY_FULFILLED: entityLoaded,\n});\n","import React, { useEffect, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport {\n  Skeleton,\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport {\n  InventoryDetailHead,\n  AppInfo,\n  DetailWrapper,\n} from '@redhat-cloud-services/frontend-components/Inventory';\nimport { useParams } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { deviceDetail } from '../../store/deviceDetail';\nimport { RegistryContext } from '../../store';\nimport systemProfileStore from '@redhat-cloud-services/frontend-components-inventory-general-info/redux';\n\nconst DeviceDetail = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const { inventoryId, uuid } = useParams();\n  const displayName = useSelector(\n    ({ entityDetails }) => entityDetails?.entity?.display_name\n  );\n  const groupName = useSelector(\n    ({ groupsDetailReducer }) => groupsDetailReducer?.name\n  );\n\n  useEffect(() => {\n    insights.chrome?.hideGlobalFilter?.(true);\n    insights.chrome.appAction('system-detail');\n  }, []);\n\n  useEffect(() => {\n    insights?.chrome?.appObjectId?.(inventoryId);\n  }, [inventoryId]);\n\n  return (\n    <DetailWrapper\n      hideInvLink\n      showTags\n      onLoad={({ mergeWithDetail }) => {\n        getRegistry().register({\n          systemProfileStore,\n          ...mergeWithDetail(deviceDetail),\n        });\n      }}\n    >\n      <PageHeader>\n        <Breadcrumb ouiaId=\"systems-list\">\n          <BreadcrumbItem>\n            <Link to={uuid ? `/groups` : '/fleet-management'}>\n              {uuid ? 'Groups' : 'Fleet management'}\n            </Link>\n          </BreadcrumbItem>\n          {uuid && (\n            <BreadcrumbItem>\n              {groupName ? (\n                <Link to={`/groups/${uuid}`}>{groupName}</Link>\n              ) : (\n                <Skeleton size={SkeletonSize.xs} />\n              )}\n            </BreadcrumbItem>\n          )}\n          <BreadcrumbItem isActive>\n            <div className=\"ins-c-inventory__detail--breadcrumb-name\">\n              {displayName || <Skeleton size={SkeletonSize.xs} />}\n            </div>\n          </BreadcrumbItem>\n        </Breadcrumb>\n        <InventoryDetailHead fallback=\"\" hideBack showTags hideInvDrawer />\n      </PageHeader>\n      <Main className=\"edge-c-device--detail\">\n        <Grid gutter=\"md\">\n          <GridItem span={12}>\n            <AppInfo showTags fallback=\"\" />\n          </GridItem>\n        </Grid>\n      </Main>\n    </DetailWrapper>\n  );\n};\n\nexport default DeviceDetail;\n","import React from 'react';\nimport {\n  Card,\n  CardTitle,\n  CardBody,\n  Button,\n  Bullseye,\n  Spinner,\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst DeviceSummaryTileBase = ({\n  orphaned,\n  active,\n  noReports,\n  neverReported,\n}) => (\n  <Card className=\"tiles-card\">\n    <CardTitle>Device summary</CardTitle>\n    <CardBody>\n      <Grid>\n        <GridItem span={6}>\n          <Stack hasGutter>\n            <StackItem>\n              <Button isInline className=\"pf-u-pr-md\" variant=\"link\">\n                {active}\n              </Button>{' '}\n              Active\n            </StackItem>\n            <StackItem>\n              <Button isInline className=\"pf-u-pr-md\" variant=\"link\">\n                {orphaned}\n              </Button>{' '}\n              Orphaned\n            </StackItem>\n          </Stack>\n        </GridItem>\n        <GridItem span={6}>\n          <Stack hasGutter>\n            <StackItem>\n              <Button isInline className=\"pf-u-pr-md\" variant=\"link\">\n                {noReports}\n              </Button>\n              Stale\n            </StackItem>\n            <StackItem>\n              <Button isInline className=\"pf-u-pr-md\" variant=\"link\">\n                {neverReported}\n              </Button>\n              Registered but never reported\n            </StackItem>\n          </Stack>\n        </GridItem>\n      </Grid>\n    </CardBody>\n  </Card>\n);\n\nDeviceSummaryTileBase.propTypes = {\n  orphaned: PropTypes.number,\n  active: PropTypes.number,\n  noReports: PropTypes.number,\n  neverReported: PropTypes.number,\n};\n\nconst DeviceSummaryTile = () => {\n  const { isLoading, hasError, data } = useSelector(\n    ({ deviceSummaryReducer }) => ({\n      isLoading:\n        deviceSummaryReducer?.isLoading !== undefined\n          ? deviceSummaryReducer?.isLoading\n          : true,\n      hasError: deviceSummaryReducer?.hasError || false,\n      data: deviceSummaryReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  if (isLoading) {\n    return (\n      <Card className=\"tiles-card\">\n        <CardTitle>Device summary information</CardTitle>\n        <CardBody>\n          <Bullseye>\n            <Spinner />\n          </Bullseye>\n        </CardBody>\n      </Card>\n    );\n  }\n  if (hasError) {\n    return (\n      <Card className=\"tiles-card\">\n        <CardTitle>Device summary information</CardTitle>\n        <CardBody>{data}</CardBody>\n      </Card>\n    );\n  }\n  return (\n    <DeviceSummaryTileBase\n      orphaned={data['orphaned']}\n      active={data['active']}\n      noReports={data['noReports']}\n      neverReported={data['neverReported']}\n    />\n  );\n};\n\nexport default DeviceSummaryTile;\n","import React, { useEffect, useContext } from 'react';\nimport { Flex, FlexItem } from '@patternfly/react-core';\nimport DeviceSummaryTile from './DeviceSummaryTile';\nimport { imagesReducer, deviceSummaryReducer } from '../store/reducers';\nimport { useDispatch } from 'react-redux';\nimport { loadImages, loadDeviceSummary } from '../store/actions';\nimport { RegistryContext } from '../store';\nimport PropTypes from 'prop-types';\n\nexport const Tiles = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imagesReducer,\n      deviceSummaryReducer,\n    });\n    loadImages(dispatch);\n    loadDeviceSummary(dispatch);\n    return () => registered();\n  }, [dispatch]);\n  return (\n    <Flex className=\"tiles\">\n      <FlexItem>\n        <DeviceSummaryTile />\n      </FlexItem>\n    </Flex>\n  );\n};\n\nTiles.propTypes = {\n  onNewImageClick: PropTypes.func,\n};\n","import React, {\n  Fragment,\n  useRef,\n  useEffect,\n  useContext,\n  useState,\n  Suspense,\n} from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport { InventoryTable } from '@redhat-cloud-services/frontend-components/Inventory';\nimport { cleanEntities } from '../../store/actions';\nimport { RegistryContext } from '../../store';\nimport {\n  isEmptyFilters,\n  constructActiveFilters,\n  onDeleteFilter,\n} from '../../constants';\nimport { Tiles } from '../../components/Tiles';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst CreateImageWizard = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"CreateImageWizard\" */ '../ImageManager/CreateImageWizard'\n  )\n);\n\nconst defaultFilters = {\n  deviceStatus: {\n    label: 'Device status',\n    value: [],\n    titles: [],\n  },\n};\n\nconst deviceStatusMapper = [\n  {\n    value: 'approval',\n    label: 'Required approval',\n  },\n  {\n    value: 'ophaned',\n    label: 'Orphaned',\n  },\n  {\n    value: 'delivering',\n    label: 'On the way',\n  },\n];\n\nconst Devices = () => {\n  const [getEntities, setGetEntities] = useState();\n  const [isOpen, setIsOpen] = useState(false);\n  const [activeFilters, setActiveFilters] = useState(defaultFilters);\n  const { getRegistry } = useContext(RegistryContext);\n  const inventory = useRef(null);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const onRefresh = (options, callback) => {\n    if (!callback && inventory && inventory.current) {\n      inventory.current.onRefreshData(options);\n    } else if (callback) {\n      callback(options);\n    }\n  };\n\n  useEffect(() => {\n    const searchParams = new URLSearchParams(history.location.search);\n    if (searchParams.get('create_image') === 'true') {\n      setIsOpen(() => true);\n    }\n    return () => dispatch(cleanEntities());\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Fleet management\" />\n      </PageHeader>\n      <Main className=\"edge-devices\">\n        <Tiles\n          onNewImageClick={() => {\n            history.push({\n              pathname: history.location.pathname,\n              search: new URLSearchParams({\n                create_image: true,\n              }).toString(),\n            });\n            setIsOpen(true);\n          }}\n        />\n        <InventoryTable\n          ref={inventory}\n          onRefresh={onRefresh}\n          tableProps={{\n            canSelectAll: false,\n          }}\n          getEntities={async (_i, config) => {\n            const data = await getEntities(undefined, {\n              ...config,\n              filter: {\n                ...config.filter,\n                system_profile: {\n                  ...config.filter?.system_profile,\n                  host_type: 'edge',\n                },\n              },\n              fields: {\n                ...config?.fields,\n                system_profile: [\n                  ...(config?.fields?.system_profile || []),\n                  'host_type',\n                ],\n              },\n            });\n            return data;\n          }}\n          hideFilters={{ registeredWith: true }}\n          filterConfig={{\n            items: [\n              {\n                label: activeFilters?.deviceStatus?.label,\n                type: 'checkbox',\n                filterValues: {\n                  onChange: (event, value) => {\n                    setActiveFilters(() => ({\n                      ...(activeFilters || {}),\n                      deviceStatus: {\n                        ...(activeFilters?.deviceStatus || {}),\n                        value,\n                      },\n                    }));\n                    inventory.current.onRefreshData();\n                  },\n                  items: deviceStatusMapper,\n                  value: activeFilters?.deviceStatus?.value || [],\n                },\n              },\n            ],\n          }}\n          activeFiltersConfig={{\n            ...(isEmptyFilters(activeFilters) && {\n              filters: constructActiveFilters(\n                activeFilters,\n                (value) =>\n                  deviceStatusMapper.find((item) => item.value === value)?.label\n              ),\n            }),\n            onDelete: (event, itemsToRemove, isAll) => {\n              if (isAll) {\n                setActiveFilters(defaultFilters);\n              } else {\n                setActiveFilters(() =>\n                  onDeleteFilter(activeFilters, itemsToRemove)\n                );\n              }\n              inventory.current.onRefreshData();\n            },\n          }}\n          onRowClick={(_e, id) => history.push(`/fleet-management/${id}`)}\n          onLoad={({ mergeWithEntities, api }) => {\n            setGetEntities(() => api?.getEntities);\n            getRegistry()?.register?.({\n              ...mergeWithEntities(),\n            });\n          }}\n        />\n      </Main>\n      {isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <CreateImageWizard\n            navigateBack={() => {\n              history.push({ pathname: history.location.pathname });\n              setIsOpen(false);\n            }}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Devices;\n","export const transformPaginationParams = ({ perPage, page }) => {\n  return {\n    limit: perPage,\n    offset: (page - 1) * perPage,\n  };\n};\n\nexport const transformFilters = (filters) => {\n  const f = filters.reduce((acc, filter) => {\n    if (!filter.chipKey || filter.chips.length === 0) {\n      return acc;\n    }\n    return {\n      ...acc,\n      [filter.chipKey]: filter.chips.map((chip) => chip.value),\n    };\n  }, {});\n  return f;\n};\n\nexport const transformSort = ({ direction, name }) => {\n  return {\n    sort_by: direction === 'asc' ? name : `-${name}`,\n  };\n};\n\nexport const getFilterDep = (filter = undefined) => {\n  return filter?.chips?.map((chip) => chip.value).join('.') || undefined;\n};\n","import React, { useEffect, useState } from 'react';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n} from '@patternfly/react-table';\nimport {\n  EmptyState,\n  EmptyStateIcon,\n  EmptyStateSecondaryActions,\n  Title,\n  Button,\n  Spinner,\n  Bullseye,\n} from '@patternfly/react-core';\nimport {\n  imageTypeMapper,\n  distributionMapper,\n} from '../ImageManagerDetail/constants';\nimport { Link } from 'react-router-dom';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport StatusLabel from '../ImageManagerDetail/StatusLabel';\nimport { loadEdgeImages } from '../../store/actions';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { PlusCircleIcon, SearchIcon } from '@patternfly/react-icons';\nimport { routes as paths } from '../../../package.json';\nimport {\n  transformFilters,\n  transformPaginationParams,\n  transformSort,\n  getFilterDep,\n} from './constants';\nimport PropTypes from 'prop-types';\n\nconst ImageTable = ({ filters, pagination, openWizard, clearFilters }) => {\n  const [sortBy, setSortBy] = useState({ index: 4, direction: 'desc' });\n  const dispatch = useDispatch();\n  const { data, isLoading, hasError } = useSelector(\n    ({ edgeImagesReducer }) => ({\n      data: edgeImagesReducer?.data || null,\n      isLoading:\n        edgeImagesReducer?.isLoading === undefined\n          ? true\n          : edgeImagesReducer.isLoading,\n      hasError: edgeImagesReducer?.hasError,\n    }),\n    shallowEqual\n  );\n\n  const columns = [\n    {\n      title: 'Name',\n      type: 'name',\n      transforms: toShowSort ? [] : [sortable],\n    },\n    'Version',\n    {\n      title: 'Distribution',\n      type: 'distribution',\n      transforms: toShowSort ? [] : [sortable],\n    },\n    {\n      title: 'Type',\n      type: 'image_type',\n      transforms: [],\n    },\n    {\n      title: 'Created',\n      type: 'created_at',\n      transforms: toShowSort ? [] : [sortable],\n    },\n    {\n      title: 'Status',\n      type: 'status',\n      transforms: toShowSort ? [] : [sortable],\n    },\n  ];\n  const toShowSort = isLoading || hasError || (!data?.length && hasFilters);\n  useEffect(() => {\n    loadEdgeImages(dispatch, {\n      ...transformFilters(filters),\n      ...transformPaginationParams(pagination),\n      ...transformSort({\n        direction: sortBy.direction,\n        name: columns[sortBy.index].type,\n      }),\n    });\n  }, [\n    pagination.perPage,\n    pagination.page,\n    sortBy.index,\n    sortBy.direction,\n    // We have 3 different filters in the primary toolbar (status, name, distribution):\n    getFilterDep(filters[0]),\n    getFilterDep(filters[1]),\n    getFilterDep(filters[2]),\n  ]);\n  const hasFilters = Object.keys(filters).some((filterKey) => filterKey);\n\n  let rows = [\n    {\n      heightAuto: true,\n      cells: [\n        {\n          props: { colSpan: 8 },\n          title: (\n            <Bullseye>\n              <EmptyState variant=\"small\">\n                <EmptyStateIcon icon={Spinner} />\n              </EmptyState>\n            </Bullseye>\n          ),\n        },\n      ],\n    },\n  ];\n\n  if (isLoading === false && hasError === false) {\n    if (!data?.length && !hasFilters) {\n      rows = [\n        {\n          heightAuto: true,\n          cells: [\n            {\n              props: { colSpan: 8 },\n              title: (\n                <Bullseye>\n                  <EmptyState variant=\"small\">\n                    <EmptyStateIcon icon={PlusCircleIcon} />\n                    <Title headingLevel=\"h2\" size=\"lg\">\n                      No images found\n                    </Title>\n                    <Button\n                      onClick={openWizard}\n                      isDisabled={isLoading !== false}\n                    >\n                      Create new images\n                    </Button>\n                  </EmptyState>\n                </Bullseye>\n              ),\n            },\n          ],\n        },\n      ];\n    }\n    if (!data?.length && hasFilters) {\n      rows = [\n        {\n          heightAuto: true,\n          cells: [\n            {\n              props: { colSpan: 8 },\n              title: (\n                <Bullseye>\n                  <EmptyState variant=\"small\">\n                    <EmptyStateIcon icon={SearchIcon} />\n                    <Title headingLevel=\"h2\" size=\"lg\">\n                      No match found\n                    </Title>\n                    <EmptyStateSecondaryActions>\n                      <Button onClick={clearFilters} variant=\"link\">\n                        Clear all filters\n                      </Button>\n                    </EmptyStateSecondaryActions>\n                  </EmptyState>\n                </Bullseye>\n              ),\n            },\n          ],\n        },\n      ];\n    }\n\n    if (data?.length) {\n      rows = data.map((image) => ({\n        id: image.ID,\n        cells: [\n          {\n            title: (\n              <Link to={`${paths['manage-images']}/${image.ID}`}>\n                {image.Name}\n              </Link>\n            ),\n          },\n          image?.Version,\n          {\n            title: distributionMapper[image?.Distribution],\n          },\n          {\n            title: imageTypeMapper[image?.ImageType],\n          },\n          {\n            title: <DateFormat date={image?.CreatedAt} />,\n          },\n          {\n            title: <StatusLabel status={image?.Status} />,\n          },\n        ],\n        isoURL: image?.Installer?.ImageBuildISOURL,\n      }));\n    }\n  }\n\n  const handleSort = (_event, index, direction) => {\n    setSortBy({ index, direction });\n  };\n\n  const actionResolver = (rowData) => {\n    if (rowData?.isoURL === undefined) {\n      return [];\n    }\n\n    return [\n      {\n        title: (\n          <a\n            href={rowData.isoURL}\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            download\n          >\n            Download\n          </a>\n        ),\n      },\n    ];\n  };\n\n  return (\n    <Table\n      variant=\"compact\"\n      aria-label=\"Manage Images table\"\n      sortBy={sortBy}\n      onSort={handleSort}\n      actionResolver={actionResolver}\n      cells={columns}\n      rows={rows}\n    >\n      <TableHeader />\n      <TableBody />\n    </Table>\n  );\n};\n\nImageTable.propTypes = {\n  clearFilters: PropTypes.func.isRequired,\n  openWizard: PropTypes.func.isRequired,\n  filters: PropTypes.array.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n  }).isRequired,\n};\n\nexport default ImageTable;\n","import React from 'react';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport {\n  isEmptyFilters,\n  constructActiveFilters,\n  onDeleteFilter,\n} from '../../constants';\nimport { Button } from '@patternfly/react-core';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst ImageToolbar = ({\n  setPagination,\n  pagination,\n  filterConfig,\n  activeFilters,\n  dispatchActiveFilters,\n  defaultFilters,\n  openWizard,\n}) => {\n  const { isLoading } = useSelector(\n    ({ edgeImagesReducer }) => ({\n      isLoading:\n        edgeImagesReducer?.isLoading === undefined\n          ? true\n          : edgeImagesReducer.isLoading,\n    }),\n    shallowEqual\n  );\n\n  return (\n    <PrimaryToolbar\n      filterConfig={filterConfig}\n      pagination={{\n        itemCount: 100,\n        ...pagination,\n        onSetPage: (_evt, newPage) => setPagination({ page: newPage }),\n        onPerPageSelect: (_evt, newPerPage) =>\n          setPagination({ page: 1, perPage: newPerPage }),\n      }}\n      activeFiltersConfig={{\n        filters: isEmptyFilters(activeFilters)\n          ? constructActiveFilters(activeFilters)\n          : [],\n        onDelete: (_event, itemsToRemove, isAll) => {\n          if (isAll) {\n            dispatchActiveFilters({\n              type: 'DELETE_FILTER',\n              payload: defaultFilters,\n            });\n          } else {\n            dispatchActiveFilters({\n              type: 'DELETE_FILTER',\n              payload: onDeleteFilter(activeFilters, itemsToRemove),\n            });\n          }\n        },\n      }}\n      dedicatedAction={\n        <Button onClick={openWizard} isDisabled={isLoading !== false}>\n          Create new image\n        </Button>\n      }\n    />\n  );\n};\n\nImageToolbar.propTypes = {\n  setPagination: PropTypes.func.isRequired,\n  filterConfig: PropTypes.shape({ items: PropTypes.array }),\n  defaultFilters: PropTypes.shape({\n    name: PropTypes.object,\n    distribution: PropTypes.object,\n    status: PropTypes.object,\n  }),\n  activeFilters: PropTypes.shape({\n    name: PropTypes.object,\n    distribution: PropTypes.object,\n    status: PropTypes.object,\n  }),\n  dispatchActiveFilters: PropTypes.func.isRequired,\n  openWizard: PropTypes.func.isRequired,\n  filters: PropTypes.array.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number,\n    perPage: PropTypes.number,\n  }).isRequired,\n};\n\nexport default ImageToolbar;\n","import React, {\n  Fragment,\n  useState,\n  useReducer,\n  useEffect,\n  useContext,\n  Suspense,\n} from 'react';\nimport {\n  PageHeader,\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Main } from '@redhat-cloud-services/frontend-components/Main';\nimport ImageTable from './ImageTable';\nimport ImageToolbar from './ImagesToolbar';\nimport { Spinner, Bullseye } from '@patternfly/react-core';\nimport { useHistory } from 'react-router-dom';\nimport { composeStatus } from '../ImageManagerDetail/constants';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport { isEmptyFilters, constructActiveFilters } from '../../constants';\nimport { RegistryContext } from '../../store';\nimport { edgeImagesReducer } from '../../store/reducers';\n\nconst CreateImageWizard = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"CreateImageWizard\" */ '../ImageManager/CreateImageWizard'\n  )\n);\n\nconst defaultFilters = {\n  name: {\n    label: 'Name',\n    key: 'name',\n    value: '',\n  },\n  distribution: {\n    label: 'Distribution',\n    key: 'distribution',\n    value: [],\n  },\n  status: {\n    label: 'Status',\n    key: 'status',\n    value: [],\n  },\n};\n\nconst updateFilter = (state, action) => ({\n  ...state,\n  [action.property]: {\n    ...(state[action.property] || {}),\n    value: action.value,\n  },\n});\n\nconst deleteFilter = (_state, action) => action.payload;\n\nconst activeFilterMapper = {\n  UPDATE_FILTER: updateFilter,\n  DELETE_FILTER: deleteFilter,\n};\n\nconst activeFilterReducer = applyReducerHash(\n  activeFilterMapper,\n  defaultFilters\n);\n\nconst Images = () => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [pagination, setPagination] = useState({ page: 1, perPage: 100 });\n  const [isOpen, setIsOpen] = useState(false);\n  const history = useHistory();\n  const [activeFilters, dispatchActiveFilters] = useReducer(\n    activeFilterReducer,\n    defaultFilters\n  );\n\n  const openWizard = () => {\n    history.push({\n      pathname: history.location.pathname,\n      search: new URLSearchParams({\n        create_image: true,\n      }).toString(),\n    });\n    setIsOpen(true);\n  };\n\n  const filterConfig = {\n    items: [\n      {\n        label: defaultFilters.name.label,\n        type: 'text',\n        filterValues: {\n          key: 'name-filter',\n          onChange: (_event, value) =>\n            dispatchActiveFilters({\n              type: 'UPDATE_FILTER',\n              property: 'name',\n              value,\n            }),\n          value: activeFilters?.name?.value || '',\n          placeholder: 'Filter by name',\n        },\n      },\n      {\n        label: defaultFilters.distribution.label,\n        type: 'text',\n        filterValues: {\n          key: 'distribution-filter',\n          onChange: (_event, value) =>\n            dispatchActiveFilters({\n              type: 'UPDATE_FILTER',\n              property: 'distribution',\n              value,\n            }),\n          value: activeFilters?.distribution?.value || '',\n        },\n      },\n      {\n        label: defaultFilters.status.label,\n        type: 'checkbox',\n        filterValues: {\n          key: 'status-filter',\n          onChange: (_event, value) =>\n            dispatchActiveFilters({\n              type: 'UPDATE_FILTER',\n              property: 'status',\n              value,\n            }),\n          items: composeStatus.map((item) => ({\n            value: item,\n            label: item,\n          })),\n          value: activeFilters?.status?.value || [],\n        },\n      },\n    ],\n  };\n\n  useEffect(() => {\n    const registered = getRegistry().register({ edgeImagesReducer });\n    return () => registered();\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <PageHeaderTitle title=\"Manage images\" />\n      </PageHeader>\n      <Main className=\"edge-devices\">\n        <ImageToolbar\n          setPagination={setPagination}\n          pagination={pagination}\n          filterConfig={filterConfig}\n          activeFilters={activeFilters}\n          dispatchActiveFilters={dispatchActiveFilters}\n          defaultFilters={defaultFilters}\n          openWizard={openWizard}\n        />\n        <ImageTable\n          clearFilters={() =>\n            dispatchActiveFilters({\n              type: 'DELETE_FILTER',\n              payload: defaultFilters,\n            })\n          }\n          openWizard={openWizard}\n          filters={\n            isEmptyFilters(activeFilters)\n              ? constructActiveFilters(activeFilters)\n              : []\n          }\n          pagination={pagination}\n        />\n      </Main>\n      {isOpen && (\n        <Suspense\n          fallback={\n            <Bullseye>\n              <Spinner />\n            </Bullseye>\n          }\n        >\n          <CreateImageWizard\n            navigateBack={() => {\n              history.push({ pathname: history.location.pathname });\n              setIsOpen(false);\n            }}\n          />\n        </Suspense>\n      )}\n    </Fragment>\n  );\n};\n\nexport default Images;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport {\n  TextList,\n  TextListItem,\n  TextContent,\n  Skeleton,\n  Breadcrumb,\n  BreadcrumbItem,\n} from '@patternfly/react-core';\nimport StatusLabel from './StatusLabel';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport { routes as paths } from '../../../package.json';\n\nconst DetailsHead = () => {\n  const { isLoading, hasError, data } = useSelector(\n    ({ imageStatusReducer }) => ({\n      isLoading:\n        imageStatusReducer?.isLoading !== undefined\n          ? imageStatusReducer?.isLoading\n          : true,\n      hasError: imageStatusReducer?.hasError || false,\n      data: imageStatusReducer?.data || null,\n    }),\n    shallowEqual\n  );\n\n  const status = !isLoading && !hasError ? data.Status : null;\n\n  return (\n    <>\n      <Breadcrumb>\n        <BreadcrumbItem>\n          <Link to={paths['manage-images']}>Manage Images</Link>\n        </BreadcrumbItem>\n        <BreadcrumbItem isActive>{data?.Name}</BreadcrumbItem>\n      </Breadcrumb>\n\n      <TextContent>\n        <TextList component=\"dl\">\n          <TextListItem component=\"h1\" className=\"grid-align-center\">\n            {data?.Name}\n          </TextListItem>\n          <TextListItem className=\"pf-u-pt-xs\" component=\"dd\">\n            {isLoading ? <Skeleton /> : <StatusLabel status={status} />}\n          </TextListItem>\n        </TextList>\n      </TextContent>\n    </>\n  );\n};\n\nexport default DetailsHead;\n","import React from 'react';\nimport {\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from '@patternfly/react-core';\nimport { useSelector, shallowEqual } from 'react-redux';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { distributionMapper, imageTypeMapper } from './constants';\n\nconst ImageDetailTab = () => {\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({ data: imageDetailReducer?.data || null }),\n    shallowEqual\n  );\n\n  const dateFormat = () => <DateFormat date={data['CreatedAt']} />;\n  const labelsToValueMapper = {\n    'Image name': 'Name',\n    Version: 'Version',\n    Created: () => dateFormat(),\n    Release: () => distributionMapper[data['Distribution']],\n    'Output type': () => imageTypeMapper[data['ImageType']],\n    'Added packages': () => data.Commit.Packages.length,\n    'Base Packages': () => 0,\n    Dependancies: () => 0,\n  };\n\n  return (\n    <TextContent className=\"pf-u-ml-lg pf-u-mt-md\">\n      <TextList component={TextListVariants.dl}>\n        {data\n          ? Object.entries(labelsToValueMapper).map(([label, value]) => {\n              return (\n                <>\n                  <TextListItem component={TextListItemVariants.dt}>\n                    {label}\n                  </TextListItem>\n                  <TextListItem component={TextListItemVariants.dd}>\n                    {typeof value === 'function' ? value() : data[value]}\n                  </TextListItem>\n                </>\n              );\n            })\n          : null}\n      </TextList>\n    </TextContent>\n  );\n};\n\nexport default ImageDetailTab;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport {\n  EmptyState,\n  Title,\n  Bullseye,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport {\n  Table,\n  TableHeader,\n  TableBody,\n  sortable,\n  SortByDirection,\n} from '@patternfly/react-table';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { PrimaryToolbar } from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport flatten from 'lodash/flatten';\n\nconst ImagePackagesTab = () => {\n  const [perPage, setPerPage] = useState(100);\n  const [page, setPage] = useState(1);\n  const [sortBy, setSortBy] = useState({});\n  const [rows, setRows] = useState([]);\n  const { data, imageName } = useSelector(\n    ({ imageDetailReducer }) => ({\n      data: imageDetailReducer?.data?.Commit?.Packages || null,\n      imageName: imageDetailReducer?.data?.Name || null,\n    }),\n    shallowEqual\n  );\n\n  const columns = [\n    {\n      title: 'Name',\n      type: 'name',\n      transforms: [sortable],\n    },\n  ];\n\n  useEffect(() => {\n    setRows(\n      data !== null && data.length > 0\n        ? flatten(\n            data.map((pack) => [\n              {\n                id: pack?.ID,\n                rowArray: [pack.Name],\n                cells: [\n                  {\n                    title: (\n                      <TextContent>\n                        <Text component={TextVariants.p}>{pack?.Name}</Text>\n                      </TextContent>\n                    ),\n                  },\n                ],\n              },\n            ])\n          )\n        : [\n            {\n              heightAuto: true,\n              cells: [\n                {\n                  props: { colSpan: 8 },\n                  title: (\n                    <Bullseye>\n                      <EmptyState variant=\"small\">\n                        <Title headingLevel=\"h2\" size=\"lg\">\n                          {imageName} has no packages\n                        </Title>\n                      </EmptyState>\n                    </Bullseye>\n                  ),\n                },\n              ],\n            },\n          ]\n    );\n  }, [data]);\n\n  const handleSort = (_event, index, direction) => {\n    const sortedRows = rows.sort((a, b) =>\n      a.rowArray[index] < b.rowArray[index]\n        ? -1\n        : a.rowArray[index] > b.rowArray[index]\n        ? 1\n        : 0\n    );\n    setSortBy({\n      index,\n      direction,\n    });\n    setRows(\n      direction === SortByDirection.asc ? sortedRows : sortedRows.reverse()\n    );\n  };\n\n  return (\n    <Fragment>\n      {data ? (\n        <PrimaryToolbar\n          pagination={{\n            itemCount: data?.length || 0,\n            page,\n            perPage,\n            onSetPage: (_evt, newPage) => setPage(newPage),\n            onPerPageSelect: (_evt, newPerPage) => setPerPage(newPerPage),\n            isCompact: true,\n          }}\n        />\n      ) : null}\n      <Table\n        aria-label=\"Image packages table\"\n        ariaLabel=\"packages table\"\n        variant=\"compact\"\n        sortBy={sortBy}\n        onSort={handleSort}\n        cells={columns}\n        rows={rows}\n      >\n        <TableHeader />\n        <TableBody />\n      </Table>\n    </Fragment>\n  );\n};\n\nexport default ImagePackagesTab;\n","import React, { useState } from 'react';\nimport { Tabs, Tab, TabTitleText } from '@patternfly/react-core';\n\nimport ImageDetailTab from './ImageDetailTab';\nimport ImagePackagesTab from './ImagePackagesTab';\n\nconst ImageDetailTabs = () => {\n  const [activeTabKey, setActiveTabkey] = useState(0);\n  const handleTabClick = (_event, tabIndex) => setActiveTabkey(tabIndex);\n  return (\n    <div className=\"edge-c-device--detail add-100vh\">\n      <Tabs\n        className=\"pf-u-ml-md\"\n        activeKey={activeTabKey}\n        onSelect={handleTabClick}\n      >\n        <Tab eventKey={0} title={<TabTitleText>Details</TabTitleText>}>\n          <ImageDetailTab />\n        </Tab>\n        <Tab eventKey={1} title={<TabTitleText>Packages</TabTitleText>}>\n          <ImagePackagesTab />\n        </Tab>\n      </Tabs>\n    </div>\n  );\n};\n\nexport default ImageDetailTabs;\n","import React, { Fragment, useContext, useEffect } from 'react';\nimport { PageHeader } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { useParams } from 'react-router-dom';\nimport { Stack, StackItem, Text } from '@patternfly/react-core';\nimport { useDispatch } from 'react-redux';\nimport { RegistryContext } from '../../store';\nimport { loadImageStatus, loadImageDetail } from '../../store/actions';\nimport { imageStatusReducer, imageDetailReducer } from '../../store/reducers';\nimport DetailsHead from './DetailsHeader';\nimport ImageDetailTabs from './ImageDetailTabs';\nimport { useSelector, shallowEqual } from 'react-redux';\n\nconst ImageDetail = () => {\n  const { imageId } = useParams();\n  const { getRegistry } = useContext(RegistryContext);\n  const dispatch = useDispatch();\n\n  const { data } = useSelector(\n    ({ imageDetailReducer }) => ({ data: imageDetailReducer?.data || null }),\n    shallowEqual\n  );\n\n  useEffect(() => {\n    const registered = getRegistry().register({\n      imageStatusReducer,\n      imageDetailReducer,\n    });\n    loadImageStatus(dispatch, imageId);\n    loadImageDetail(dispatch, imageId);\n    return () => registered();\n  }, [dispatch]);\n\n  return (\n    <Fragment>\n      <PageHeader className=\"pf-m-light\">\n        <Stack hasGutter>\n          <StackItem>\n            <DetailsHead />\n          </StackItem>\n        </Stack>\n        <StackItem>\n          <Text>{data?.Description}</Text>\n        </StackItem>\n      </PageHeader>\n      <ImageDetailTabs />\n    </Fragment>\n  );\n};\n\nexport default ImageDetail;\n","import React from 'react';\nimport { Split, SplitItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport {\n  composeStatus,\n  statusIcons,\n  statusColors,\n  imageStatusMapper,\n} from './constants';\n\nconst StatusLabel = ({ status }) => {\n  let icon = statusIcons['unknown'];\n  let color = statusColors['unknown'];\n  let text = 'Unknown';\n  if (composeStatus.includes(status)) {\n    icon = statusIcons[status];\n    color = statusColors[status];\n    text = imageStatusMapper[status];\n    text = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\n  }\n  return (\n    <Split>\n      <SplitItem className=\"pf-u-mr-sm\">{icon(color)}</SplitItem>\n      <SplitItem>{text}</SplitItem>\n    </Split>\n  );\n};\n\nStatusLabel.propTypes = {\n  status: PropTypes.oneOf(composeStatus),\n};\n\nexport default StatusLabel;\n","import React from 'react';\nimport CheckCircleIcon from '@patternfly/react-icons/dist/js/icons/check-circle-icon';\nimport InProgressIcon from '@patternfly/react-icons/dist/js/icons/in-progress-icon';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/js/icons/times-circle-icon';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/question-circle-icon';\n\nexport const composeStatus = ['CREATED', 'BUILDING', 'ERROR', 'SUCCESS'];\n\nexport const DEFAULT_RELEASE = 'rhel-84';\n\n//For this object, it's need to sisable lint once this is not a react component\nexport const statusIcons = {\n  // eslint-disable-next-line react/display-name\n  unknown: (color) => <QuestionCircleIcon color={color} />,\n  // eslint-disable-next-line react/display-name\n  CREATED: (color) => <CheckCircleIcon color={color} />,\n  // eslint-disable-next-line react/display-name\n  BUILDING: (color) => <InProgressIcon color={color} />,\n  // eslint-disable-next-line react/display-name\n  ERROR: (color) => <TimesCircleIcon color={color} />,\n  // eslint-disable-next-line react/display-name\n  SUCCESS: (color) => <CheckCircleIcon color={color} />,\n};\n\nexport const statusColors = {\n  unknown: 'grey',\n  CREATED: 'green',\n  BUILDING: 'blue',\n  ERROR: 'red',\n  SUCCESS: 'green',\n};\n\nexport const imageStatusMapper = {\n  CREATED: 'CREATED',\n  BUILDING: 'Image build in progress',\n  ERROR: 'ERROR',\n  SUCCESS: 'SUCCESS',\n};\n\nexport const distributionMapper = {\n  'rhel-84': 'RHEL 8.4',\n};\n\nexport const releaseMapper = {\n  'rhel-84': 'Red Hat Enterprise Linux (RHEL) 8.4',\n};\n\nexport const imageTypeMapper = {\n  'rhel-edge-installer': 'RHEL for Edge Installer (.iso)',\n  'rhel-edge-commit': 'RHEL for Edge Commit (.tar)',\n};\n"],"sourceRoot":""}