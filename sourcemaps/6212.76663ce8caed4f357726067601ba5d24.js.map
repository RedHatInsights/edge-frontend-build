{"version":3,"file":"js/6212.c44923441eed709f546a.js","mappings":"4IAKWA,E,wDACX,SAAWA,GACPA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAiB,GAAI,KACrBA,EAAgB,EAAI,IACpBA,EAAgB,EAAI,IACpBA,EAAoB,MAAI,QACxBA,EAAyB,WAAI,aAC7BA,EAAkB,IAAI,KACzB,CAZD,CAYGA,IAAiBA,EAAe,CAAC,IAC7B,MAAMC,EAAQC,IACjB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,UAAEC,EAAYL,EAAaM,EAAC,cAAEC,GAAgB,EAAK,OAAEC,EAAM,SAAEC,GAAW,GAASP,EAAIQ,GAAQ,IAAAC,QAAOT,EAAI,CAAC,WAAY,YAAa,YAAa,gBAAiB,SAAU,aAC/M,MAAMU,EAAYP,EACZQ,GAAY,QAAaZ,EAAKa,YAAaN,EAAQC,GACzD,OAAQ,gBAAoBG,EAAWG,OAAOC,OAAO,CAAC,EAAGH,EAAWH,EAAO,CAAE,mBAAmB,EAAMN,WAAW,OAAIG,GAAiBF,IAAcL,EAAaiB,GAAK,sBAA0Bb,KAAeD,EAAU,EAE7NF,EAAKa,YAAc,M,gGCrBZ,MAAMI,EAAehB,IACxB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAE,UAAEe,GAAY,GAAUjB,EAAIQ,GAAQ,IAAAC,QAAOT,EAAI,CAAC,WAAY,YAAa,cAC9G,OAAQ,gBAAoB,MAAOa,OAAOC,OAAO,CAAC,EAAGN,EAAO,CAAEN,WAAW,OAAI,YAAgBe,GAAa,sBAA0Bf,KAAeD,EAAU,EAEjKe,EAAYJ,YAAc,a,yDCP1B,SACE,QAAW,eACX,UAAa,CACX,QAAW,eACX,aAAgB,sB,kFCLhBM,EAAsC,WAStC,OARAA,EAAWL,OAAOC,QAAU,SAASK,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIjB,KADTgB,EAAIG,UAAUF,GACOR,OAAOY,UAAUC,eAAeC,KAAKP,EAAGhB,KACzDe,EAAEf,GAAKgB,EAAEhB,IAEjB,OAAOe,CACX,EACOD,EAASU,MAAMC,KAAMN,UAChC,EAKWO,EAAkB,SAAUC,GAAgB,MAAO,CAC1DC,KAAM,KACNC,QAASf,EAAS,CAAEgB,IAAe,eAJ5B,+BAAgC,IAAIC,MAAOC,UAAYC,KAAKC,SAASC,SAAS,IAAIC,MAAM,KAIzCT,GACtD,EACOU,EAAqB,SAAUC,GAAS,MAAO,CACtDV,KAAM,KACNC,QAASS,EACT,EACOC,EAAqB,WAAc,MAAO,CACjDX,KAAM,KACN,C,2HCvBEY,EAAiB,WAAkB,IAAjBC,EAAU,UAAH,6CAAG,CAAC,EACjC,OAAOA,aAAO,EAAPA,EAASX,MAAMW,aAAO,EAAPA,EAASC,WAAWD,aAAO,EAAPA,EAASE,UACrD,EAEMC,EAAgB,SAAChB,GAAI,OAAKA,EAAKiB,SAAS,IAAD,OANtB,WAM4C,EAEtDJ,EACX,WADkB,IACjBK,EAAW,UAAH,6CAAG,CAAC,EAAC,OACd,gBAAGC,EAAQ,EAARA,SAAQ,OACX,SAACC,GAAI,OACL,SAACC,GACC,IAAQrB,EAAwBqB,EAAxBrB,KAAMC,EAAkBoB,EAAlBpB,QAASqB,EAASD,EAATC,KACvB,GAAIN,EAAchB,IAASY,EAAeX,GAAU,CAClD,IAAQC,EAAoCD,EAApCC,GAAIY,EAAgCb,EAAhCa,QAASC,EAAuBd,EAAvBc,UAAWQ,EAAYtB,EAAZsB,QAChC,GAAIL,EAAShB,GACX,OAiBF,OAfAgB,EAAShB,IAAM,OACfsB,YAAW,WACTL,EAAS,CACPnB,KAAME,EACND,QAASa,IAAUW,MAAK,SAACC,GACvBR,EAAShB,IAAM,EACf,MAAgCa,EAAUW,GAAK,eAAxCC,EAAU,KAAEC,EAAS,OACRL,aAAO,EAAPA,EAAUK,KAAc,IAChCC,SAAQ,SAACR,GAAM,OAAKA,EAAOF,EAAS,IAC5CQ,GACFR,EAASE,EAEb,MACA,OAAO,kBAAM,IAAI,GACrB,GAAG,KAEL,CAEA,GAAIT,EAAeU,aAAI,EAAJA,EAAMT,SAAU,CACjC,MAA4CS,EAAKT,QAAzCX,EAAE,EAAFA,GAAIY,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWQ,EAAO,EAAPA,QAChCJ,EAAS,CACPnB,KAAM,GAAF,OAAKE,EAAE,YACXD,QAAS,CACPC,GAAAA,EACAY,QAAAA,EACAC,UAAAA,EACAQ,QAAAA,IAGN,CAEAH,EAAKC,EACP,CAAC,IC7CUS,GAAkBC,EAAAA,EAAAA,eAAc,CAC3CC,YAAa,WAAO,IAGf,SAASC,IAAoB,2BAAZC,EAAU,yBAAVA,EAAU,gBAChC,OAAO,IAAIC,EAAAA,GAAgB,CAAC,EAAG,CAC7BC,KACAC,EAAAA,EAAAA,IAAwB,CACtBC,oBAAqB,CAAC,SAAU,WAElCzB,KAAS,OACNqB,GAEP,C","sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/Text.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextContent.js","webpack:///./node_modules/@patternfly/react-styles/css/components/Content/content.mjs","webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { useOUIAProps } from '../../helpers';\nexport var TextVariants;\n(function (TextVariants) {\n    TextVariants[\"h1\"] = \"h1\";\n    TextVariants[\"h2\"] = \"h2\";\n    TextVariants[\"h3\"] = \"h3\";\n    TextVariants[\"h4\"] = \"h4\";\n    TextVariants[\"h5\"] = \"h5\";\n    TextVariants[\"h6\"] = \"h6\";\n    TextVariants[\"p\"] = \"p\";\n    TextVariants[\"a\"] = \"a\";\n    TextVariants[\"small\"] = \"small\";\n    TextVariants[\"blockquote\"] = \"blockquote\";\n    TextVariants[\"pre\"] = \"pre\";\n})(TextVariants || (TextVariants = {}));\nexport const Text = (_a) => {\n    var { children = null, className = '', component = TextVariants.p, isVisitedLink = false, ouiaId, ouiaSafe = true } = _a, props = __rest(_a, [\"children\", \"className\", \"component\", \"isVisitedLink\", \"ouiaId\", \"ouiaSafe\"]);\n    const Component = component;\n    const ouiaProps = useOUIAProps(Text.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(Component, Object.assign({}, ouiaProps, props, { \"data-pf-content\": true, className: css(isVisitedLink && component === TextVariants.a && styles.modifiers.visited, className) }), children));\n};\nText.displayName = 'Text';\n//# sourceMappingURL=Text.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Content/content';\nimport { css } from '@patternfly/react-styles';\nexport const TextContent = (_a) => {\n    var { children = null, className = '', isVisited = false } = _a, props = __rest(_a, [\"children\", \"className\", \"isVisited\"]);\n    return (React.createElement(\"div\", Object.assign({}, props, { className: css(styles.content, isVisited && styles.modifiers.visited, className) }), children));\n};\nTextContent.displayName = 'TextContent';\n//# sourceMappingURL=TextContent.js.map","import './content.css';\nexport default {\n  \"content\": \"pf-c-content\",\n  \"modifiers\": {\n    \"visited\": \"pf-m-visited\",\n    \"overpassFont\": \"pf-m-overpass-font\"\n  }\n};","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n"],"names":["TextVariants","Text","_a","children","className","component","p","isVisitedLink","ouiaId","ouiaSafe","props","__rest","Component","ouiaProps","displayName","Object","assign","a","TextContent","isVisited","__assign","t","s","i","n","arguments","length","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","removeNotification","index","clearNotifications","hasPollingData","polling","fetcher","condition","ofPollingType","endsWith","pollHash","dispatch","next","action","meta","onEvent","setTimeout","then","resp","toContinue","stateName","forEach","RegistryContext","createContext","getRegistry","init","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}