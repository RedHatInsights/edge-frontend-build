{"version":3,"file":"js/9547.e7812b0f423bc17a7e9f.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components-notifications/esm/redux/actions/notifications.js","webpack:///./src/Routes.js","webpack:///./src/components/AuthModal.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js","webpack:///./src/constants/routeMapper.js","webpack:///./src/store/polling.js","webpack:///./src/store/index.js"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { ADD_NOTIFICATION, CLEAR_NOTIFICATIONS, REMOVE_NOTIFICATION } from './action-types';\nfunction generateID(type) {\n    return 'cloud-services' + type + '-' + new Date().getTime() + Math.random().toString(36).slice(2);\n}\nexport var addNotification = function (notification) { return ({\n    type: ADD_NOTIFICATION,\n    payload: __assign({ id: generateID('notification') }, notification),\n}); };\nexport var removeNotification = function (index) { return ({\n    type: REMOVE_NOTIFICATION,\n    payload: index,\n}); };\nexport var clearNotifications = function () { return ({\n    type: CLEAR_NOTIFICATIONS,\n}); };\nexport default {\n    addNotification: addNotification,\n    removeNotification: removeNotification,\n    clearNotifications: clearNotifications,\n};\n//# sourceMappingURL=notifications.js.map","import { Redirect, Route, Switch } from 'react-router-dom';\n\nimport React, { Suspense } from 'react';\nimport { routes as paths } from './constants/routeMapper';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst DeviceDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"DeviceDetail\" */ './Routes/DeviceDetail/DeviceDetail'\n  )\n);\n\n// const Canaries = React.lazy(() =>\n//   import(\n//     /* webpackChunkName: \"Canaries\" */ './Routes/Canaries/Canaries'\n//   )\n// );\n\nconst Groups = React.lazy(() =>\n  import(/* webpackChunkName: \"Groups\" */ './Routes/Groups/Groups')\n);\n\nconst GroupsDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"GroupsDetail\" */ './Routes/GroupsDetail/GroupsDetail'\n  )\n);\n\nconst Inventory = React.lazy(() =>\n  import(/* webpackChunkName: \"Inventory\" */ './Routes/Devices/Inventory')\n);\n\nconst UpdateSystem = React.lazy(() =>\n  import(/* webpackChunkName: \"UpdateSystem\" */ './Routes/Devices/UpdateSystem')\n);\n\nconst Images = React.lazy(() =>\n  import(/* webpackChunkName: \"Images\" */ './Routes/ImageManager/Images')\n);\n\nconst ImageDetail = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"ImageDetail\" */ './Routes/ImageManagerDetail/ImageDetail'\n  )\n);\n\nconst Repositories = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"Repositories\" */ './Routes/Repositories/Repositories'\n  )\n);\n\nconst LearningResources = React.lazy(() =>\n  import(\n    /* webpackChunkName: \"LearningResources\" */ './Routes/LearningResources/LearningResources'\n  )\n);\n\nexport const Routes = () => {\n  return (\n    <Suspense\n      fallback={\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      }\n    >\n      <Switch>\n        <Route exact path={paths.groups} component={Groups} />\n        <Route exact path={paths.groupsDetail} component={GroupsDetail} />\n\n        {/* <Route path={paths.deviceDetail} component={DeviceDetail} /> */}\n        {/* <Route path={paths.canaries} component={Canaries} /> */}\n        <Route exact path={paths.fleetManagement} component={Groups} />\n        <Route\n          exact\n          path={paths.fleetManagementDetail}\n          component={GroupsDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetail}\n          component={DeviceDetail}\n        />\n        <Route\n          exact\n          path={paths.fleetManagementSystemDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route exact path={paths.inventory} component={Inventory} />\n        <Route\n          exact\n          path={paths.inventoryDetailUpdate}\n          component={UpdateSystem}\n        />\n        <Route path={paths.inventoryDetail} component={DeviceDetail} />\n        <Route path={paths.manageImagesDetailVersion} component={ImageDetail} />\n        <Route path={paths.manageImagesDetail} component={ImageDetail} />\n        <Route path={paths.manageImages} component={Images} />\n\n        <Route exact path={paths.repositories} component={Repositories} />\n\n        <Route\n          exact\n          path={paths.learningResources}\n          component={LearningResources}\n        />\n        <Route>\n          <Redirect to={paths.fleetManagement} />\n        </Route>\n      </Switch>\n    </Suspense>\n  );\n};\n","import React from 'react';\nimport { Modal, ModalBoxFooter, Button } from '@patternfly/react-core';\nimport edgeIcon from '../../static/images/Icon-Red_Hat-Edge-A-Red-RGB.png';\n\nconst AuthModal = () => {\n  return (\n    <Modal\n      style={{ padding: '15px' }}\n      isOpen={true}\n      variant=\"small\"\n      onClose={() => (window.location.href = `https://${window.location.host}`)}\n      aria-label=\"auth-modal\"\n      header={\n        <h2 className=\"pf-u-pr-xl pf-u-pl-xl pf-u-font-size-2xl pf-u-text-align-center pf-u-font-weight-bold\">\n          Edge management requires a valid Red Hat Satellite subscription\n        </h2>\n      }\n      footer={\n        <ModalBoxFooter\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%',\n            flexDirection: 'column',\n            paddingTop: 0,\n          }}\n        >\n          <Button\n            key=\"get-started\"\n            component=\"a\"\n            className=\"pf-u-mb-md\"\n            variant=\"primary\"\n            target=\"_blank\"\n            href=\"https://www.redhat.com/en/technologies/linux-platforms/enterprise-linux/try-it\"\n          >\n            Get started\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"interactive-demo\"\n            className=\"pf-u-mb-md\"\n            variant=\"secondary\"\n            target=\"_blank\"\n            href=\"https://red.ht/edgemanagementlab\"\n          >\n            Try the interactive demo\n          </Button>\n          <Button\n            component=\"a\"\n            key=\"not-now\"\n            variant=\"link\"\n            href={`https://${window.location.host}`}\n          >\n            Not now\n          </Button>\n        </ModalBoxFooter>\n      }\n      title=\"Edge management requires a valid subscription\"\n      width=\"640px\"\n    >\n      <img\n        style={{ margin: '0 auto', display: 'block' }}\n        src={edgeIcon}\n        width=\"200px\"\n        alt=\"edge icon\"\n      />\n      <p className=\"pf-u-pr-xl pf-u-pl-xl pf-u-text-align-center\">\n        Securely manage and scale deployments at the edge with zero-touch\n        provisioning, system health visibility, and quick security remediations\n        and more with a Red Hat Satellite subscription\n      </p>\n    </Modal>\n  );\n};\n\nexport default AuthModal;\n","import React, { useEffect, Fragment, useContext, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { RegistryContext } from './store';\nimport { Routes } from './Routes';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { NotificationPortal } from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport AuthModal from './components/AuthModal';\nimport { Bullseye, Spinner } from '@patternfly/react-core';\n\nconst App = (props) => {\n  const { getRegistry } = useContext(RegistryContext);\n  const [isLogged, setIsLogged] = useState(false);\n  const history = useHistory();\n  const [isAuth, setIsAuth] = useState(null);\n  useEffect(() => {\n    insights.chrome.identifyApp('fleet-management');\n\n    insights.chrome.on('APP_NAVIGATION', (event) =>\n      history.push(`/${event.navId}`)\n    );\n\n    const registered = getRegistry().register({\n      notifications: notificationsReducer,\n    });\n    (async () => {\n      await insights.chrome.auth.getUser();\n      setIsLogged(true);\n    })();\n\n    (async () => {\n      const data = await insights.chrome.auth.getUser();\n      setIsAuth(data.entitlements.smart_management.is_entitled);\n    })();\n\n    return () => {\n      registered();\n    };\n  }, []);\n\n  return (\n    <Fragment>\n      <NotificationPortal />\n      {isAuth && isLogged ? (\n        <Routes childProps={props} />\n      ) : isAuth === null ? (\n        <Bullseye>\n          <Spinner size=\"xl\" />\n        </Bullseye>\n      ) : (\n        <AuthModal />\n      )}\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init, RegistryContext } from './store';\nimport App from './App';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport logger from 'redux-logger';\n\nconst AppEntry = ({ hasLogger }) => {\n  // Initialize reducer registry only at initial render.\n  const registry = useMemo(() => (hasLogger ? init(logger) : init()), []);\n  return (\n    <RegistryContext.Provider\n      value={{\n        getRegistry: () => registry,\n      }}\n    >\n      <Provider store={registry.getStore()}>\n        <Router basename={getBaseName(window.location.pathname, 1)}>\n          <App />\n        </Router>\n      </Provider>\n    </RegistryContext.Provider>\n  );\n};\n\nAppEntry.propTypes = {\n  hasLogger: PropTypes.bool,\n};\n\nexport default AppEntry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport InventoryApp from './AppEntry';\n\nReactDOM.render(<InventoryApp />, document.getElementById('root'));\n","export const routes = {\n  groups: '/groups',\n  groupsDetail: '/groups/:uuid',\n  deviceDetail: '/groups/:uuid/:inventoryId',\n  canaries: '/canaries',\n  fleetManagement: '/fleet-management',\n  fleetManagementDetail: '/fleet-management/:groupId',\n  fleetManagementSystemDetail: '/fleet-management/:groupId/systems/:deviceId',\n  fleetManagementSystemDetailUpdate:\n    '/fleet-management/:groupId/systems/:deviceId/update',\n  inventory: '/inventory',\n  inventoryDetail: '/inventory/:deviceId',\n  inventoryDetailUpdate: '/inventory/:deviceId/update',\n  manageImages: '/manage-images',\n  manageImagesDetail: '/manage-images/:imageId',\n  manageImagesDetailVersion: '/manage-images/:imageId/versions/:imageVersionId',\n  repositories: '/repositories',\n  learningResources: '/learning-resources',\n};\n","const POLLING_SUFFIX = 'POLLING';\n\nconst hasPollingData = (polling = {}) => {\n  return polling?.id && polling?.fetcher && polling?.condition;\n};\n\nconst ofPollingType = (type) => type.endsWith(`_${POLLING_SUFFIX}`);\n\nexport const polling =\n  (pollHash = {}) =>\n  ({ dispatch }) =>\n  (next) =>\n  (action) => {\n    const { type, payload, meta } = action;\n    if (ofPollingType(type) && hasPollingData(payload)) {\n      const { id, fetcher, condition, onEvent } = payload;\n      if (pollHash[id]) {\n        return;\n      }\n      pollHash[id] = true;\n      setTimeout(() => {\n        dispatch({\n          type: id,\n          payload: fetcher().then((resp) => {\n            pollHash[id] = false;\n            const [toContinue, stateName] = condition(resp);\n            const nextActions = onEvent?.[stateName] || [];\n            nextActions.forEach((action) => action(dispatch));\n            if (toContinue) {\n              dispatch(action);\n            }\n          }),\n        }).catch(() => null);\n      }, 15 * 1000);\n      return;\n    }\n\n    if (hasPollingData(meta?.polling)) {\n      const { id, fetcher, condition, onEvent } = meta.polling;\n      dispatch({\n        type: `${id}_POLLING`,\n        payload: {\n          id,\n          fetcher,\n          condition,\n          onEvent,\n        },\n      });\n    }\n\n    next(action);\n  };\n","import { createContext } from 'react';\nimport { ReducerRegistry } from '@redhat-cloud-services/frontend-components-utilities/ReducerRegistry';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications/notificationsMiddleware';\nimport { polling } from './polling';\n\nexport const RegistryContext = createContext({\n  getRegistry: () => {},\n});\n\nexport function init(...middleware) {\n  return new ReducerRegistry({}, [\n    promiseMiddleware,\n    notificationsMiddleware({\n      errorDescriptionKey: ['detail', 'stack'],\n    }),\n    polling(),\n    ...middleware,\n  ]);\n}\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","addNotification","notification","type","payload","id","Date","getTime","Math","random","toString","slice","removeNotification","index","clearNotifications","DeviceDetail","React","Groups","GroupsDetail","Inventory","UpdateSystem","Images","ImageDetail","Repositories","LearningResources","Routes","Suspense","fallback","Bullseye","Spinner","size","exact","path","paths","component","to","Modal","style","padding","isOpen","variant","onClose","window","location","href","host","header","className","footer","ModalBoxFooter","display","justifyContent","width","flexDirection","paddingTop","Button","key","target","title","margin","src","edgeIcon","alt","props","getRegistry","useContext","RegistryContext","useState","isLogged","setIsLogged","history","useHistory","isAuth","setIsAuth","useEffect","insights","chrome","identifyApp","on","event","push","navId","registered","register","notifications","notificationsReducer","auth","getUser","data","entitlements","smart_management","is_entitled","Fragment","NotificationPortal","childProps","AppEntry","hasLogger","registry","useMemo","init","logger","value","Provider","store","getStore","basename","getBaseName","pathname","propTypes","PropTypes","ReactDOM","document","getElementById","routes","groups","groupsDetail","deviceDetail","canaries","fleetManagement","fleetManagementDetail","fleetManagementSystemDetail","fleetManagementSystemDetailUpdate","inventory","inventoryDetail","inventoryDetailUpdate","manageImages","manageImagesDetail","manageImagesDetailVersion","repositories","learningResources","hasPollingData","polling","fetcher","condition","ofPollingType","endsWith","pollHash","dispatch","next","action","meta","onEvent","setTimeout","then","resp","toContinue","stateName","forEach","createContext","middleware","ReducerRegistry","promiseMiddleware","notificationsMiddleware","errorDescriptionKey"],"sourceRoot":""}