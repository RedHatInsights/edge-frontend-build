{"version":3,"file":"js/UpdateDeviceModal.8f2af99d18881ee5d98a.js","mappings":"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","sources":["webpack:///./node_modules/@data-driven-forms/pf4-component-mapper/esm/dual-list-context/dual-list-context.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/parse-condition/parse-condition.js","webpack:///./node_modules/@data-driven-forms/react-form-renderer/esm/validator-types/validator-types.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextList.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Text/TextListItem.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/helper.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/DateFormat/DateFormat.js","webpack:///./src/components/BuildModalReview.js","webpack:///./src/Routes/Devices/UpdateDeviceModal.js","webpack:///./src/api/devices/index.js","webpack:///./src/api/images/index.js","webpack:///./src/components/Modal.js","webpack:///./node_modules/lodash/isEmpty.js","webpack:///./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack:///./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack:///./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import { createContext } from 'react';\nvar DualListContext = /*#__PURE__*/createContext({});\nexport default DualListContext;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport lodashIsEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get';\n\nvar isEmptyValue = function isEmptyValue(value) {\n  return typeof value === 'number' || value === true ? false : lodashIsEmpty(value);\n};\n\nvar fieldCondition = function fieldCondition(value, config) {\n  if (config.isNotEmpty) {\n    return !isEmptyValue(value);\n  }\n\n  if (config.isEmpty) {\n    return isEmptyValue(value);\n  }\n\n  if (config.pattern) {\n    var regExpPattern = RegExp(config.pattern, config.flags);\n    return config.notMatch ? !regExpPattern.test(value) : regExpPattern.test(value);\n  }\n\n  if (typeof config.is === 'function') {\n    return config.is(value, config);\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThan')) {\n    return value > config.greaterThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'greaterThanOrEqualTo')) {\n    return value >= config.greaterThanOrEqualTo;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThan')) {\n    return value < config.lessThan;\n  }\n\n  if (Object.prototype.hasOwnProperty.call(config, 'lessThanOrEqualTo')) {\n    return value <= config.lessThanOrEqualTo;\n  }\n\n  var isMatched = Array.isArray(config.is) ? !!config.is.includes(value) : value === config.is;\n  return config.notMatch ? !isMatched : isMatched;\n};\n\nexport var parseCondition = function parseCondition(condition, values, field) {\n  var positiveResult = _objectSpread(_objectSpread({\n    visible: true\n  }, condition.then), {}, {\n    result: true\n  });\n\n  var negativeResult = _objectSpread(_objectSpread({\n    visible: false\n  }, condition[\"else\"]), {}, {\n    result: false\n  });\n\n  if (Array.isArray(condition)) {\n    return !condition.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref) {\n      var result = _ref.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.and) {\n    return !condition.and.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref2) {\n      var result = _ref2.result;\n      return result === false;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.sequence) {\n    return condition.sequence.reduce(function (acc, curr) {\n      var result = parseCondition(curr, values);\n      return {\n        sets: [].concat(_toConsumableArray(acc.sets), _toConsumableArray(result.set ? [result.set] : [])),\n        visible: acc.visible || result.visible,\n        result: acc.result || result.result\n      };\n    }, _objectSpread(_objectSpread({}, negativeResult), {}, {\n      sets: []\n    }));\n  }\n\n  if (condition.or) {\n    return condition.or.map(function (condition) {\n      return parseCondition(condition, values, field);\n    }).some(function (_ref3) {\n      var result = _ref3.result;\n      return result === true;\n    }) ? positiveResult : negativeResult;\n  }\n\n  if (condition.not) {\n    return !parseCondition(condition.not, values).result ? positiveResult : negativeResult;\n  }\n\n  var finalWhen = typeof condition.when === 'function' ? condition.when(field) : condition.when;\n\n  if (typeof finalWhen === 'string') {\n    return fieldCondition(get(values, finalWhen), condition) ? positiveResult : negativeResult;\n  }\n\n  if (Array.isArray(finalWhen)) {\n    return finalWhen.map(function (fieldName) {\n      return fieldCondition(get(values, typeof fieldName === 'function' ? fieldName(field) : fieldName), condition);\n    }).find(function (condition) {\n      return !!condition;\n    }) ? positiveResult : negativeResult;\n  }\n\n  return negativeResult;\n};\nexport default parseCondition;","var validatorTypes = {\n  REQUIRED: 'required',\n  MIN_LENGTH: 'min-length',\n  MAX_LENGTH: 'max-length',\n  EXACT_LENGTH: 'exact-length',\n  MIN_ITEMS: 'min-items',\n  MIN_NUMBER_VALUE: 'min-number-value',\n  MAX_NUMBER_VALUE: 'max-number-value',\n  PATTERN: 'pattern',\n  URL: 'url'\n};\nexport default validatorTypes;","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListVariants;\n(function (TextListVariants) {\n    TextListVariants[\"ul\"] = \"ul\";\n    TextListVariants[\"ol\"] = \"ol\";\n    TextListVariants[\"dl\"] = \"dl\";\n})(TextListVariants || (TextListVariants = {}));\nexport const TextList = (_a) => {\n    var { children = null, className = '', component = TextListVariants.ul } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(className) }), children));\n};\nTextList.displayName = 'TextList';\n//# sourceMappingURL=TextList.js.map","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport { css } from '@patternfly/react-styles';\nexport var TextListItemVariants;\n(function (TextListItemVariants) {\n    TextListItemVariants[\"li\"] = \"li\";\n    TextListItemVariants[\"dt\"] = \"dt\";\n    TextListItemVariants[\"dd\"] = \"dd\";\n})(TextListItemVariants || (TextListItemVariants = {}));\nexport const TextListItem = (_a) => {\n    var { children = null, className = '', component = TextListItemVariants.li } = _a, props = __rest(_a, [\"children\", \"className\", \"component\"]);\n    const Component = component;\n    return (React.createElement(Component, Object.assign({}, props, { className: css(className) }), children));\n};\nTextListItem.displayName = 'TextListItem';\n//# sourceMappingURL=TextListItem.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsxs as _jsxs, jsx as _jsx } from \"react/jsx-runtime\";\nimport { Tooltip } from '@patternfly/react-core';\nvar second = 1000;\nvar minute = second * 60;\nvar hour = minute * 60;\nvar day = hour * 24;\nvar month = day * 30;\nvar year = day * 365;\nvar formatTime = function (number, unit) { return \"\".concat(number, \" \").concat(number > 1 ? \"\".concat(unit, \"s\") : unit, \" ago\"); };\nvar relativeTimeTable = [\n    { rightBound: Infinity, description: function (date) { return formatTime(Math.round(date / year), 'year'); } },\n    { rightBound: year, description: function (date) { return formatTime(Math.round(date / month), 'month'); } },\n    { rightBound: month, description: function (date) { return formatTime(Math.round(date / day), 'day'); } },\n    { rightBound: day, description: function (date) { return formatTime(Math.round(date / hour), 'hour'); } },\n    { rightBound: hour, description: function (date) { return formatTime(Math.round(date / minute), 'minute'); } },\n    { rightBound: minute, description: function () { return 'Just now'; } },\n];\nvar exact = function (value) { return value.toUTCString().split(',')[1].slice(0, -7).trim(); };\nexport var addTooltip = function (date, element, tooltipProps, extraTitle) {\n    if (extraTitle === void 0) { extraTitle = ''; }\n    return (_jsx(Tooltip, __assign({}, tooltipProps, { content: _jsxs(\"div\", { children: [extraTitle, date] }) }, { children: element })));\n};\nexport var dateStringByType = function (type) {\n    return ({\n        exact: function (date) { return exact(date) + ' UTC'; },\n        onlyDate: function (date) { return exact(date).slice(0, -6); },\n        relative: function (date) {\n            return relativeTimeTable.reduce(function (acc, i) { return (i.rightBound > Date.now() - date.getTime() ? i.description(Date.now() - date.getTime()) : acc); }, exact(date));\n        },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\nexport var dateByType = function (type, tooltipProps, extraTitle) {\n    return ({\n        exact: function (date) { return dateStringByType(type)(date); },\n        onlyDate: function (date) { return dateStringByType(type)(date); },\n        relative: function (date) { return addTooltip(dateStringByType('exact')(date), _jsx(\"span\", { children: dateStringByType(type)(date) }), tooltipProps, extraTitle); },\n        invalid: function () { return 'Invalid date'; },\n    }[type]);\n};\n//# sourceMappingURL=helper.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { dateByType } from './helper';\nvar DateFormat = function (_a) {\n    var date = _a.date, _b = _a.type, type = _b === void 0 ? 'relative' : _b, extraTitle = _a.extraTitle, tooltipProps = _a.tooltipProps;\n    var dateObj = date instanceof Date ? date : new Date(date);\n    var invalid = date === undefined || date === null || dateObj.toString() === 'Invalid Date';\n    var dateType = invalid ? 'invalid' : type;\n    return _jsx(React.Fragment, { children: dateByType(dateType, tooltipProps, extraTitle)(dateObj) });\n};\nexport default DateFormat;\n//# sourceMappingURL=DateFormat.js.map","import React, { Fragment } from 'react';\nimport {\n  Title,\n  Text,\n  TextContent,\n  TextListItemVariants,\n  TextListVariants,\n  TextList,\n  TextListItem,\n} from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\n\nconst BuildModalReview = ({ reviewObject, key }) => {\n  return (\n    <TextContent>\n      <Title headingLevel=\"h3\">\n        <Text component={'b'}>{reviewObject.title}</Text>\n      </Title>\n      <TextList component={TextListVariants.dl}>\n        {reviewObject.rows.map((row) => (\n          <Fragment key={row.title + key}>\n            <TextListItem component={TextListItemVariants.dt}>\n              {row.title}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {row.value}\n            </TextListItem>\n          </Fragment>\n        ))}\n      </TextList>\n    </TextContent>\n  );\n};\n\nBuildModalReview.propTypes = {\n  reviewObject: PropTypes.object,\n  key: PropTypes.string,\n};\n\nexport default BuildModalReview;\n","import React, { useEffect, useState } from 'react';\nimport {\n  TextContent,\n  Text,\n  Bullseye,\n  Backdrop,\n  Spinner,\n  Alert,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport PropTypes from 'prop-types';\nimport { getImageById, getImageSet } from '../../api/images';\nimport { updateSystem } from '../../api/devices';\nimport { useDispatch } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport Modal from '../../components/Modal';\nimport componentTypes from '@data-driven-forms/react-form-renderer/component-types';\nimport BuildModalReview from '../../components/BuildModalReview';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { distributionMapper } from '../../constants';\n\nconst getImageData = (imageId) =>\n  getImageById({ id: imageId }).then((imageSetId) =>\n    getImageSet({\n      id: imageSetId?.image?.ImageSetID,\n      q: {\n        limit: 1,\n        sort_by: '-created_at',\n      },\n    })\n  );\n\nconst UpdateDeviceModal = ({ updateModal, setUpdateModal, refreshTable }) => {\n  const [imageData, setImageData] = useState(null);\n  const dispatch = useDispatch();\n  const isMultiple = updateModal.deviceData.length > 1;\n  const deviceId = updateModal.deviceData.map((device) => device.id);\n  const deviceName = isMultiple\n    ? updateModal.deviceData.map((device) => device.display_name)\n    : updateModal?.deviceData[0]?.display_name;\n\n  useEffect(() => {\n    updateModal?.imageSetId\n      ? getImageSet({\n          id: updateModal.imageSetId,\n          q: {\n            limit: 1,\n            sort_by: '-created_at',\n            status: 'SUCCESS',\n          },\n        }).then((data) => setImageData(data.Data.images[0]))\n      : getImageData(updateModal.imageId).then((data) =>\n          setImageData(data.Data.images[0])\n        );\n  }, []);\n\n  const handleUpdateModal = async () => {\n    try {\n      await updateSystem({\n        DevicesUUID: deviceId,\n      });\n      dispatch({\n        ...addNotification({\n          variant: 'info',\n          title: 'Updating system',\n          description: isMultiple\n            ? ` ${deviceName.length} systems were added to the queue.`\n            : ` ${deviceName} was added to the queue.`,\n        }),\n      });\n    } catch (err) {\n      dispatch({\n        ...addNotification({\n          variant: 'danger',\n          title: 'Updating a system was unsuccessful',\n          description: `Response: ${err.statusText}`,\n        }),\n      });\n    }\n\n    handleClose();\n    refreshTable ? refreshTable() : null;\n  };\n\n  const handleClose = () => {\n    setUpdateModal((prevState) => {\n      return {\n        ...prevState,\n        isOpen: false,\n      };\n    });\n  };\n\n  const WarningText = () => (\n    <TextContent className=\"pf-u-pt-md\">\n      <Text\n        style={{ color: 'var(--pf-global--warning-color--200' }}\n        component=\"small\"\n      >\n        <ExclamationTriangleIcon\n          style={{ color: 'var(--pf-global--warning-color--100' }}\n        />{' '}\n        After the update is installed, the system will apply the changes.\n      </Text>\n    </TextContent>\n  );\n\n  const Description = () => (\n    <TextContent>\n      <Text>\n        Update{' '}\n        <span className=\"pf-u-font-weight-bold pf-u-font-size-md\">\n          {isMultiple ? `${deviceName.length} systems` : deviceName}\n        </span>{' '}\n        to latest version of the image linked to it.\n      </Text>\n      {updateModal.deviceData.some(\n        (device) =>\n          device.deviceStatus !== 'updateAvailable' &&\n          device.deviceStatus !== 'error'\n      ) && (\n        <Alert\n          variant=\"info\"\n          isInline\n          title=\"Some systems will not be updated. This action will update only systems with an update available.\"\n          style={{ '--pf-c-content--h4--MarginTop': 0 }}\n        />\n      )}\n    </TextContent>\n  );\n\n  const updateToDetails = {\n    title: `Update to version ${imageData?.image.Version}`,\n    rows: [\n      { title: 'Image Name', value: imageData?.image.Name },\n      { title: 'Version', value: imageData?.image.Version },\n      {\n        title: 'Created',\n        value: <DateFormat date={imageData?.image.CreatedAt} />,\n      },\n      {\n        title: 'Release',\n        value: distributionMapper[imageData?.image.Distribution],\n      },\n    ],\n  };\n\n  const packageDetails = {\n    title: `Changes from version ${imageData?.image.Version - 1}`,\n    rows: [\n      { title: 'Added', value: imageData?.update_added || 0 },\n      { title: 'Removed', value: imageData?.update_removed || 0 },\n      { title: 'Updated', value: imageData?.update_updated || 0 },\n    ],\n  };\n\n  const updateSchema = {\n    fields: [\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'description',\n        label: Description(),\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'update-details',\n        label: BuildModalReview({\n          reviewObject: updateToDetails,\n          key: 'update-details',\n        }),\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'package-details',\n        label: BuildModalReview({\n          reviewObject: packageDetails,\n          key: 'package-details',\n        }),\n      },\n      {\n        component: componentTypes.PLAIN_TEXT,\n        name: 'warning-text',\n        label: WarningText(),\n      },\n    ],\n  };\n\n  return (\n    <>\n      {imageData ? (\n        <Modal\n          size=\"medium\"\n          title={`Update system${\n            isMultiple ? 's' : ''\n          } to latest image version`}\n          isOpen={updateModal.isOpen}\n          closeModal={() =>\n            setUpdateModal((prevState) => ({ ...prevState, isOpen: false }))\n          }\n          submitLabel=\"Update system\"\n          schema={updateSchema}\n          onSubmit={handleUpdateModal}\n          reloadData={refreshTable}\n        />\n      ) : (\n        <Backdrop>\n          <Bullseye>\n            <Spinner isSVG diameter=\"100px\" />\n          </Bullseye>\n        </Backdrop>\n      )}\n    </>\n  );\n};\n\nUpdateDeviceModal.propTypes = {\n  refreshTable: PropTypes.func,\n  updateModal: PropTypes.shape({\n    isOpen: PropTypes.bool.isRequired,\n    deviceData: PropTypes.array.isRequired,\n    imageData: PropTypes.object,\n    imageId: PropTypes.number,\n    imageSetId: PropTypes.number,\n  }).isRequired,\n  setUpdateModal: PropTypes.func.isRequired,\n};\n\nexport default UpdateDeviceModal;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getInventory = ({ query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/devicesview?${q}`);\n};\n\nexport const getDevice = (id) => {\n  return instance.get(`${EDGE_API}/devices/${id}`);\n};\n\nexport const getDeviceUpdates = ({ id, query }) => {\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/devices/${id}?${q}`);\n};\n\nexport const updateSystem = async (payload) => {\n  return await instance.post(`${EDGE_API}/updates`, payload);\n};\n","import {\n  CONTENT_SOURCES_API,\n  EDGE_API,\n  IMAGE_BUILDER_API,\n  getTableParams,\n} from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const checkImageName = (name) => {\n  const payload = {\n    name,\n  };\n  return instance.post(`${EDGE_API}/images/checkImageName`, payload);\n};\n\nexport const fetchImageStatus = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const fetchActiveImages = ({ limit = 100, offset = 0 } = {}) => {\n  return instance.get(\n    `${IMAGE_BUILDER_API}/composes?limit=${limit}&offset=${offset}`\n  );\n};\n\nexport const createImage = ({\n  Id,\n  name,\n  version,\n  description,\n  release,\n  architecture,\n  username,\n  credentials,\n  imageType: imageTypes,\n  'selected-packages': packages,\n  'third-party-repositories': thirdPartyRepositories,\n  'custom-packages': customPackages,\n}) => {\n  let [imageType] = imageTypes || [];\n  if (imageTypes.length > 1) {\n    imageType = 'rhel-edge-installer';\n  }\n  const payload = {\n    name,\n    version,\n    description,\n    distribution: release,\n    imageType: imageType,\n    packages: packages?.map((item) => ({ name: item.name })),\n    outputTypes: imageTypes,\n    commit: {\n      arch: architecture,\n    },\n    installer: {\n      username,\n      sshkey: credentials,\n    },\n    thirdPartyRepositories: thirdPartyRepositories?.map((repo) => ({\n      ID: repo.id,\n      Name: repo.name,\n      URL: repo.URL,\n      uuid: repo.uuid,\n    })),\n    customPackages: customPackages?.map((repo) => ({ Name: repo.name })),\n  };\n\n  let endpoint = `${EDGE_API}/images`;\n\n  if (version > 1) {\n    endpoint += `/${Id}/update`;\n  }\n\n  return instance.post(endpoint, payload);\n};\n\nexport const getImageSet = ({\n  id,\n  q = {\n    limit: 10,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets/${id}?${query}`);\n};\n\nexport const getImageSetViewVersions = ({\n  imageSetID,\n  query = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  },\n}) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/image-sets/view/${imageSetID}/versions?${q}`\n  );\n};\n\nexport const getImageSetView = ({ id }) => {\n  return instance.get(`${EDGE_API}/image-sets/view/${id}`);\n};\n\nexport const getImagePackageMetadata = (id) => {\n  try {\n    return instance.get(`${EDGE_API}/images/${id}/metadata`);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const fetchEdgeImages = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/images?${query}`);\n};\n\nexport const fetchEdgeImageSets = (\n  q = {\n    limit: 20,\n    offset: 0,\n    sort_by: '-created_at',\n  }\n) => {\n  const query = getTableParams(q);\n  return instance.get(`${EDGE_API}/image-sets?${query}`);\n};\n\nexport const getEdgeImageStatus = (id) => {\n  return instance.get(`${EDGE_API}/images/${id}/status`);\n};\n\nexport const getImageDataOnDevice = (id) => {\n  return instance.get(`${EDGE_API}/updates/device/${id}/image`);\n};\n\nexport const getPackages = async (distribution, architecture, search) => {\n  const params = new URLSearchParams({\n    distribution,\n    architecture,\n    search,\n  });\n  return instance(`${IMAGE_BUILDER_API}/packages?${params.toString()}`);\n};\n\nexport const getImageById = ({ id }) => {\n  return instance.get(`${EDGE_API}/images/${id}/details`);\n};\n\nexport const getImageSets = ({ query }) => {\n  if (query === '') {\n    query = { limit: 20, offset: 0, sort_by: '-updated_at' };\n  }\n  const q = getTableParams(query);\n  return instance.get(`${EDGE_API}/image-sets/view?${q}`);\n};\n\nexport const postRpmsNames = (urls, search) => {\n  return instance.post(`${CONTENT_SOURCES_API}/rpms/names`, {\n    urls: urls,\n    search: search,\n  });\n};\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  closeModal,\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n  validatorMapper,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={closeModal}\n    >\n      <FormRenderer\n        schema={schema}\n        validatorMapper={validatorMapper}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          closeModal();\n        }}\n        onCancel={() => closeModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  closeModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n  validatorMapper: PropTypes.object,\n};\n\nexport default RepoModal;\n","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["createContext","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","isEmptyValue","value","fieldCondition","config","isNotEmpty","isEmpty","pattern","regExpPattern","RegExp","flags","notMatch","test","is","prototype","hasOwnProperty","call","greaterThan","greaterThanOrEqualTo","lessThan","lessThanOrEqualTo","isMatched","Array","isArray","includes","parseCondition","condition","values","field","positiveResult","visible","then","result","negativeResult","map","some","_ref","and","_ref2","sequence","reduce","acc","curr","sets","concat","set","or","_ref3","not","finalWhen","when","fieldName","find","REQUIRED","MIN_LENGTH","MAX_LENGTH","EXACT_LENGTH","MIN_ITEMS","MIN_NUMBER_VALUE","MAX_NUMBER_VALUE","PATTERN","URL","TextListVariants","TextList","_a","children","className","component","ul","props","__rest","Component","assign","displayName","TextListItemVariants","TextListItem","li","__assign","t","s","n","p","this","hour","minute","day","month","year","formatTime","number","unit","relativeTimeTable","rightBound","Infinity","description","date","Math","round","second","exact","toUTCString","split","slice","trim","dateStringByType","type","onlyDate","relative","Date","now","getTime","invalid","dateByType","tooltipProps","extraTitle","element","Tooltip","content","addTooltip","_b","dateObj","dateType","toString","BuildModalReview","reviewObject","TextContent","Title","headingLevel","Text","title","rows","row","Fragment","T","propTypes","PropTypes","UpdateDeviceModal","updateModal","setUpdateModal","refreshTable","useState","imageData","setImageData","dispatch","useDispatch","isMultiple","deviceData","deviceId","device","id","deviceName","display_name","useEffect","imageId","imageSetId","getImageSet","q","limit","sort_by","status","data","Data","images","getImageById","image","ImageSetID","handleUpdateModal","updateSystem","DevicesUUID","addNotification","variant","statusText","handleClose","prevState","isOpen","updateToDetails","Version","Name","DateFormat","CreatedAt","distributionMapper","Distribution","packageDetails","update_added","update_removed","update_updated","updateSchema","fields","componentTypes","name","label","deviceStatus","Alert","isInline","style","color","Modal","size","closeModal","submitLabel","schema","onSubmit","reloadData","Backdrop","Bullseye","Spinner","isSVG","diameter","isRequired","getInventory","query","getTableParams","instance","EDGE_API","getDevice","getDeviceUpdates","payload","checkImageName","createImage","Id","version","release","architecture","username","credentials","imageTypes","imageType","packages","thirdPartyRepositories","customPackages","distribution","item","outputTypes","commit","arch","installer","sshkey","repo","ID","uuid","endpoint","offset","getImageSetViewVersions","imageSetID","getImageSetView","fetchEdgeImageSets","getEdgeImageStatus","getImageDataOnDevice","getPackages","search","params","URLSearchParams","IMAGE_BUILDER_API","getImageSets","postRpmsNames","urls","CONTENT_SOURCES_API","RepoModal","titleIconVariant","initialValues","additionalMappers","validatorMapper","onClose","FormTemplate","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel","baseKeys","getTag","isArguments","isArrayLike","isBuffer","isPrototype","isTypedArray","module","exports","splice","tag","_iterableToArray","iter","Symbol","iterator","from","_toConsumableArray","arr","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}