{"version":3,"file":"js/5508.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack:///./src/Routes/Repositories/modals/AddModal.js","webpack:///./src/Routes/Repositories/modals/EditModal.js","webpack:///./src/Routes/Repositories/modals/RemoveModal.js","webpack:///./src/Routes/Repositories/TableHeader.js","webpack:///./src/Routes/Repositories/RepositoryTable.js","webpack:///./src/Routes/Repositories/RepositoryHeader.js","webpack:///./src/Routes/Repositories/Repositories.js","webpack:///./src/api/repositories/index.js","webpack:///./src/components/Modal.js"],"sourcesContent":["\"use strict\"\nexports.__esModule = true;\nexports.ExclamationTriangleIconConfig = {\n  name: 'ExclamationTriangleIcon',\n  height: 512,\n  width: 576,\n  svgPath: 'M569.517 440.013C587.975 472.007 564.806 512 527.94 512H48.054c-36.937 0-59.999-40.055-41.577-71.987L246.423 23.985c18.467-32.009 64.72-31.951 83.154 0l239.94 416.028zM288 354c-25.405 0-46 20.595-46 46s20.595 46 46 46 46-20.595 46-46-20.595-46-46-46zm-43.673-165.346l7.418 136c.347 6.364 5.609 11.346 11.982 11.346h48.546c6.373 0 11.635-4.982 11.982-11.346l7.418-136c.375-6.874-5.098-12.654-11.982-12.654h-63.383c-6.884 0-12.356 5.78-11.981 12.654z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.ExclamationTriangleIcon = require('../createIcon').createIcon(exports.ExclamationTriangleIconConfig);\nexports[\"default\"] = exports.ExclamationTriangleIcon;","\"use strict\"\nexports.__esModule = true;\nexports.OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\nexports.OutlinedQuestionCircleIcon = require('../createIcon').createIcon(exports.OutlinedQuestionCircleIconConfig);\nexports[\"default\"] = exports.OutlinedQuestionCircleIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { createCustomRepository } from '../../../api/repositories';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { nameValidator } from '../../../utils';\n\nconst AddModal = ({ isOpen, openModal, reloadData }) => {\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label:\n          'Link to a custom repository to add packages to RHEL for Edge images.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }, nameValidator],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: 'Enter the baseURL for the custom repository.',\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Add repository\"\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'add' })}\n      submitLabel=\"Add\"\n      schema={addSchema}\n      onSubmit={(values) => createCustomRepository(values)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nAddModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n};\n\nexport default AddModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { HelperText, HelperTextItem } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport validatorTypes from '@data-driven-forms/react-form-renderer/validator-types';\nimport { editCustomRepository } from '../../../api/repositories';\n\nconst EditModal = ({ openModal, isOpen, id, name, baseURL, reloadData }) => {\n  const editSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'title',\n        label: 'Update information about this custom repository.',\n      },\n      {\n        component: 'text-field',\n        name: 'name',\n        label: 'Name',\n        placeholder: 'Repository name',\n        helperText:\n          'Can only contain letters, numbers, spaces, hyphens ( - ), and underscores( _ ).',\n        isRequired: true,\n        validate: [{ type: validatorTypes.REQUIRED }],\n      },\n      {\n        component: 'textarea',\n        name: 'baseURL',\n        label: 'BaseURL',\n        placeholder: 'https://',\n        helperText: (\n          <HelperText hasIcon>\n            <HelperTextItem className=\"pf-u-pb-md\" variant=\"warning\" hasIcon>\n              If you change the repo URL, you may not have access to the\n              packages that were used to build images that reference this\n              repository.\n            </HelperTextItem>\n          </HelperText>\n        ),\n\n        isRequired: true,\n        validate: [\n          { type: validatorTypes.REQUIRED },\n          { type: validatorTypes.URL, message: 'Must be a valid url' },\n        ],\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Edit repository\"\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'edit' })}\n      submitLabel=\"Update\"\n      schema={editSchema}\n      initialValues={{ id, name, baseURL }}\n      onSubmit={(values) => editCustomRepository(values)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nEditModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default EditModal;\n","import React from 'react';\nimport Modal from '../../../components/Modal';\nimport { TextContent, Text } from '@patternfly/react-core';\nimport ExclamationTriangleIcon from '@patternfly/react-icons/dist/js/icons/exclamation-triangle-icon';\nimport warningColor from '@patternfly/react-tokens/dist/esm/global_warning_color_100';\nimport PropTypes from 'prop-types';\nimport { removeCustomRepository } from '../../../api/repositories';\n\nconst LabelWithText = ({ label, text }) => {\n  return (\n    <TextContent>\n      <Text component={'b'}>{label}</Text>\n      <Text>{text}</Text>\n    </TextContent>\n  );\n};\n\nLabelWithText.propTypes = {\n  label: PropTypes.string,\n  text: PropTypes.string,\n};\n\nconst WarningIcon = () => (\n  <ExclamationTriangleIcon color={warningColor.value} />\n);\n\nconst RemoveModal = ({ openModal, id, isOpen, name, baseURL, reloadData }) => {\n  const addSchema = {\n    fields: [\n      {\n        component: 'plain-text',\n        name: 'description',\n        label:\n          'Removing a repository could affect your ability to update images.',\n      },\n      {\n        component: 'plain-text',\n        name: 'name',\n        label: <LabelWithText label=\"Name\" text={name} />,\n      },\n      {\n        component: 'plain-text',\n        name: 'baseURL',\n        label: <LabelWithText label=\"baseURL\" text={baseURL} />,\n      },\n    ],\n  };\n\n  return (\n    <Modal\n      title=\"Remove repository\"\n      titleIconVariant={WarningIcon}\n      isOpen={isOpen}\n      openModal={() => openModal({ type: 'remove' })}\n      submitLabel=\"Remove\"\n      schema={addSchema}\n      initialValues={{ id }}\n      variant=\"danger\"\n      onSubmit={({ id }) => removeCustomRepository(id)}\n      reloadData={reloadData}\n    />\n  );\n};\n\nRemoveModal.propTypes = {\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  isOpen: PropTypes.bool,\n  id: PropTypes.number,\n  name: PropTypes.string,\n  baseURL: PropTypes.string,\n  setData: PropTypes.func,\n};\nexport default RemoveModal;\n","import React from 'react';\nimport { TextContent, Text, TextVariants } from '@patternfly/react-core';\n//import { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\n\nconst Header = () => {\n  return (\n    <TextContent style={{ padding: '15px', backgroundColor: 'white' }}>\n      <Text component={TextVariants.h1}>Custom repositories</Text>\n      <Text component={TextVariants.p}>\n        Add custom repositories to build RHEL for Edge images with additional\n        packages.{' '}\n        {/*<Text\n          style={{ display: 'inline' }}\n          component={TextVariants.small}\n          href=\"#\"\n        >\n          <Text component={TextVariants.a} href=\"#\">\n            Learn more\n            <ExternalLinkAltIcon size=\"sm\" className=\"pf-u-ml-sm\" />\n          </Text>\n        </Text>*/}\n      </Text>\n    </TextContent>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport GeneralTable from '../../components/general-table/GeneralTable';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { Text, TextVariants, Tooltip } from '@patternfly/react-core';\nimport PropTypes from 'prop-types';\nimport { truncateString } from '../../utils';\n\nconst filters = [{ label: 'Name', type: 'text' }];\n\nconst RepositoryTable = ({\n  data,\n  count,\n  isLoading,\n  hasError,\n  fetchRepos,\n  openModal,\n}) => {\n  const actionResolver = (rowData) => {\n    if (!rowData.rowInfo) {\n      return [];\n    }\n    const { id, repoName, repoBaseURL } = rowData.rowInfo;\n    return [\n      {\n        title: 'Edit',\n        onClick: () =>\n          openModal({\n            type: 'edit',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n      {\n        title: 'Remove',\n        onClick: () =>\n          openModal({\n            type: 'remove',\n            id: id,\n            name: repoName,\n            baseURL: repoBaseURL,\n          }),\n      },\n    ];\n  };\n\n  const buildRows = data.map(({ ID, Name, URL }) => {\n    return {\n      rowInfo: {\n        id: ID,\n        repoName: Name,\n        repoBaseURL: URL,\n      },\n      cells: [\n        {\n          title: (\n            <>\n              <Text className=\"pf-u-mb-xs\" component={TextVariants.p}>\n                <Tooltip content={<div>{Name}</div>}>\n                  <span>{truncateString(Name, 20)}</span>\n                </Tooltip>\n              </Text>\n              <Text\n                component={TextVariants.a}\n                href={URL}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                {URL} <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n              </Text>\n            </>\n          ),\n        },\n      ],\n    };\n  });\n\n  return (\n    <>\n      <GeneralTable\n        apiFilterSort={true}\n        isUseApi={true}\n        loadTableData={fetchRepos}\n        filters={filters}\n        tableData={{\n          count,\n          data,\n          isLoading,\n          hasError,\n        }}\n        columnNames={[{ title: 'Name', type: 'name', sort: true }]}\n        rows={buildRows}\n        actionResolver={actionResolver}\n        areActionsDisabled={() => false}\n        defaultSort={{ index: 0, direction: 'asc' }}\n        toolbarButtons={[\n          {\n            title: 'Add repository',\n            click: () => openModal({ type: 'add' }),\n          },\n        ]}\n      />\n    </>\n  );\n};\nRepositoryTable.propTypes = {\n  data: PropTypes.array,\n  count: PropTypes.number,\n  isLoading: PropTypes.bool,\n  hasError: PropTypes.bool,\n  openModal: PropTypes.func,\n  fetchRepos: PropTypes.func,\n};\n\nexport default RepositoryTable;\n","import React from 'react';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Popover } from '@patternfly/react-core';\nimport QuestionCircleIcon from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\n//import { ExternalLinkAltIcon } from \"@patternfly/react-icons\";\n\nconst RepositoryHeader = () => {\n  return (\n    <PageHeader>\n      <>\n        <PageHeaderTitle title=\"Applications settings\" />\n        <p className=\"pf-u-mt-sm\">\n          Settings for Edge Management\n          <Popover\n            aria-label=\"Basic popover\"\n            headerContent={<div>About Edge Management</div>}\n            bodyContent={\n              <div>\n                Edge Management is a service that allows you to provision,\n                update and maintain edge systems.\n              </div>\n            }\n            //footerContent={\n            //  <Button variant=\"link\" style={{ 'padding-left': 0 }}>\n            //    <a href=\"#\">Documentation</a>\n            //    <ExternalLinkAltIcon className=\"pf-u-ml-sm\" />\n            //  </Button>\n            //}\n          >\n            <QuestionCircleIcon\n              style={{ cursor: 'pointer' }}\n              className=\"pf-u-ml-xs\"\n              data-testid=\"test-pop-over\"\n            />\n          </Popover>\n        </p>\n      </>\n    </PageHeader>\n  );\n};\n\nexport default RepositoryHeader;\n","import React, { useState } from 'react';\nimport AddModal from './modals/AddModal';\nimport EditModal from './modals/EditModal';\nimport RemoveModal from './modals/RemoveModal';\nimport TableHeader from './TableHeader';\nimport RepositoryTable from './RepositoryTable';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport RepositoryHeader from './RepositoryHeader';\nimport useApi from '../../hooks/useApi';\nimport { getCustomRepositories } from '../../api/repositories';\nimport { useHistory } from 'react-router-dom';\nimport { emptyStateNoFliters } from '../../utils';\nimport { routes as paths } from '../../constants/routeMapper';\nimport EmptyState from '../../components/Empty';\n\nconst Repository = () => {\n  const history = useHistory();\n  const [response, fetchRepos] = useApi({\n    api: ({ query }) =>\n      getCustomRepositories({\n        imageID: '',\n        query,\n      }),\n    tableReload: true,\n  });\n  const { data, isLoading, hasError } = response;\n  const [modalDetails, setModalDetails] = useState({\n    isOpen: {\n      add: false,\n      edit: false,\n      remove: false,\n    },\n    id: null,\n    name: '',\n    baseURL: '',\n  });\n\n  const openModal = ({ type, id = null, name = '', baseURL = '' }) => {\n    setModalDetails((prevState) => ({\n      ...prevState,\n      id,\n      name,\n      baseURL,\n      isOpen: {\n        ...prevState.isOpen,\n        [type]: !prevState.isOpen[type],\n      },\n    }));\n  };\n\n  return (\n    <>\n      <RepositoryHeader />\n      <Main>\n        <>\n          <TableHeader />\n          {!emptyStateNoFliters(isLoading, data?.count, history) ? (\n            <RepositoryTable\n              data={data?.data || []}\n              count={data?.count}\n              openModal={openModal}\n              isLoading={isLoading}\n              hasError={hasError}\n              fetchRepos={fetchRepos}\n            />\n          ) : (\n            <EmptyState\n              icon=\"repository\"\n              title=\"No custom repositories available\"\n              body=\"Add custom repositories to build RHEL for Edge images with additional packages.\"\n              primaryAction={{\n                text: 'Custom repositories',\n                href: paths['repositories'],\n              }}\n            />\n          )}\n        </>\n        <AddModal\n          isOpen={modalDetails.isOpen.add}\n          openModal={openModal}\n          reloadData={fetchRepos}\n        />\n        <EditModal\n          isOpen={modalDetails.isOpen.edit}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          openModal={openModal}\n          reloadData={fetchRepos}\n        />\n        <RemoveModal\n          isOpen={modalDetails.isOpen.remove}\n          id={modalDetails.id}\n          name={modalDetails.name}\n          baseURL={modalDetails.baseURL}\n          openModal={openModal}\n          reloadData={fetchRepos}\n        />\n      </Main>\n    </>\n  );\n};\n\nexport default Repository;\n","import { EDGE_API, getTableParams } from '../index';\nimport { instance } from '@redhat-cloud-services/frontend-components-utilities/interceptors/interceptors';\n\nexport const getCustomRepositories = ({ imageID = '', query }) => {\n  const q = getTableParams(query);\n  return instance.get(\n    `${EDGE_API}/thirdpartyrepo?${imageID ? `imageID=${imageID}&` : ''}${q}`\n  );\n};\n\nexport const createCustomRepository = (payload) => {\n  return instance.post(`${EDGE_API}/thirdpartyrepo`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const editCustomRepository = (payload) => {\n  return instance.put(`${EDGE_API}/thirdpartyrepo/${payload.id}`, {\n    Name: payload.name,\n    URL: payload.baseURL,\n  });\n};\n\nexport const removeCustomRepository = (id) =>\n  instance.delete(`${EDGE_API}/thirdpartyrepo/${id}`);\n","import React from 'react';\nimport { Modal } from '@patternfly/react-core';\nimport FormRenderer from '@data-driven-forms/react-form-renderer/form-renderer';\nimport FormTemplate from '@data-driven-forms/pf4-component-mapper/form-template';\nimport componentMapper from '@data-driven-forms/pf4-component-mapper/component-mapper';\nimport PropTypes from 'prop-types';\n\nconst RepoModal = ({\n  isOpen,\n  title,\n  titleIconVariant,\n  openModal, // should be closeModal, update here and other places that use it\n  submitLabel,\n  schema,\n  initialValues,\n  variant,\n  reloadData,\n  size,\n  onSubmit,\n  additionalMappers,\n}) => {\n  return (\n    <Modal\n      variant={size ?? 'small'}\n      title={title}\n      titleIconVariant={titleIconVariant ?? null}\n      isOpen={isOpen}\n      onClose={openModal}\n    >\n      <FormRenderer\n        schema={schema}\n        FormTemplate={(props) => (\n          <FormTemplate\n            {...props}\n            submitLabel={submitLabel}\n            disableSubmit={['invalid']}\n            buttonsProps={{\n              submit: { variant },\n            }}\n          />\n        )}\n        initialValues={initialValues}\n        componentMapper={\n          additionalMappers\n            ? { ...additionalMappers, ...componentMapper }\n            : componentMapper\n        }\n        onSubmit={async (values) => {\n          await onSubmit(values);\n          setTimeout(async () => await reloadData(), 500);\n          openModal();\n        }}\n        onCancel={() => openModal()}\n      />\n    </Modal>\n  );\n};\n\nRepoModal.propTypes = {\n  isOpen: PropTypes.bool,\n  title: PropTypes.string,\n  openModal: PropTypes.func,\n  reloadData: PropTypes.func,\n  submitLabel: PropTypes.string,\n  schema: PropTypes.object,\n  initialValues: PropTypes.object,\n  variant: PropTypes.string,\n  onSubmit: PropTypes.func,\n  size: PropTypes.string,\n  additionalMappers: PropTypes.object,\n  titleIconVariant: PropTypes.any,\n};\n\nexport default RepoModal;\n"],"names":["exports","name","height","width","svgPath","yOffset","xOffset","PageHeaderTitle","_ref","className","title","pageHeaderTitleClasses","headingLevel","size","propTypes","AddModal","isOpen","openModal","reloadData","addSchema","fields","component","label","placeholder","helperText","isRequired","validate","type","validatorTypes","nameValidator","message","Modal","submitLabel","schema","onSubmit","values","createCustomRepository","PropTypes","EditModal","id","baseURL","editSchema","HelperText","hasIcon","HelperTextItem","variant","initialValues","editCustomRepository","setData","LabelWithText","text","TextContent","Text","WarningIcon","color","warningColor","RemoveModal","titleIconVariant","removeCustomRepository","style","padding","backgroundColor","TextVariants","filters","RepositoryTable","data","count","isLoading","hasError","fetchRepos","buildRows","map","ID","Name","URL","rowInfo","repoName","repoBaseURL","cells","Tooltip","content","truncateString","href","target","rel","GeneralTable","apiFilterSort","isUseApi","loadTableData","tableData","columnNames","sort","rows","actionResolver","rowData","onClick","areActionsDisabled","defaultSort","index","direction","toolbarButtons","click","PageHeader","Popover","headerContent","bodyContent","cursor","history","useHistory","useApi","api","query","getCustomRepositories","imageID","tableReload","response","useState","add","edit","remove","modalDetails","setModalDetails","prevState","Main","TableHeader","emptyStateNoFliters","Empty","icon","body","primaryAction","paths","q","getTableParams","instance","EDGE_API","payload","RepoModal","additionalMappers","onClose","FormTemplate","props","disableSubmit","buttonsProps","submit","componentMapper","setTimeout","onCancel"],"sourceRoot":""}